import React, { useRef, useState } from 'react'
import { app, api ,use} from 'xadmin';
import { Card, Tooltip } from 'antd'
import { C, Icon, Page } from 'xadmin-ui'
import Languages from './components/Languages'
import "./index.css"

const menus = [
  { title: _r('中台基础配置'), url: '/app/system/list/settings', icon: <Icon svg={require('./icon/newIcons/中台基础配置.svg')} />, permission: 'setting.edit' },
  { title: _r('前台系统配置'), url: '/app/system/list/reception_settings', icon: <Icon svg={require('./icon/newIcons/前台页面.svg')} />, permission: 'setting.edit' },
  { title: _r('模块配置'), url: '/app/system/list/modular_settings', icon: <Icon svg={require('./icon/newIcons/模块配置.svg')} />, permission: 'setting.edit' },
  { title: _r('通知服务配置'), url: '/app/system/list/notice_settings', icon: <Icon svg={require('./icon/newIcons/通知服务配置.svg')} />, permission: 'setting.edit' },
  { title: _r('催款模块'), url: '/app/system/list/press_for_money', icon: <Icon svg={require('./icon/newIcons/催款模块.svg')} />, permission: 'setting.edit', modelPermission: 'pressMoney' },
  { title: _r('安全请求'), url: '/app/system/list/safe_request', icon: <Icon svg={require('./icon/newIcons/安全请求.svg')} />, permission: 'setting.edit' }
]

export default {
  name: '系统设置',
  form_fields: {
    language: {
      component: Languages
    },
  },
  schema_converter: [(f, schema, options) => {
    if (schema.type === 'string' && schema.fieldType == 'language') {
      f.type = 'language'
    }
    return f
  }],
  menuItems: [
    { title: _r('系统设置'), url: '/app/system/list/settings', icon: '系统设置', permission: 'system.view' },
  ],
  models: {
    System: {
      name: 'system',
      type: 'object',
      icon: '系统设置',
      title: _r('系统设置'),
      rolePermission: [
        { key: 'system.view', title: _r('查看') },
      ],
      properties: {},
      permission: { view: true },
      components: {
        ListPage: props => {
          const [active, setActive] = useState(menus[0].url);
          const { settings} = use('settings')
          const { t: _t1 } = useI18n()
          const Click = (e, url) => {
            app.go(url)
            setActive(url)
          }
          const language = settings?.language

          // 权限
          const license = app.context?.user?.license
          const permissionMenus = menus.filter(m => m.modelPermission && license ? license.feature?.includes(m.modelPermission) : true)

          return <div className='SystemPane' style={{ width: ' 240px' }}>
            <Card title={_t1('系统设置')} style={{ height: '100vh' }}  >
              <ul>
                {permissionMenus.map(item => {
                  return (
                    <li className={`lili ${active == item.url ? 'li-active' : ''}`} key={item.title} onClick={(e) => Click(e, item?.url)}>{item.icon}
                     {language == 'en' ? (
                      <Tooltip title={_t1(item.title)}>
                        <span className='tit'>{_t1(item.title)}</span>
                      </Tooltip>
                    ) : (
                      <span className='tit'>{_t1(item.title)}</span>
                    )}</li>
                  )
                })}
              </ul>
            </Card>
          </div>
        }
      },
    }
  },
}













