// Core
import React from 'react'
import PropTypes from 'prop-types'

// Helpers
import _ from 'lodash'

// UI
import Any from '../Any'

// PropTypes
const { any, func, object, string } = PropTypes
const propTypes = {
  data: object,
  parent: string.isRequired,
  value: any,
  onChange: func.isRequired
}

const defaultProps = {
  data: {},
  value: ''
}

class HigherOrder extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      value: props.value
    }
  }

  componentWillReceiveProps(nextProps) {
    if (!_.isEqual(this.props.value, nextProps.value)) {
      this.setState({
        value: nextProps.value
      })
    }
  }

  onChange = (value) => {
    const newValue = {
      '=>': [ value ]
    }

    this.setState({ value: newValue }, () => this.props.onChange(newValue))
  }

  render() {
    const { parent, data } = this.props
    const { value } = this.state
    const firstElemOfValue = value['=>'] ? value['=>'][0] : {}

    return (
      <div className="HiWrapper">
        <div className="FatArrow">
          {'=>'}
        </div>

        <div className="Child">
          <Any
            onChange={this.onChange}
            parent={parent}
            data={data}
            value={firstElemOfValue}
          />
        </div>
      </div>
    )
  }
}

HigherOrder.propTypes = propTypes
HigherOrder.defaultProps = defaultProps

export default HigherOrder
