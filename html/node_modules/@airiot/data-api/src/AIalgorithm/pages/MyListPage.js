import React from 'react';
import { Button, Card, Row, Col, Input, Tag, Popconfirm, message ,Empty} from 'antd';
import { FormOutlined, DeleteOutlined, SearchOutlined } from '@ant-design/icons'
import { app, use, api } from 'xadmin';
import { Model } from 'xadmin-model'
import { Icon, Page, C, Loading } from 'xadmin-ui'
import _ from 'lodash'
import Tooltip from 'antd/es/tooltip';

const CardList = ({ algorList, deleteAlgor, loading }) => {
  const typeObj = { own: '自建' }
  if (loading) {
    return <Loading />
  }
  if (!algorList?.length) {
    return <Card><Empty description={'暂无数据'} image={require('../../imgs/算法.png')} /></Card>
  }
  return <div className='my-algor-list'>
    {
      algorList.map(al => <Card className="algor-card">
      <Row>
        <Col span={8}>
          <Icon svg={require('../../icons/AI.svg')} className="algor-logo" />
        </Col>
        <Col span={16}>
          <Tag className='algor-tag' color={al.algorithmType === 'own' ? 'green' : 'blue'}>
            {typeObj[al.algorithmType] || '非自建'}
          </Tag>
        </Col>
      </Row>
      <Row>
        <Col span={24}>
          <div className='algor-title'>
            {al.name}
          </div>
          <div className='algor-description'>
            <Tooltip title={al.describe} placement="topLeft">
              {al.describe}
            </Tooltip>
          </div>
          <div>
            {
              al.algorithmType === 'own' ? 
              <>
                <Button size="small" icon={<FormOutlined />} onClick={() => app.go(`app/model/algorithm/${al.id}/edit`)} />
                <Popconfirm
                  okText={_t1("确定")}
                  cancelText={_t1("取消")}
                  title={_t1("是否确认删除该算法?")}
                  onConfirm={() => deleteAlgor(al.id)}
                ><Button size="small" icon={<DeleteOutlined />} /></Popconfirm>
              </> :
              <Button type="primary" size="small" style={{ verticalAlign: 'middle' }} >上传授权</Button>
            }
            <Button
              type="primary"
              size="small"
              style={{ verticalAlign: 'middle', marginLeft: 5 }}
              onClick={() => app.go(`app/algorithm/debug/${al.id}`)}
            >调试与对比</Button>
          </div>
        </Col>
      </Row>
      </Card>)
    }
  </div>
}

const ListPage = props => {
  const { model: preModel } = use('model')
  const { modelI18n: model } = use('model.transI18n', { model: preModel })
  const [algorList, setAlgorList] = React.useState([])
  const [filter, setFilter] = React.useState('')
  const [loading, setLoading] = React.useState(false)

  React.useEffect(() => {
    getList()
  }, [])

  const getList = () => {
    setLoading(true)
    const fields = ['algorithmType', 'describe']
    api({ name: 'algorithm/algorithm' }).query({ fields }, {}).then(({ items }) => {
      setLoading(false)
      setAlgorList(items || [])
    })
  }

  const deleteAlgor = (id) => {
    api({ name: 'algorithm/algorithm' }).fetch(`/${id}`, { method: 'DELETE' }).then(({ status }) => {
      if (status == 200) {
        message.success(_t1('删除成功！'))
        getList()
      }
    })
  }

  const filterChange = _.debounce((e) => {
    setFilter(e.target.value)
  }, 500)

  return (
    <Model schema={model}>
      <Page title={(<span> <Icon svg={require('../../icons/我的算法.svg')} className='logIcon' /> {model?.title}</span>)}
        subTitle={<Input
          style={{ borderRadius: 15 }}
          placeholder="搜索名称"
          onChange={filterChange}
          prefix={<SearchOutlined />}
        />}
        actions={<div>
          <Button type="primary" onClick={() => app.go('app/model/algorithm/add')}>{_t1('添加算法')}</Button>
        </div>}
      >
        <CardList
          algorList={algorList?.filter(al => al.name?.indexOf(filter) > -1)}
          deleteAlgor={deleteAlgor}
          loading={loading}
        />
      </Page>
    </Model>
  )
}

export default ListPage
