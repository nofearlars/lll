import React from 'react'
import { api } from 'xadmin'
import { SchemaForm } from 'xadmin-form'
import { Popconfirm, Modal, message } from 'antd'
import { EditOutlined, DeleteOutlined } from '@ant-design/icons'
import { schema } from './AddFunction'

const EditFunction = ({ item, getCList }) => {
  const [visible, setVisible] = React.useState(false)

  const { t:_t1 } = useI18n()

  const delFunction = () => {
    api({ name: 'core/scriptSetting' }).fetch(`/${item?.id}`, { method: 'DELETE' })
      .then(({ status }) => {
        if (status == 200) {
          message.success(_t1('删除成功'))
          getCList()
        }
      })
  }

  const editFunction = (val) => {
    api({ name: 'core/scriptSetting' }).fetch(`/${val?.id}`, {
      method: 'PUT',
      body: JSON.stringify(val)
    }).then(() => {
      message.success(_t1('保存成功'))
      setVisible(false)
      getCList()
    })
  }

  return <span style={{ float: 'right' }}>
    <Popconfirm
      title={_t1("修改后，相关引用该脚本方法处均会被修改，请谨慎操作！")}
      onConfirm={() => setVisible(true)}
      style={{ cursor: 'pointer' }}
      okText={_t1("确定")}
      cancelText={_t1("取消")}
    ><EditOutlined/></Popconfirm>
    <Popconfirm
      title={_t1("删除后，相关引用该脚本方法处均会被删除，请谨慎操作！")}
      onConfirm={delFunction}
      style={{ cursor: 'pointer' }}
      okText={_t1("确定")}
      cancelText={_t1("取消")}
    ><DeleteOutlined style={{ marginLeft: 3 }} /></Popconfirm>
    <Modal title={_t1("编辑函数")} visible={visible} width="80%" onCancel={() => setVisible(false)} footer={null} >
      <SchemaForm
        formKey='add-function'
        schema={schema}
        initialValues={item}
        onSubmit={editFunction}
      />
    </Modal>
  </span>
}

export default EditFunction
