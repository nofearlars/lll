import { app } from 'xadmin'
/**
 * 把 api 文件字符串处理成 vscode 能识别的格式
 */
const getFormatStr = (str) => {
  // 第一步：去掉 import，export 部分
  let result = str.split('//////')[1]
  // 第二部：把 async 方法，改为空方法
  result = result.replace(/function\ \(\)[^\u4E00-\u9FA5]+\}\(\)/g, functionStr => {
    // 匹配 function _callee(filter, model)，提取参数
    let params = functionStr.match(/function \_[a-z0-9]+\([a-zA-Z\,\ ]*\)/g)
    .map(s => {
      let s1 = s.match(/\([a-zA-Z\,\ ]+\)/g)?.[0]
      return s1?.substring(1, s1.length - 1)
    })
    return `function aaa(${params.join(',')}) {}`
  })
  return result
}

// 把画面组件的属性和方法合并
const mergeCells = (functions, cells) => {
  let wList = app.get('dashboardWidgets')
  let result = {}
  for (let key in cells) {
    let temp = {}
    for (let key2 in functions[key]) {
      temp[key2] = "() => {}"
    }
    if (cells[key]?.type) {
      let ps = wList[cells[key]?.type].paramSchema
      let properties = !ps ? {} : typeof ps === 'function' ? ps().properties : ps.properties
      for (let key3 in properties) {
        temp[key3] = properties[key3].title
      }
    }
    result[key] = temp
  }
  return result
}

// 画面组件的属性和方法合并，用来展示组件树
const mergeCellsForTree = (functions, cells) => {
  let wList = app.get('dashboardWidgets')
  let result = {}
  for (let key in cells) {
    let temp = { ...cells[key], props: [], funs: [] }
    for (let key2 in functions?.[key]) {
      temp.funs.push({
        key: 'Widgets.' + [key] + '.' + [key2] + '()',
        title: functions?.[key]?.[key2]?.description
      })
    }
    if (cells[key]?.structure?.type) {
      let ps = wList[cells[key].structure.type]?.paramSchema // 母版，内容区域，为空
      let properties = !ps ? {} : typeof ps === 'function' ? ps().properties : ps.properties
      for (let key3 in properties) {
        temp.props.push({
          key: 'Widgets.' + [key] + '.' + [key3],
          title: '<' + properties[key3].type + '>' + _t1(properties[key3].title)
        })
      }
    }
    result[key] = temp
  }
  return result
}

export { getFormatStr, mergeCells, mergeCellsForTree }
