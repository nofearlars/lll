import React from 'react'
import { Button, Modal, Input, message, Tooltip, Form } from 'antd'
import { api } from 'xadmin'
import { SchemaForm } from 'xadmin-form'
import { C } from 'xadmin-ui'
import arr from './api/i18n'
const { TextArea } = Input;

const options = {
  roundedSelection: false,
  readOnly: false,
  minimap: { enabled: false },
  cursorStyle: 'line',
  automaticLayout: false
}

const schema = {
  type: 'object',
  required: ['name'],
  properties: {
    name: {
      title: _r("函数名称"),
      type: 'string'
    },
    content: {
      title: _r("函数内容"),
      type: 'string',
      field: {
        component: ({ input }) => {
          React.useEffect(() => {
            if (!input.value) input.onChange('function aaa () {}')
          }, [])
          return <C is="CodeEditor"
            { ...input }
            value={input.value || 'function aaa () {}'}
            language={'javascript'}
            width="100%"
            height="250"
            options={options}
          />
        }
      }
    },
    description: {
      title: _r("备注说明"),
      type: 'string',
      field: {
        component: ({ input }) => <TextArea rows={2} { ...input } />
      }
    }
  }
}

const Layout = props => {
  const { children, invalid, handleSubmit, submitting } = props
  const groupProps = {
    wrapperCol: {
      xs: { span: 24, offset: 0 },
      sm: { span: 18, offset: 5 }
    }
  }

  return (
    <Form onSubmit={handleSubmit}>
      {children}
      <Form.Item {...groupProps}>
        <Button type="primary" onClick={handleSubmit} loading={submitting} disabled={invalid}>{_t('Save')}</Button>
      </Form.Item>
    </Form>
  )
}

const AddFunction = () => {
  const [visible, setVisible] = React.useState(false)

  const { t:_t1 } = useI18n()

  const handleSubmit = (val) => {
    api({ name: 'core/scriptSetting' }).fetch('', {
      method: 'POST',
      body: JSON.stringify(val)
    }).then(() => {
      message.success(_t1('保存成功'))
      setVisible(false)
    })
  }

  return <>
    <Button size='small' style={{ width: 80, overflow: 'hidden', textOverflow: 'ellipsis' }}
      onClick={() => setVisible(true)}>
        <Tooltip title={_t1('创建函数')}>+{_t1('创建函数')}</Tooltip>
      </Button>
    <Modal title={_t1('创建函数')} visible={visible} width="80%" onCancel={() => setVisible(false)} footer={null} >
      <C is="I18nSchemaForm"
        formKey='add-function'
        schema={schema}
        onSubmit={handleSubmit}
        component={Layout}
      />
    </Modal>
  </>
}

export { schema }
export default AddFunction
