import React from 'react'
import _ from 'lodash'
import { useFocused } from 'slate-react'
import VariableSelect from './VariableSelect'


const Panel = (props) => {

  const { variableRef, onFull, show, setShow, notfocusedShow } = props

  const focused = useFocused()

  const [ style, setStyle ] = React.useState(false)
  const [ container, setContainer ] = React.useState(null)

  React.useEffect(() => {
    let _container = document.querySelector('.iot-editor-slate-panel')
    if (!_container) {
      _container = document.createElement('div')
      _container.className = 'iot-editor-slate-panel'
      document.body.appendChild(_container)
    }
    setContainer(_container)
  }, [])

  React.useEffect(() => {
    const rect = variableRef.current?.getBoundingClientRect()
    if ((focused && !notfocusedShow) || show) {
      // editorRef.current.focus()
      const totalHeight = document.body.clientHeight
      if (totalHeight - rect.top > 268) {
        setStyle({
          display: 'block',
          position: 'absolute',
          width: rect.width,
          top: rect.top+rect.height,
          left: rect.left,
          zIndex: 9999
        })
      } else {
        setStyle({
          display: 'block',
          position: 'absolute',
          width: rect.width,
          top: rect.top - 268,
          left: rect.left,
          zIndex: 9999
        })
      }
      
    } else {
      setStyle({
        display: 'none'
      })
    }
  }, [ focused, show ])

  const onFullPanel = () => {
    setStyle({
      display: 'none'
    })
    onFull()
  }

  if (container) {
    return ReactDOM.createPortal((
      <div className="iot-editor-variable-panel" style={style} onMouseEnter={() => { setShow(true) }} onMouseLeave={() => { setShow(false) }}>
        <VariableSelect {...props} onFull={onFullPanel} style={style} setShow={setShow} ></VariableSelect>
      </div>
    ), container)
  } else {
    return null
  }
}

export default Panel
