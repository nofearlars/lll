
import React from 'react'
import { use, api, app } from 'xadmin'
import { C } from 'xadmin-ui'
import { Spin } from 'antd';

import Editor from './editor'

const FormulaLogic = props => {

  const { value, onChange, tags, model, schema, loading, ...restEditorProps } = props
  const [systemVar, setSystemVar] = React.useState([])
  const [systemLoading, setsystemLoading] = React.useState(false)

  const { t:_t1 } = useI18n()

  // React.useEffect(() => {
  //   api({ name: 'core/systemVariable' }).query({ fields: ['icon'] }, {})
  //     .then(({ items }) => {
  //       setSystemVar(items)
  //       setsystemLoading(true)
  //     })
  //   // }
  // }, [])

  const getData = (tags, schema) => {
    let data = {
      definitions: {
        data: {
          "type": "object",
          "title": _t1("数据点"),
          "description": _t1("数据点"),
          "properties": tags ? tags.reduce((p, t) => {
              p[t.id] = {
                "type": "string",
                "format": "string",
                "title": t.name,
                "description": t.description || t.name
              }; 
              return p 
            }, {}) : {}
        },
        tableData: {
          "type": "object",
          "description": _t1("属性"),
          "title": _t1("属性"),
          "properties": schema?.properties || {}
        }
      },
    }
    return data
  }
  // 升级3.0，将schema中的uid转换为id
  const uidToId = (schema) => {
    if (schema?.properties?.uid) {
      schema.properties.id = schema.properties.uid
      delete schema.properties.uid
    }
    return schema
  }

  return (loading && systemLoading) ? <Spin /> :
    (<Editor
      schema={getData(tags, uidToId(schema))}
      defaultValue={value}
      onChange={onChange}
      width={'100%'}
      height={150}
      outputMode={'jsonlogic'}
      {...restEditorProps}
    />)
}

const FormulaLogicEditor = props => (
  <C is="TagWrap" tableDataId={props.tableDataId} tableId={props.tableId}>
    {state => <FormulaLogic {...props} {...state} />}
  </C>
)

export default FormulaLogicEditor
