const xyz = () => {
  return {
    x: {
      title: _r('X轴'),
      type: 'number'
    },
    y: {
      title: _r('Y轴'),
      type: 'number'
    },
    z: {
      title: _r('Z轴'),
      type: 'number'
    }
  }
}

const paramSchema = {
  type: 'object',
  properties: {
    sceneConfig: {
      title: _r('场景'),
      type: 'object',
      fieldType: 'fieldset_card',
      properties: {
        background: {
          title: _r('背景颜色'),
          type: 'string',
          fieldType: 'color'
        },
        backgroundImage: {
          title: _r('背景贴图'),
          type: 'object',
          properties: {
            imageType: {
              title: _r('贴图方式'),
              type: 'string',
              enum: ['panorama', 'cube'],
              enum_title: ['全景贴图', '立方体贴图'],
              field: {
                effect: ({ value }, form) => {
                  setTimeout(() => {
                    form.setFieldData('sceneConfig.backgroundImage.panorama', { display: value === 'panorama' })
                    form.setFieldData('sceneConfig.backgroundImage.posX', { display: value === 'cube' })
                    form.setFieldData('sceneConfig.backgroundImage.negX', { display: value === 'cube' })
                    form.setFieldData('sceneConfig.backgroundImage.posY', { display: value === 'cube' })
                    form.setFieldData('sceneConfig.backgroundImage.negY', { display: value === 'cube' })
                    form.setFieldData('sceneConfig.backgroundImage.posZ', { display: value === 'cube' })
                    form.setFieldData('sceneConfig.backgroundImage.negZ', { display: value === 'cube' })
                  })
                }
              }
            },
            panorama: {
              title: _r('全景图'),
              type: 'string',
              fieldType: 'image'
            },
            posX: {
              title: 'X轴正向(posx)',
              type: 'string',
              fieldType: 'image'
            },
            negX: {
              title: 'X轴负向(negx)',
              type: 'string',
              fieldType: 'image'
            },
            posY: {
              title: 'Y轴正向(posy)',
              type: 'string',
              fieldType: 'image'
            },
            negY: {
              title: 'Y轴负向(negy)',
              type: 'string',
              fieldType: 'image'
            },
            posZ: {
              title: 'Z轴正向(posz)',
              type: 'string',
              fieldType: 'image'
            },
            negZ: {
              title: 'Z轴负向(negz)',
              type: 'string',
              fieldType: 'image'
            }
          },
        },
        fog: {
          title: '雾',
          type: 'object',
          properties: {
            enable: {
              title: _r('启用'),
              type: 'boolean'
            },
            color: {
              title: _r('颜色'),
              type: 'string',
              fieldType: 'color'
            },
            near: {
              title: _r('最小距离'),
              type: 'number'
            },
            far: {
              title: _r('最大距离'),
              type: 'number'
            }
          }
        },
        ground: {
          title: _r('地平面'),
          type: 'object',
          properties: {
            enable: {
              title: _r('启用'),
              type: 'boolean'
            },
            materialType: {
              title: _r('材质'),
              type: 'string',
              enum: [ 'MeshBasicMaterial', 'MeshLambertMaterial', 'MeshNormalMaterial', 'MeshPhongMaterial', 'MeshPhysicalMaterial', 'MeshToonMaterial'],
              enum_title: [ '基础', '非光泽', '变化', '高光', '物理', '卡通']
            },
            width: {
              title: _r('宽度'),
              type: 'number'
            },
            height: {
              title: _r('高度'),
              type: 'number'
            },
            color: {
              title: _r('颜色'),
              type: 'string',
              fieldType: 'color'
            }
          }
        }
      }
    },
    cameraConfig: {
      title: _r('相机'),
      type: 'object',
      fieldType: 'fieldset_card',
      properties: {
        fov: {
          title: _r('视野角度'),
          type: 'number'
        },
        near: {
          title: _r('近端面距离'),
          type: 'number'
        },
        far: {
          title: _r('远端面距离'),
          type: 'number'
        },
        cameraPositon: {
          title: _r('初始位置'),
          type: 'object',
          properties: xyz()
        },
        cameraLookAt: {
          title: _r('初始方向'),
          type: 'object',
          properties: xyz()
        },
        controlType: {
          title: _r('控制器类别'),
          type: 'string',
          enum: ['orbit', 'pointerLock', 'fly'],
          enum_title: ['轨道', '行走', '飞行'],
        },
        orbitConfig: {
          title: _r('轨道控制器'),
          type: 'object',
          properties: {
            enabled: {
              title: _r('启用'),
              type: 'boolean',
              description: '控制相机移动轨道'
            },
            enableRotate: {
              title: _r('旋转'),
              type: 'boolean',
              description: '按住鼠标左键进行旋转'
            },
            rotateSpeed: {
              title: _r('旋转速度'),
              type: 'number',
              minimum: 0
            },
            maxAzimuthAngle: {
              title: _r('水平角度上限'),
              type: 'number',
              description: '取值范围-π到π，默认为无限制',
              minimum: -Math.PI,
              maximum: Math.PI
            },
            minAzimuthAngle: {
              title: _r('水平角度下限'),
              type: 'number',
              description: '取值范围-π到π，默认为无限制',
              minimum: -Math.PI,
              maximum: Math.PI
            },
            maxPolarAngle: {
              title: _r('垂直角度上限'),
              type: 'number',
              description: '取值范围0到π，默认值为π',
              minimum: 0,
              maximum: Math.PI
            },
            minPolarAngle: {
              title: _r('垂直角度下限'),
              type: 'number',
              description: '取值范围0到π，默认值为0',
              minimum: 0,
              maximum: Math.PI
            },
            enablePan: {
              title: _r('平移'),
              type: 'boolean',
              description: '按住鼠标右键进行平移'
            },
            panSpeed: {
              title: _r('平移速度'),
              type: 'number',
              minimum: 0
            },
            enableZoom: {
              title: _r('缩放'),
              type: 'boolean',
              description: '利用鼠标滚轮进行缩放'
            },
            zoomSpeed: {
              title: _r('缩放速度'),
              type: 'number',
              minimum: 0
            },
            maxDistance: {
              title: _r('缩放距离上限'),
              type: 'number',
              minimum: 0
            },
            minDistance: {
              title: _r('缩放距离下限'),
              type: 'number',
              minimum: 0
            },
            enableDamping: {
              title: _r('阻尼'),
              type: 'boolean',
              description: '给控制器带来重量感'
            },
            dampingFactor: {
              title: _r('阻尼因子'),
              type: 'number',
              description: '数值越大，阻力越大，取值范围0~1',
              field: {
                validate: (value) => {
                  if (value < 0 || value > 1) {
                    return '超出取值范围'
                  } else {
                    return ''
                  }
                }
              }
            },
            autoRotate: {
              title: _r('自动旋转'),
              type: 'boolean'
            },
            autoRotateSpeed: {
              title: _r('自动旋转速度'),
              type: 'number',
              minimum: 0
            }
          }
        },
        pointerLockConfig: {
          title: _r('行走控制器'),
          type: 'object',
          properties: {
            enabled: {
              title: _r('启用'),
              type: 'boolean'
            },
            eyeHeight: {
              title: _r('视线高度'),
              type: 'number'
            },
            moveSpeed: {
              title: _r('移动速度'),
              type: 'number'
            },
            fallSpeed: {
              title: _r('下落速度'),
              type: 'number'
            },
            jumpHeight: {
              title: _r('跳跃高度'),
              type: 'number'
            }
          }
        },
        flyConfig: {
          title: _r('飞行控制器'),
          type: 'object',
          properties: {
            enabled: {
              title: _r('启用'),
              type: 'boolean'
            },
            autoForward: {
              title: _r('自动前进'),
              type: 'boolean'
            },
            movementSpeed: {
              title: _r('移动速度'),
              type: 'number'
            },
            rollSpeed: {
              title: _r('旋转速度'),
              type: 'number'
            }
          }
        }
      }
    },
    snapshotConfig: {
      title: _r('快照'),
      type: 'object',
      fieldType: 'fieldset_card',
      properties: {
        snapshotVar: {
          title: _r('快照变量'),
          type: 'object',
          fieldType: 'dataPoint'
        },
        snapshotList: {
          title: _r('快照列表'),
          type: 'array',
          field: {
            ButtonBody: ({ input, index, inputName }) => input?.value[index]?.name || inputName
          },
          items: {
            type: 'object',
            properties: {
              name: {
                title: _r('名称'),
                type: 'string',
              },
              position: {
                title: _r('位置'),
                type: 'object',
                properties: xyz()
              },
              target: {
                title: _r('方向'),
                type: 'object',
                properties: xyz()
              }
            }
          }
        }
      }
    },
    renderConfig: {
      title: _r('渲染'),
      type: 'object',
      fieldType: 'fieldset_card',
      properties: {
        outputEncoding: {
          title: _r('色彩空间'),
          type: 'string',
          enum: [ 'LinearEncoding', 'sRGBEncoding', 'GammaEncoding'],
          enum_title: [ 'Linear', 'sRGB', 'Gamma'],
          field: {
            effect: ({ value }, form) => {
              setTimeout(() => {
                form.setFieldData('renderConfig.gammaFactor', { display: value === 'GammaEncoding' })
              })
            }
          }
        },
        gammaFactor: {
          title: 'gamma因子',
          type: 'number'
        }
      }
    },
    lightConfig: {
      title: _r('灯光'),
      type: 'object',
      fieldType: 'fieldset_card',
      properties: {
        ambientLight: {
          title: _r('环境光'),
          type: 'array',
          items: {
            type: 'object',
            properties: {
              enable: {
                title: _r('启用'),
                type: 'boolean'
              },
              color: {
                title: _r('颜色'),
                type: 'string',
                fieldType: 'color'
              },
              intensity: {
                title: _r('强度'),
                type: 'number'
              }
            }
          }
        },
        directionalLight: {
          title: _r('平行光'),
          type: 'array',
          items: {
            type: 'object',
            properties: {
              enable: {
                title: _r('启用'),
                type: 'boolean'
              },
              color: {
                title: _r('颜色'),
                type: 'string',
                fieldType: 'color'
              },
              intensity: {
                title: _r('强度'),
                type: 'number'
              },
              castShadow: {
                title: _r('阴影'),
                type: 'boolean'
              },
              position: {
                title: _r('位置'),
                type: 'object',
                properties: xyz()
              }
            }
          }
        },
        hemisphereLight: {
          title: _r('半球光'),
          type: 'array',
          items: {
            type: 'object',
            properties: {
              enable: {
                title: _r('启用'),
                type: 'boolean'
              },
              skyColor: {
                title: _r('天空颜色'),
                type: 'string',
                fieldType: 'color'
              },
              groundColor: {
                title: _r('地面颜色'),
                type: 'string',
                fieldType: 'color'
              },
              intensity: {
                title: _r('强度'),
                type: 'number'
              },
              position: {
                title: _r('位置'),
                type: 'object',
                properties: xyz()
              }
            }
          }
        },
        pointLight: {
          title: _r('点光'),
          type: 'array',
          items: {
            type: 'object',
            properties: {
              enable: {
                title: _r('启用'),
                type: 'boolean'
              },
              color: {
                title: _r('颜色'),
                type: 'string',
                fieldType: 'color'
              },
              intensity: {
                title: _r('强度'),
                type: 'number'
              },
              distance: {
                title: _r('距离'),
                type: 'number'
              },
              decay: {
                title: _r('衰退量'),
                type: 'number'
              },
              castShadow: {
                title: _r('阴影'),
                type: 'boolean'
              },
              position: {
                title: _r('位置'),
                type: 'object',
                properties: xyz()
              }
            }
          }
        },
        spotLight: {
          title: _r('聚光灯'),
          type: 'array',
          items: {
            type: 'object',
            properties: {
              enable: {
                title: _r('启用'),
                type: 'boolean'
              },
              color: {
                title: _r('颜色'),
                type: 'string',
                fieldType: 'color'
              },
              intensity: {
                title: _r('强度'),
                type: 'number'
              },
              distance: {
                title: _r('距离'),
                type: 'number'
              },
              angle: {
                title: _r('散射角度'),
                type: 'number',
                description: '取值在0到π/2之间, 默认值为π/3'
              },
              penumbra: {
                title: _r('衰减百分比'),
                type: 'number',
                description: '取值在0到1之间，默认值为0'
              },
              decay: {
                title: _r('衰减量'),
                type: 'number'
              },
              castShadow: {
                title: _r('阴影'),
                type: 'boolean'
              },
              position: {
                title: _r('位置'),
                type: 'object',
                properties: xyz()
              }
            }
          }
        }
      }
    },
    helperConfig: {
      title: _r('辅助'),
      type: 'object',
      fieldType: 'fieldset_card',
      properties: {
        gridConfig: {
          title: _r('坐标格'),
          type: 'object',
          properties: {
            enable: {
              title: _r('启用'),
              type: 'boolean'
            },
            size: {
              title: _r('尺寸'),
              type: 'number'
            },
            divisions: {
              title: _r('细分次数'),
              type: 'number'
            },
            colorCenterLine: {
              title: _r('中线颜色'),
              type: 'string',
              fieldType: 'color'
            },
            colorGrid: {
              title: _r('网格线颜色'),
              type: 'string',
              fieldType: 'color'
            }
          }
        },
        axesConfig: {
          title: _r('坐标轴'),
          type: 'object',
          properties: {
            enable: {
              title: _r('启用'),
              type: 'boolean',
              description: 'X轴为红色线，Y轴为绿色线，Z轴为蓝色线'
            },
            size: {
              title: _r('轴线长度'),
              type: 'number'
            }
          }
        }
      }
    }
  }
}

export default paramSchema