import React, { Component } from 'react';
import { Page, C } from 'xadmin-ui'
import mockSchema from '../../mock/getTableSchema'

class App extends Component {
    constructor(props) {
        super(props);
        this.state = {
            mode: 'text',
            schema: mockSchema,
            logic: '',
            error: ''
        };
    }

    handleChange({value, raw, type}) {
        this.setState({
            logic: JSON.stringify(value),
            error: '',
            raw,
            type
        });
    }

    handleError({error}) {
        this.setState({
            error: error.toString(),
            logic: '',
            raw: ''
        });
    }

    render() {
        // <Radio.Group
        //     value={this.state.mode}
        //     onChange={event => this.setState({ mode: event.target.value })}
        // >
        //     <Radio value="text">文本模式</Radio>
        //     <Radio value="input">单行模式</Radio>
        // </Radio.Group>
        let value = {}
        try {
            value = JSON.parse(this.state.logic)
        } catch (error) {

        }
        return (
            <Page title="代码编辑器">
                <div className="editor-wrapper">
                    <C is="LogicEditor"
                        mode={this.state.mode}
                        schema={this.state.schema}
                        //needFuncs={['AND','OR']}
                        onChange={this.handleChange.bind(this)}
                        onError={this.handleError.bind(this)}
                        defaultValue={{">":[{"or":[{"var":["var.IB"]},{"var":["node.name"]}]},12]}}
                    />
                </div>
                <div>
                    <h1>Result <span color='red'>数据类型：{this.state.type}</span></h1>
                    <div style={{color: this.state.error ? 'red': 'black'}}>
                        {this.state.logic || this.state.error}
                    </div>
                </div>
                <C is="Form.LogicEditor"
                    data={{ 数据点: {'B项电流': 'var.IB'}, '资产属性': { '名称': 'node.name' } }}
                    value={value}
                    onChange={json => console.log(json)}
                />
            </Page>
        );
    }
}

export default App;
