import React, { Component } from 'react';
import { Page, C } from 'xadmin-ui'
import { List, Layout, Card, Button, Modal, Menu, Tree, Typography } from 'antd';
import sqlBuilder from 'raw-loader!./api.js'

const { SubMenu } = Menu;
const { Header, Content, Footer, Sider } = Layout;
const { Title, Paragraph } = Typography;

const code2 = 
`let a = '123';
let b = () => {
  return 'OK'
}
Math.pow(2, 3);
`

const App = () => {
  const [ value, setValue ] = React.useState(code2)
  const [ isFuncDocModalShow, setFuncDocModalShow ] = React.useState(false)

  const showFuncDocModal = () => {
    setFuncDocModalShow(true);
  };

  const handleOk = () => {
    setFuncDocModalShow(false);
  };

  const handleCancel = () => {
    setFuncDocModalShow(false);
  };

  return (
    <Page title="脚本编辑器">
      <Layout.Content>
      <List
        bordered
        size={"small"}
        dataSource={[
          '封装脚本API, 组件API',
          'API代码文档注释, jsdoc gitbook mdx',
          '组件自动提示，及组件API',
          '前端脚本执行的沙箱环境',
          '语法糖封装 $'
        ]}
        renderItem={item => (
          <List.Item>
            {item}
          </List.Item>
        )}
        style={{ background: '#FFF'}}
      />
      <Card  
        title="脚本编辑器" 
        extra={<Button.Group size="small">
          <Button onClick={showFuncDocModal}>函数</Button>
        </Button.Group>}
      >
        <C is="CodeEditor"
          width="100%"
          height={500}
          language="javascript"
          value={value}
          editorDidMount={(editor, monaco) => {
            monaco.languages.typescript.javascriptDefaults.addExtraLib(sqlBuilder)
          }}
          defaultValue={`/** 这里要填写CSS **/`}
          onChange={console.log}
        />
        <Modal title="函数文档" visible={isFuncDocModalShow} onOk={handleOk} onCancel={handleCancel}
          width="60%" bodyStyle={{ padding: 10}}>
          <Layout style={{ backgroundColor: '#fff'}}>
            <Sider width={200}>
              <Menu
                mode="inline"
                defaultSelectedKeys={['1']}
                defaultOpenKeys={['sub1']}
                style={{ height: '100%' }}
              >
                <SubMenu key="sub1" title="ECMAScript函数">
                  <SubMenu key="sub1-2" title="字符串">
                    <Menu.Item key="5">option5</Menu.Item>
                    <Menu.Item key="6">option6</Menu.Item>
                    <Menu.Item key="7">option7</Menu.Item>
                    <Menu.Item key="8">option8</Menu.Item>
                  </SubMenu>
                  <Menu.Item key="1">option1</Menu.Item>
                  <Menu.Item key="2">option2</Menu.Item>
                  <Menu.Item key="3">option3</Menu.Item>
                  <Menu.Item key="4">option4</Menu.Item>
                </SubMenu>
                <SubMenu key="sub2" title="subnav 2">
                  <Menu.Item key="5">option5</Menu.Item>
                  <Menu.Item key="6">option6</Menu.Item>
                  <Menu.Item key="7">option7</Menu.Item>
                  <Menu.Item key="8">option8</Menu.Item>
                </SubMenu>
                <SubMenu key="sub3" title="subnav 3">
                  <Menu.Item key="9">option9</Menu.Item>
                  <Menu.Item key="10">option10</Menu.Item>
                  <Menu.Item key="11">option11</Menu.Item>
                  <Menu.Item key="12">option12</Menu.Item>
                </SubMenu>
              </Menu>
            </Sider>
            <Content style={{ padding: '0 24px', minHeight: 280 }}>
              <Title level={5}>定义</Title>
              <Paragraph>在个人中心页面，选择任务委托栏，点击页面右上角的发布委托即可</Paragraph>
              <Title level={5}>语法</Title>
              <Paragraph>在个人中心页面，选择任务委托栏，点击页面右上角的发布委托即可</Paragraph>
              <Title level={5}>参数</Title>
              <Paragraph>在个人中心页面，选择任务委托栏，点击页面右上角的发布委托即可</Paragraph>
              <Title level={5}>返回值</Title>
              <Paragraph>在个人中心页面，选择任务委托栏，点击页面右上角的发布委托即可</Paragraph>
              <Title level={5}>示例</Title>
              <Paragraph>在个人中心页面，选择任务委托栏，点击页面右上角的发布委托即可</Paragraph>
            </Content>
          </Layout>
        </Modal>
      </Card>
      </Layout.Content>
    </Page>
  )
};

export default App;
