/*! For license information please see index.js.LICENSE.txt */
(()=>{var __webpack_modules__={5546:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>Ii});var n=r(7462),o=r(7363),i=r.n(o);const a=Recoil;var s,l=r(5861),c=r(4687),u=r.n(c),d=r(1002),m=r(2611),p=r.n(m),b=r(4942);function g(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var f=(s={"Getter must not have any formal parameters":"获取器不能有任何形式的参数","Setter must have exactly one formal parameter":"设置器必须只有一个形式参数","Setter function argument must not be a rest parameter":"设置器函数参数不能是其余参数","Class constructor may not be an async method":"类构造函数不能是异步方法","Class constructor may not be an accessor":"类构造函数不能是访问器","Missing initializer in %0 declaration":"在%0声明中缺少初始化器","Unexpected token =":"意外的符号 =","Duplicate binding %0":"重复绑定 %0","A class may only have one constructor":"一个类只能有一个构造函数","Duplicate __proto__ fields are not allowed in object literals":"在对象字面量中不允许有重复的 __proto__ 字段","%0 loop variable declaration may not have an initializer":"%0循环变量声明可能没有初始化器","Generator declarations are not allowed in legacy contexts":"在遗留上下文中不允许生成器声明","Illegal break statement":"非法的 break 语句","Illegal continue statement":"非法的 continue 语句","Unexpected token":"意外的符号","Illegal 'use strict' directive in function with non-simple parameter list":"在具有非简单参数列表的函数中非法的 'use strict' 指令","Illegal return statement":"非法的 return 语句","Keyword must not contain escaped characters":"关键字不能包含转义字符","Invalid hexadecimal escape sequence":"无效的十六进制转义序列","Invalid left-hand side in assignment":"在赋值中无效的左侧","Invalid left-hand side in for-in":"在for-in中无效的左侧","Invalid left-hand side in for-loop":"在for-loop中无效的左侧","Invalid regular expression":"无效的正则表达式","let is disallowed as a lexically bound name":"let作为词法绑定名称是不允许的"},(0,b.Z)(s,"Unexpected token","意外的符号"),(0,b.Z)(s,"More than one default clause in switch statement","在switch语句中有多于一个的default子句"),(0,b.Z)(s,"Illegal newline after throw","在throw后面非法的换行符"),(0,b.Z)(s,"Unexpected token","意外的符号"),(0,b.Z)(s,"Missing catch or finally after try","在try后面缺少catch或finally"),(0,b.Z)(s,"Rest parameter must be last formal parameter","其余参数必须是最后的形式参数"),(0,b.Z)(s,"%0 '%1' has already been declared","%0 '%1' 已经被声明"),(0,b.Z)(s,"Classes may not have static property named prototype","类不能有名为prototype的静态属性"),(0,b.Z)(s,"Catch variable may not be eval or arguments in strict mode","在严格模式下，捕获变量不能是eval或arguments"),(0,b.Z)(s,"Delete of an unqualified identifier in strict mode.","在严格模式下删除一个无资格的标识符"),(0,b.Z)(s,"In strict mode code, functions can only be declared at top level or inside a block","在严格模式代码中，函数只能在顶级或块内部声明"),(0,b.Z)(s,"Function name may not be eval or arguments in strict mode","在严格模式下，函数名不能是eval或arguments"),(0,b.Z)(s,"Assignment to eval or arguments is not allowed in strict mode","在严格模式下，不允许给eval或arguments赋值"),(0,b.Z)(s,"Postfix increment/decrement may not have eval or arguments operand in strict mode","在严格模式下，后缀递增/递减可能没有eval或arguments操作数"),(0,b.Z)(s,"Prefix increment/decrement may not have eval or arguments operand in strict mode","在严格模式下，前缀递增/递减可能没有eval或arguments操作数"),(0,b.Z)(s,"Strict mode code may not include a with statement","严格模式代码不能包含一个with语句"),(0,b.Z)(s,"Octal literals are not allowed in strict mode.","在严格模式下，不允许八进制字面量"),(0,b.Z)(s,"Strict mode function may not have duplicate parameter names","严格模式函数可能没有重复的参数名称"),(0,b.Z)(s,"Parameter name eval or arguments is not allowed in strict mode","在严格模式下，参数名eval或arguments是不允许的"),(0,b.Z)(s,"Use of future reserved word in strict mode","在严格模式下，使用未来保留的单词"),(0,b.Z)(s,"Variable name may not be eval or arguments in strict mode","在严格模式下，变量名可能不是eval或arguments"),(0,b.Z)(s,"Octal literals are not allowed in template strings.","在模板字符串中，不允许八进制字面量"),(0,b.Z)(s,"Unexpected end of input","意外的输入结束"),(0,b.Z)(s,"Unexpected identifier","意外的标识符"),(0,b.Z)(s,"Unexpected number","意外的数字"),(0,b.Z)(s,"Unexpected reserved word","意外的保留字"),(0,b.Z)(s,"Unexpected string","意外的字符串"),(0,b.Z)(s,"Unexpected quasi %0","意外的准 %0"),(0,b.Z)(s,"Unexpected token %0","意外的符号 %0"),(0,b.Z)(s,"Unexpected token ILLEGAL","意外的非法符号"),(0,b.Z)(s,"Undefined label '%0'","未定义的标签 '%0'"),(0,b.Z)(s,"Invalid regular expression: missing /","无效的正则表达式：缺少 /"),s);function h(e,t){try{return t.parseScript(e),null}catch(e){return f[e.description]||e.description}}var v,y,w=function(e){return p().isArray(e)?e.map((function(e){return"variable"===e.type?"variable('".concat(e.variable.path,"')"):e.text})).join(""):null},A=function(e,t,r){if(t)return h(w(e),r);if(p().isArray(e)){var n,o=e.filter((function(e){return"formula"===e.type})),i=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return g(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?g(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,s=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){s=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(s)throw i}}}}(o);try{for(i.s();!(n=i.n()).done;){var a=n.value,s=h(w(a.children),r);if(s)return s}}catch(e){i.e(e)}finally{i.f()}return null}return null},x=r(7956),k={Object:{hasOwnProperty:{definition:"返回一个布尔值，指示对象自身属性中是否具有指定的属性",syntax:"object.hasOwnProperty(prop)",parameters:"{String} prop - 要检查的属性名称",return:"Boolean",demo:"var obj = { x: 1, y: 2 };<br/>console.log(obj.hasOwnProperty('x'));"},isPrototypeOf:{definition:"返回一个布尔值，表示指定对象是否在另一个对象的原型链中",syntax:"prototypeObj.isPrototypeOf(object)",parameters:"{Object} prototypeObj - 要检查的对象是否在该对象的原型链中",return:"Boolean",demo:"function Foo() {}<br/>function Bar() {}<br/>Bar.prototype = Object.create(Foo.prototype);<br/>var obj = new Bar();<br/>console.log(Foo.prototype.isPrototypeOf(obj));"},propertyIsEnumerable:{definition:"返回一个布尔值，指示指定的属性是否可枚举",syntax:"object.propertyIsEnumerable(prop)",parameters:"{String} prop - 要检查的属性名称",return:"Boolean",demo:"var obj = { x: 1, y: 2 };<br/>console.log(obj.propertyIsEnumerable('x'));"},toString:{definition:"返回表示对象的字符串",syntax:"object.toString()",parameters:"{Null}",return:"String",demo:"var obj = { x: 1, y: 2 };<br/>console.log(obj.toString());"},valueOf:{definition:"返回指定对象的原始值",syntax:"object.valueOf()",parameters:"{Null}",return:"Any",demo:"var obj = { x: 1, y: 2 };<br/>console.log(obj.valueOf());"},toLocaleString:{definition:"返回对象的本地化字符串表示",syntax:"object.toLocaleString()",parameters:"{Null}",return:"String",demo:"var num = 123456.789;<br/>console.log(num.toLocaleString('en-US'));"}},String:{length:{definition:"返回字符串的长度",syntax:"string.length",return:"Number",demo:"var str = 'Hello, World!';<br/>console.log(str.length);"},anchor:{definition:"创建 HTML 锚链接",syntax:"string.anchor(name)",parameters:"{String} name - 锚链接的名称",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.anchor('myAnchor'));"},at:{definition:"返回指定索引位置的字符",syntax:"string.at(index)",parameters:"{Number} index - 字符的索引位置",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.at(7));"},big:{definition:"使用大号字体显示字符串",syntax:"string.big()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.big());"},blink:{definition:"以闪烁的文本显示字符串",syntax:"string.blink()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.blink());"},bold:{definition:"使用粗体显示字符串",syntax:"string.bold()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.bold());"},charAt:{definition:"返回指定索引位置的字符",syntax:"string.charAt(index)",parameters:"{Number} index - 字符的索引位置",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.charAt(7));"},charCodeAt:{definition:"返回指定索引位置的字符的 Unicode 编码",syntax:"string.charCodeAt(index)",parameters:"{Number} index - 字符的索引位置",return:"Number",demo:"var str = 'Hello, World!';<br/>console.log(str.charCodeAt(7));"},codePointAt:{definition:"返回指定索引位置的字符的 Unicode 码点值",syntax:"string.codePointAt(index)",parameters:"{Number} index - 字符的索引位置",return:"Number",demo:"var str = 'Hello, World!';<br/>console.log(str.codePointAt(7));"},concat:{definition:"将多个字符串连接成一个新字符串",syntax:"string.concat(string1, string2, ...)",parameters:"{String} string1, string2, ... - 要连接的字符串",return:"String",demo:"var str1 = 'Hello,';<br/>var str2 = ' World!';<br/>console.log(str1.concat(str2));"},endsWith:{definition:"判断字符串是否以指定的子字符串结尾",syntax:"string.endsWith(searchString, length)",parameters:"{String} searchString - 要搜索的子字符串<br/>{Number} length (可选) - 从原始字符串末尾开始搜索的位置，默认为原始字符串的长度",return:"Boolean",demo:"var str = 'Hello, World!';<br/>console.log(str.endsWith('World!'));"},fontcolor:{definition:"使用指定的颜色显示字符串",syntax:"string.fontcolor(color)",parameters:"{String} color - 字符串的颜色",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.fontcolor('blue'));"},fontsize:{definition:"使用指定的字体大小显示字符串",syntax:"string.fontsize(size)",parameters:"{String} size - 字体大小",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.fontsize('5'));"},fixed:{definition:"以打字机文本显示字符串",syntax:"string.fixed()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.fixed());"},includes:{definition:"判断字符串是否包含指定的子字符串",syntax:"string.includes(searchString, position)",parameters:"{String} searchString - 要搜索的子字符串<br/>{Number} position (可选) - 开始搜索的位置，默认为 0",return:"Boolean",demo:"var str = 'Hello, World!';<br/>console.log(str.includes('World'));"},indexOf:{definition:"返回指定子字符串第一次出现的索引位置",syntax:"string.indexOf(searchValue, fromIndex)",parameters:"{String} searchValue - 要搜索的子字符串<br/>{Number} fromIndex (可选) - 开始搜索的位置，默认为 0",return:"Number",demo:"var str = 'Hello, World!';<br/>console.log(str.indexOf('World'));"},italics:{definition:"使用斜体显示字符串",syntax:"string.italics()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.italics());"},lastIndexOf:{definition:"返回指定子字符串最后一次出现的索引位置",syntax:"string.lastIndexOf(searchValue, fromIndex)",parameters:"{String} searchValue - 要搜索的子字符串<br/>{Number} fromIndex (可选) - 开始搜索的位置，默认为字符串的末尾",return:"Number",demo:"var str = 'Hello, World!';<br/>console.log(str.lastIndexOf('o'));"},link:{definition:"创建 HTML 锚链接",syntax:"string.link(url)",parameters:"{String} url - 链接的 URL",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.link('https://www.example.com'));"},localeCompare:{definition:"按照本地特定的顺序比较两个字符串",syntax:"string.localeCompare(compareString, locales, options)",parameters:"{String} compareString - 要比较的字符串<br/>{String or Array} locales (可选) - 一个或多个用来指定比较规则的语言环境标记，或者用来启用自定义排序规则的一个字符串数组<br/>{Object} options (可选) - 一个用来定制比较行为的对象",return:"Number",demo:"var str1 = 'apple';<br/>var str2 = 'banana';<br/>console.log(str1.localeCompare(str2));"},match:{definition:"检索字符串与正则表达式匹配的结果",syntax:"string.match(regexp)",parameters:"{RegExp} regexp - 用于匹配的正则表达式",return:"Array or Null",demo:"var str = 'Hello, World!';<br/>console.log(str.match(/o/g));"},matchAll:{definition:"返回一个包含字符串中所有匹配正则表达式的结果的迭代器",syntax:"string.matchAll(regexp)",parameters:"{RegExp} regexp - 用于匹配的正则表达式",return:"Iterator",demo:"var str = 'Hello, World!';<br/>var matches = str.matchAll(/o/g);<br/>for (const match of matches) {<br/>&nbsp;&nbsp;console.log(match[0]);<br/>}"},normalize:{definition:"返回字符串的 Unicode 正规化形式",syntax:"string.normalize(form)",parameters:"{String} form (可选) - 指定正规化形式的字符串，可以是 'NFC'、'NFD'、'NFKC' 或 'NFKD'",return:"String",demo:"var str = 'Café';<br/>console.log(str.normalize('NFD'));"},padEnd:{definition:"将字符串用指定字符从末尾填充到指定长度",syntax:"string.padEnd(targetLength, padString)",parameters:"{Number} targetLength - 填充后字符串的目标长度<br/>{String} padString (可选) - 用于填充的字符，默认为空格",return:"String",demo:"var str = 'Hello';<br/>console.log(str.padEnd(10, '.'));"},padStart:{definition:"将字符串用指定字符从开头填充到指定长度",syntax:"string.padStart(targetLength, padString)",parameters:"{Number} targetLength - 填充后字符串的目标长度<br/>{String} padString (可选) - 用于填充的字符，默认为空格",return:"String",demo:"var str = 'Hello';<br/>console.log(str.padStart(10, '.'));"},repeat:{definition:"将字符串重复指定次数",syntax:"string.repeat(count)",parameters:"{Number} count - 重复的次数",return:"String",demo:"var str = 'Hello';<br/>console.log(str.repeat(3));"},replace:{definition:"替换字符串中的匹配项",syntax:"string.replace(searchValue, replaceValue)",parameters:"{String or RegExp} searchValue - 要替换的子字符串或正则表达式<br/>{String or Function} replaceValue - 替换的字符串或替换函数",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.replace('World', 'John'));"},replaceAll:{definition:"替换字符串中的所有匹配项",syntax:"string.replaceAll(searchValue, replaceValue)",parameters:"{String or RegExp} searchValue - 要替换的子字符串或正则表达式<br/>{String or Function} replaceValue - 替换的字符串或替换函数",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.replaceAll('o', 'a'));"},search:{definition:"搜索字符串中指定的值并返回索引位置",syntax:"string.search(regexp)",parameters:"{RegExp} regexp - 用于搜索的正则表达式",return:"Number",demo:"var str = 'Hello, World!';<br/>console.log(str.search(/o/));"},slice:{definition:"提取字符串的指定部分",syntax:"string.slice(startIndex, endIndex)",parameters:"{Number} startIndex - 提取的起始索引位置<br/>{Number} endIndex (可选) - 提取的结束索引位置（不包括该位置的字符）",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.slice(7));"},small:{definition:"使用小号字体显示字符串",syntax:"string.small()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.small());"},split:{definition:"将字符串分割为字符串数组",syntax:"string.split(separator, limit)",parameters:"{String or RegExp} separator - 分隔符字符串或正则表达式<br/>{Number} limit (可选) - 限制返回的分割片段数量",return:"Array",demo:"var str = 'Hello, World!';<br/>console.log(str.split(', '));"},strike:{definition:"使用删除线显示字符串",syntax:"string.strike()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.strike());"},sub:{definition:"使用下标显示字符串",syntax:"string.sub()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.sub());"},substr:{definition:"提取字符串中从指定位置开始的指定长度的子字符串",syntax:"string.substr(startIndex, length)",parameters:"{Number} startIndex - 子字符串的起始索引位置<br/>{Number} length (可选) - 要提取的子字符串的长度",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.substr(7, 5));"},substring:{definition:"提取字符串中两个指定索引之间的字符",syntax:"string.substring(indexStart, indexEnd)",parameters:"{Number} indexStart - 提取的起始索引位置<br/>{Number} indexEnd (可选) - 提取的结束索引位置（不包括该位置的字符）",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.substring(7, 12));"},sup:{definition:"使用上标显示字符串",syntax:"string.sup()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.sup());"},startsWith:{definition:"判断字符串是否以指定的子字符串开头",syntax:"string.startsWith(searchString, position)",parameters:"{String} searchString - 要搜索的子字符串<br/>{Number} position (可选) - 开始搜索的位置，默认为 0",return:"Boolean",demo:"var str = 'Hello, World!';<br/>console.log(str.startsWith('Hello'));"},toString:{definition:"返回字符串对象的原始字符串表示",syntax:"string.toString()",parameters:"{Null}",return:"String",demo:"var str = new String('Hello, World!');<br/>console.log(str.toString());"},trim:{definition:"去除字符串两端的空白字符",syntax:"string.trim()",parameters:"{Null}",return:"String",demo:"var str = '   Hello, World!   ';<br/>console.log(str.trim());"},trimStart:{definition:"去除字符串开头的空白字符",syntax:"string.trimStart()",parameters:"{Null}",return:"String",demo:"var str = '   Hello, World!';<br/>console.log(str.trimStart());"},trimLeft:{definition:"去除字符串开头的空白字符",syntax:"string.trimLeft()",parameters:"{Null}",return:"String",demo:"var str = '   Hello, World!';<br/>console.log(str.trimLeft());"},trimEnd:{definition:"去除字符串末尾的空白字符",syntax:"string.trimEnd()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!   ';<br/>console.log(str.trimEnd());"},trimRight:{definition:"去除字符串末尾的空白字符",syntax:"string.trimRight()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!   ';<br/>console.log(str.trimRight());"},toLocaleLowerCase:{definition:"将字符串转换为小写，并根据主机的语言环境进行本地化处理",syntax:"string.toLocaleLowerCase()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.toLocaleLowerCase());"},toLocaleUpperCase:{definition:"将字符串转换为大写，并根据主机的语言环境进行本地化处理",syntax:"string.toLocaleUpperCase()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.toLocaleUpperCase());"},toLowerCase:{definition:"将字符串转换为小写",syntax:"string.toLowerCase()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.toLowerCase());"},toUpperCase:{definition:"将字符串转换为大写",syntax:"string.toUpperCase()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.toUpperCase());"},valueOf:{definition:"返回指定对象的原始值",syntax:"string.valueOf()",parameters:"{Null}",return:"String",demo:"var str = new String('Hello, World!');<br/>console.log(str.valueOf());"},isWellFormed:{definition:"检查字符串是否是一个形式良好的 Unicode 字符串",syntax:"string.isWellFormed()",parameters:"{Null}",return:"Boolean",demo:"var str = 'Hello, World!';<br/>console.log(str.isWellFormed());"},toWellFormed:{definition:"返回一个形式良好的 Unicode 字符串",syntax:"string.toWellFormed()",parameters:"{Null}",return:"String",demo:"var str = 'Hello, World!';<br/>console.log(str.toWellFormed());"}},Number:{toExponential:{definition:"以指数表示法返回该数字的字符串表示",syntax:"number.toExponential(fractionDigits)",parameters:"{Number} fractionDigits (可选) - 小数位数",return:"String",demo:"var num = 123.456789;<br/>console.log(num.toExponential(2));"},toFixed:{definition:"使用定点表示法返回该数字的字符串表示，指定小数位数",syntax:"number.toFixed(fractionDigits)",parameters:"{Number} fractionDigits - 小数位数",return:"String",demo:"var num = 123.456789;<br/>console.log(num.toFixed(2));"},toPrecision:{definition:"返回该数字的字符串表示，指定有效数字的总位数",syntax:"number.toPrecision(precision)",parameters:"{Number} precision - 有效数字的总位数",return:"String",demo:"var num = 123.456789;<br/>console.log(num.toPrecision(4));"},toString:{definition:"返回数字的字符串表示",syntax:"number.toString(radix)",parameters:"{Number} radix (可选) - 进制数，默认为 10",return:"String",demo:"var num = 123;<br/>console.log(num.toString(2));"},valueOf:{definition:"返回指定对象的原始值",syntax:"number.valueOf()",parameters:"{Null}",return:"Number",demo:"var num = new Number(123);<br/>console.log(num.valueOf());"},toLocaleString:{definition:"返回该数字的字符串表示，根据主机的语言环境进行本地化处理",syntax:"number.toLocaleString()",parameters:"{Null}",return:"String",demo:"var num = 1234567.89;<br/>console.log(num.toLocaleString());"}},Array:{length:{definition:"返回数组的长度",syntax:"array.length",parameters:"{Null}",return:"Number",demo:"var arr = [1, 2, 3];<br/>console.log(arr.length);"},at:{definition:"返回指定索引处的元素值",syntax:"array.at(index)",parameters:"{Number} index - 索引值",return:"Any",demo:"var arr = ['a', 'b', 'c'];<br/>console.log(arr.at(1));"},concat:{definition:"将多个数组或值合并为一个新数组",syntax:"array.concat(value1, value2, ..., valueN)",parameters:"{Any} value1, value2, ..., valueN - 要合并的数组或值",return:"Array",demo:"var arr1 = [1, 2, 3];<br/>var arr2 = [4, 5];<br/>var newArr = arr1.concat(arr2);<br/>console.log(newArr);"},copyWithin:{definition:"将数组的一部分元素复制到同一数组中的另一个位置",syntax:"array.copyWithin(target, start, end)",parameters:"{Number} target - 复制的目标位置索引<br/>{Number} start (可选) - 复制的起始位置索引，默认为 0<br/>{Number} end (可选) - 复制的结束位置索引，默认为数组长度",return:"Array",demo:"var arr = [1, 2, 3, 4, 5];<br/>arr.copyWithin(0, 3);<br/>console.log(arr);"},fill:{definition:"用一个固定值填充数组的所有元素",syntax:"array.fill(value, start, end)",parameters:"{Any} value - 填充的值<br/>{Number} start (可选) - 填充的起始位置索引，默认为 0<br/>{Number} end (可选) - 填充的结束位置索引，默认为数组长度",return:"Array",demo:"var arr = [1, 2, 3];<br/>arr.fill(0);<br/>console.log(arr);"},find:{definition:"返回数组中满足条件的第一个元素的值",syntax:"array.find(callback, thisArg)",parameters:"{Function} callback - 用于测试每个元素的回调函数<br/>{Any} thisArg (可选) - 回调函数中的 this 值，默认为 undefined",return:"Any",demo:"var arr = [1, 2, 3];<br/>var result = arr.find(function(element) {<br/>&nbsp;&nbsp;return element > 1;<br/>});<br/>console.log(result);"},findIndex:{definition:"返回数组中满足条件的第一个元素的索引",syntax:"array.findIndex(callback, thisArg)",parameters:"{Function} callback - 用于测试每个元素的回调函数<br/>{Any} thisArg (可选) - 回调函数中的 this 值，默认为 undefined",return:"Number",demo:"var arr = [1, 2, 3];<br/>var index = arr.findIndex(function(element) {<br/>&nbsp;&nbsp;return element > 1;<br/>});<br/>console.log(index);"},findLast:{definition:"返回数组中满足条件的最后一个元素的值",syntax:"array.findLast(callback, thisArg)",parameters:"{Function} callback - 用于测试每个元素的回调函数<br/>{Any} thisArg (可选) - 回调函数中的 this 值，默认为 undefined",return:"Any",demo:"var arr = [1, 2, 3];<br/>var result = arr.findLast(function(element) {<br/>&nbsp;&nbsp;return element > 1;<br/>});<br/>console.log(result);"},findLastIndex:{definition:"返回数组中满足条件的最后一个元素的索引",syntax:"array.findLastIndex(callback, thisArg)",parameters:"{Function} callback - 用于测试每个元素的回调函数<br/>{Any} thisArg (可选) - 回调函数中的 this 值，默认为 undefined",return:"Number",demo:"var arr = [1, 2, 3];<br/>var index = arr.findLastIndex(function(element) {<br/>&nbsp;&nbsp;return element > 1;<br/>});<br/>console.log(index);"},lastIndexOf:{definition:"返回指定元素在数组中最后出现的索引",syntax:"array.lastIndexOf(searchElement, fromIndex)",parameters:"{Any} searchElement - 要查找的元素值<br/>{Number} fromIndex (可选) - 开始搜索的索引，默认为数组末尾",return:"Number",demo:"var arr = [1, 2, 3, 2, 1];<br/>console.log(arr.lastIndexOf(2));"},pop:{definition:"删除并返回数组的最后一个元素",syntax:"array.pop()",parameters:"{Null}",return:"Any",demo:"var arr = [1, 2, 3];<br/>console.log(arr.pop());"},push:{definition:"向数组末尾添加一个或多个元素，并返回新的长度",syntax:"array.push(element1, element2, ..., elementN)",parameters:"{Any} element1, element2, ..., elementN - 要添加的元素",return:"Number",demo:"var arr = [1, 2, 3];<br/>console.log(arr.push(4, 5));"},reverse:{definition:"颠倒数组中元素的顺序",syntax:"array.reverse()",parameters:"{Null}",return:"Array",demo:"var arr = [1, 2, 3];<br/>arr.reverse();<br/>console.log(arr);"},shift:{definition:"删除并返回数组的第一个元素",syntax:"array.shift()",parameters:"{Null}",return:"Any",demo:"var arr = [1, 2, 3];<br/>console.log(arr.shift());"},unshift:{definition:"向数组的开头添加一个或多个元素，并返回新的长度",syntax:"array.unshift(element1, element2, ..., elementN)",parameters:"{Any} element1, element2, ..., elementN - 要添加的元素",return:"Number",demo:"var arr = [1, 2, 3];<br/>console.log(arr.unshift(0));"},slice:{definition:"从数组中提取指定范围的元素，返回一个新数组",syntax:"array.slice(start, end)",parameters:"{Number} start (可选) - 提取的起始位置索引，默认为 0<br/>{Number} end (可选) - 提取的结束位置索引，默认为数组长度",return:"Array",demo:"var arr = [1, 2, 3, 4, 5];<br/>var newArr = arr.slice(1, 4);<br/>console.log(newArr);"},sort:{definition:"对数组元素进行排序",syntax:"array.sort(compareFunction)",parameters:"{Function} compareFunction (可选) - 指定排序规则的比较函数",return:"Array",demo:"var arr = [3, 1, 2];<br/>arr.sort();<br/>console.log(arr);"},splice:{definition:"删除、替换或添加数组的元素，并返回被删除的元素组成的数组",syntax:"array.splice(start, deleteCount, item1, item2, ..., itemN)",parameters:"{Number} start - 开始修改的索引位置<br/>{Number} deleteCount (可选) - 要删除的元素个数<br/>{Any} item1, item2, ..., itemN (可选) - 要添加到数组的元素",return:"Array",demo:"var arr = [1, 2, 3, 4, 5];<br/>var deletedItems = arr.splice(2, 2, 'a', 'b');<br/>console.log(deletedItems);"},includes:{definition:"判断数组是否包含指定元素",syntax:"array.includes(searchElement, fromIndex)",parameters:"{Any} searchElement - 要查找的元素值<br/>{Number} fromIndex (可选) - 开始搜索的索引，默认为 0",return:"Boolean",demo:"var arr = [1, 2, 3];<br/>console.log(arr.includes(2));"},indexOf:{definition:"返回指定元素在数组中第一次出现的索引",syntax:"array.indexOf(searchElement, fromIndex)",parameters:"{Any} searchElement - 要查找的元素值<br/>{Number} fromIndex (可选) - 开始搜索的索引，默认为 0",return:"Number",demo:"var arr = [1, 2, 3, 2, 1];<br/>console.log(arr.indexOf(2));"},join:{definition:"将数组的所有元素连接成一个字符串",syntax:"array.join(separator)",parameters:"{String} separator (可选) - 指定连接元素的分隔符，默认为逗号",return:"String",demo:"var arr = ['Hello', 'World'];<br/>console.log(arr.join(' '));"},keys:{definition:"返回数组中每个元素的索引迭代器",syntax:"array.keys()",parameters:"{Null}",return:"Iterator",demo:"var arr = ['a', 'b', 'c'];<br/>var iterator = arr.keys();<br/>for (var key of iterator) {<br/>&nbsp;&nbsp;console.log(key);<br/>}"},entries:{definition:"返回数组中每个元素的索引和值迭代器",syntax:"array.entries()",parameters:"{Null}",return:"Iterator",demo:"var arr = ['a', 'b', 'c'];<br/>var iterator = arr.entries();<br/>for (var entry of iterator) {<br/>&nbsp;&nbsp;console.log(entry);<br/>}"},values:{definition:"返回数组中每个元素的值迭代器",syntax:"array.values()",parameters:"{Null}",return:"Iterator",demo:"var arr = ['a', 'b', 'c'];<br/>var iterator = arr.values();<br/>for (var value of iterator) {<br/>&nbsp;&nbsp;console.log(value);<br/>}"},forEach:{definition:"对数组的每个元素执行指定操作",syntax:"array.forEach(callback, thisArg)",parameters:"{Function} callback - 对每个元素执行的回调函数<br/>{Any} thisArg (可选) - 回调函数中的 this 值，默认为 undefined",return:"{Null}",demo:"var arr = [1, 2, 3];<br/>arr.forEach(function(element) {<br/>&nbsp;&nbsp;console.log(element);<br/>});"},filter:{definition:"根据指定条件筛选数组的元素，并返回一个新数组",syntax:"array.filter(callback, thisArg)",parameters:"{Function} callback - 用于测试每个元素的回调函数<br/>{Any} thisArg (可选) - 回调函数中的 this 值，默认为 undefined",return:"Array",demo:"var arr = [1, 2, 3, 4, 5];<br/>var newArr = arr.filter(function(element) {<br/>&nbsp;&nbsp;return element > 2;<br/>});<br/>console.log(newArr);"},flat:{definition:"将嵌套多维数组转换为一维数组",syntax:"array.flat(depth)",parameters:"{Number} depth (可选) - 指定递归展开的深度，默认为 1",return:"Array",demo:"var arr = [1, [2, [3, 4], 5]];<br/>var flatArr = arr.flat();<br/>console.log(flatArr);"},flatMap:{definition:"先对数组中的每个元素执行映射函数，然后将结果展平成一个新数组",syntax:"array.flatMap(callback, thisArg)",parameters:"{Function} callback - 对每个元素执行的映射函数<br/>{Any} thisArg (可选) - 映射函数中的 this 值，默认为 undefined",return:"Array",demo:"var arr = [1, 2, 3];<br/>var newArr = arr.flatMap(function(element) {<br/>&nbsp;&nbsp;return [element, element * 2];<br/>});<br/>console.log(newArr);"},map:{definition:"对数组的每个元素执行指定映射操作，并返回一个新数组",syntax:"array.map(callback, thisArg)",parameters:"{Function} callback - 对每个元素执行的映射函数<br/>{Any} thisArg (可选) - 映射函数中的 this 值，默认为 undefined",return:"Array",demo:"var arr = [1, 2, 3];<br/>var newArr = arr.map(function(element) {<br/>&nbsp;&nbsp;return element * 2;<br/>});<br/>console.log(newArr);"},every:{definition:"判断数组中的所有元素是否满足指定条件",syntax:"array.every(callback, thisArg)",parameters:"{Function} callback - 对每个元素执行的条件判断函数<br/>{Any} thisArg (可选) - 条件判断函数中的 this 值，默认为 undefined",return:"Boolean",demo:"var arr = [1, 2, 3];<br/>var result = arr.every(function(element) {<br/>&nbsp;&nbsp;return element > 0;<br/>});<br/>console.log(result);"},some:{definition:"判断数组中是否存在满足指定条件的元素",syntax:"array.some(callback, thisArg)",parameters:"{Function} callback - 对每个元素执行的条件判断函数<br/>{Any} thisArg (可选) - 条件判断函数中的 this 值，默认为 undefined",return:"Boolean",demo:"var arr = [1, 2, 3];<br/>var result = arr.some(function(element) {<br/>&nbsp;&nbsp;return element > 2;<br/>});<br/>console.log(result);"},reduce:{definition:"对数组的每个元素执行指定归约操作，返回一个累计值",syntax:"array.reduce(callback, initialValue)",parameters:"{Function} callback - 对每个元素执行的归约函数<br/>{Any} initialValue (可选) - 归约的初始值",return:"Any",demo:"var arr = [1, 2, 3];<br/>var sum = arr.reduce(function(accumulator, currentValue) {<br/>&nbsp;&nbsp;return accumulator + currentValue;<br/>}, 0);<br/>console.log(sum);"},reduceRight:{definition:"对数组的每个元素执行指定归约操作（从右到左），返回一个累计值",syntax:"array.reduceRight(callback, initialValue)",parameters:"{Function} callback - 对每个元素执行的归约函数<br/>{Any} initialValue (可选) - 归约的初始值",return:"Any",demo:"var arr = [1, 2, 3];<br/>var sum = arr.reduceRight(function(accumulator, currentValue) {<br/>&nbsp;&nbsp;return accumulator + currentValue;<br/>}, 0);<br/>console.log(sum);"},toLocaleString:{definition:"返回数组的元素转换为字符串后的本地化表示",syntax:"array.toLocaleString(locales, options)",parameters:"{String|Array} locales (可选) - 指定要使用的语言或语言数组，默认为宿主环境的默认语言<br/>{Object} options (可选) - 可配置的选项对象",return:"String",demo:"var arr = [1, 2, 3];<br/>console.log(arr.toLocaleString('en-US'));"},toString:{definition:"将数组转换为字符串",syntax:"array.toString()",parameters:"{Null}",return:"String",demo:"var arr = [1, 2, 3];<br/>console.log(arr.toString());"},toReversed:{definition:"返回一个将数组元素颠倒顺序的新数组",syntax:"array.toReversed()",parameters:"{Null}",return:"Array",demo:"var arr = [1, 2, 3];<br/>var reversedArr = arr.toReversed();<br/>console.log(reversedArr);"},toSorted:{definition:"返回一个按升序排列数组元素的新数组",syntax:"array.toSorted()",parameters:"{Null}",return:"Array",demo:"var arr = [3, 1, 2];<br/>var sortedArr = arr.toSorted();<br/>console.log(sortedArr);"},toSpliced:{definition:"返回一个删除指定元素后的新数组",syntax:"array.toSpliced(index, deleteCount)",parameters:"{Number} index - 要删除的元素的索引<br/>{Number} deleteCount - 要删除的元素个数",return:"Array",demo:"var arr = [1, 2, 3, 4, 5];<br/>var splicedArr = arr.toSpliced(2, 2);<br/>console.log(splicedArr);"},with:{definition:"使用给定的对象调用数组的方法",syntax:"array.with(thisArg)",parameters:"{Any} thisArg - 方法调用的 this 值",return:"{Any}",demo:"var arr = [1, 2, 3];<br/>var sum = arr.with(Math).reduce(function(accumulator, currentValue) {<br/>&nbsp;&nbsp;return accumulator + currentValue;<br/>}, 0);<br/>console.log(sum);"}},Boolean:{toString:{definition:"将布尔值转换为字符串",syntax:"boolean.toString()",parameters:"{Null}",return:"String",demo:"var bool = true;<br/>console.log(bool.toString());"},valueOf:{definition:"返回布尔值的原始值",syntax:"boolean.valueOf()",parameters:"{Null}",return:"Boolean",demo:"var bool = new Boolean(true);<br/>console.log(bool.valueOf());"}},Date:{toString:{definition:"将日期对象转换为字符串",syntax:"date.toString()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toString());"},toDateString:{definition:"返回日期的字符串表示，不包含时间部分",syntax:"date.toDateString()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toDateString());"},toTimeString:{definition:"返回时间的字符串表示，不包含日期部分",syntax:"date.toTimeString()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toTimeString());"},toISOString:{definition:"返回日期对象的字符串表示，采用ISO格式",syntax:"date.toISOString()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toISOString());"},toUTCString:{definition:"根据世界时，将日期对象转换为字符串",syntax:"date.toUTCString()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toUTCString());"},toGMTString:{definition:"根据格林威治时间，将日期对象转换为字符串",syntax:"date.toGMTString()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toGMTString());"},getDate:{definition:"返回日期的天数（1-31）",syntax:"date.getDate()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getDate());"},setDate:{definition:"设置日期的天数",syntax:"date.setDate(day)",parameters:"day: Number (1-31)",return:"Number",demo:"var date = new Date();<br/>date.setDate(15);"},getDay:{definition:"返回星期几的索引（0-6）",syntax:"date.getDay()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getDay());"},getFullYear:{definition:"返回四位数的年份",syntax:"date.getFullYear()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getFullYear());"},setFullYear:{definition:"设置四位数的年份",syntax:"date.setFullYear(year)",parameters:"year: Number",return:"Number",demo:"var date = new Date();<br/>date.setFullYear(2022);"},getHours:{definition:"返回小时数（0-23）",syntax:"date.getHours()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getHours());"},setHours:{definition:"设置小时数",syntax:"date.setHours(hour)",parameters:"hour: Number (0-23)",return:"Number",demo:"var date = new Date();<br/>date.setHours(12);"},getMilliseconds:{definition:"返回毫秒数（0-999）",syntax:"date.getMilliseconds()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getMilliseconds());"},setMilliseconds:{definition:"设置毫秒数",syntax:"date.setMilliseconds(ms)",parameters:"ms: Number (0-999)",return:"Number",demo:"var date = new Date();<br/>date.setMilliseconds(500);"},getMinutes:{definition:"返回分钟数（0-59）",syntax:"date.getMinutes()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getMinutes());"},setMinutes:{definition:"设置分钟数",syntax:"date.setMinutes(minutes)",parameters:"minutes: Number (0-59)",return:"Number",demo:"var date = new Date();<br/>date.setMinutes(30);"},getMonth:{definition:"返回月份的索引（0-11）",syntax:"date.getMonth()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getMonth());"},setMonth:{definition:"设置月份的索引",syntax:"date.setMonth(month)",parameters:"month: Number (0-11)",return:"Number",demo:"var date = new Date();<br/>date.setMonth(9);"},getSeconds:{definition:"返回秒数（0-59）",syntax:"date.getSeconds()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getSeconds());"},setSeconds:{definition:"设置秒数",syntax:"date.setSeconds(seconds)",parameters:"seconds: Number (0-59)",return:"Number",demo:"var date = new Date();<br/>date.setSeconds(45);"},getTime:{definition:"返回自 1970 年 1 月 1 日 00:00:00 UTC 以来的毫秒数",syntax:"date.getTime()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getTime());"},setTime:{definition:"设置日期对象的毫秒数",syntax:"date.setTime(milliseconds)",parameters:"milliseconds: Number",return:"Number",demo:"var date = new Date();<br/>date.setTime(1623934800000);"},getTimezoneOffset:{definition:"返回当前时区与UTC之间的分钟差",syntax:"date.getTimezoneOffset()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getTimezoneOffset());"},getUTCDate:{definition:"根据世界时返回日期的天数（1-31）",syntax:"date.getUTCDate()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getUTCDate());"},setUTCDate:{definition:"根据世界时设置日期的天数",syntax:"date.setUTCDate(day)",parameters:"day: Number (1-31)",return:"Number",demo:"var date = new Date();<br/>date.setUTCDate(20);"},getUTCDay:{definition:"根据世界时返回星期几的索引（0-6）",syntax:"date.getUTCDay()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getUTCDay());"},getUTCFullYear:{definition:"根据世界时返回四位数的年份",syntax:"date.getUTCFullYear()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getUTCFullYear());"},setUTCFullYear:{definition:"根据世界时设置四位数的年份",syntax:"date.setUTCFullYear(year)",parameters:"year: Number",return:"Number",demo:"var date = new Date();<br/>date.setUTCFullYear(2022);"},getUTCHours:{definition:"根据世界时返回小时数（0-23）",syntax:"date.getUTCHours()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getUTCHours());"},setUTCHours:{definition:"根据世界时设置小时数",syntax:"date.setUTCHours(hour)",parameters:"hour: Number (0-23)",return:"Number",demo:"var date = new Date();<br/>date.setUTCHours(8);"},getUTCMilliseconds:{definition:"根据世界时返回毫秒数（0-999）",syntax:"date.getUTCMilliseconds()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getUTCMilliseconds());"},setUTCMilliseconds:{definition:"根据世界时设置毫秒数",syntax:"date.setUTCMilliseconds(ms)",parameters:"ms: Number (0-999)",return:"Number",demo:"var date = new Date();<br/>date.setUTCMilliseconds(500);"},getUTCMinutes:{definition:"根据世界时返回分钟数（0-59）",syntax:"date.getUTCMinutes()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getUTCMinutes());"},setUTCMinutes:{definition:"根据世界时设置分钟数",syntax:"date.setUTCMinutes(minutes)",parameters:"minutes: Number (0-59)",return:"Number",demo:"var date = new Date();<br/>date.setUTCMinutes(30);"},getUTCMonth:{definition:"根据世界时返回月份的索引（0-11）",syntax:"date.getUTCMonth()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getUTCMonth());"},setUTCMonth:{definition:"根据世界时设置月份的索引",syntax:"date.setUTCMonth(month)",parameters:"month: Number (0-11)",return:"Number",demo:"var date = new Date();<br/>date.setUTCMonth(9);"},getUTCSeconds:{definition:"根据世界时返回秒数（0-59）",syntax:"date.getUTCSeconds()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getUTCSeconds());"},setUTCSeconds:{definition:"根据世界时设置秒数",syntax:"date.setUTCSeconds(seconds)",parameters:"seconds: Number (0-59)",return:"Number",demo:"var date = new Date();<br/>date.setUTCSeconds(45);"},valueOf:{definition:"返回日期对象的原始值",syntax:"date.valueOf()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.valueOf());"},getYear:{definition:"返回年份的后两位数",syntax:"date.getYear()",parameters:"{Null}",return:"Number",demo:"var date = new Date();<br/>console.log(date.getYear());"},setYear:{definition:"设置年份的后两位数",syntax:"date.setYear(year)",parameters:"year: Number",return:"Number",demo:"var date = new Date();<br/>date.setYear(22);"},toJSON:{definition:"将日期对象转换为JSON字符串",syntax:"date.toJSON()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toJSON());"},toLocaleString:{definition:"返回日期对象的本地字符串表示",syntax:"date.toLocaleString()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toLocaleString());"},toLocaleDateString:{definition:"返回日期对象的本地日期字符串表示",syntax:"date.toLocaleDateString()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toLocaleDateString());"},toLocaleTimeString:{definition:"返回日期对象的本地时间字符串表示",syntax:"date.toLocaleTimeString()",parameters:"{Null}",return:"String",demo:"var date = new Date();<br/>console.log(date.toLocaleTimeString());"}},Math:{abs:{definition:"返回一个数的绝对值",syntax:"Math.abs(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.abs(-5));"},acos:{definition:"返回一个数的反余弦值",syntax:"Math.acos(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.acos(0.5));"},acosh:{definition:"返回一个数的反双曲余弦值",syntax:"Math.acosh(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.acosh(2));"},asin:{definition:"返回一个数的反正弦值",syntax:"Math.asin(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.asin(0.5));"},asinh:{definition:"返回一个数的反双曲正弦值",syntax:"Math.asinh(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.asinh(1));"},atan:{definition:"返回一个数的反正切值",syntax:"Math.atan(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.atan(1));"},atanh:{definition:"返回一个数的反双曲正切值",syntax:"Math.atanh(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.atanh(0.5));"},atan2:{definition:"返回两个数的反正切值",syntax:"Math.atan2(y, x)",parameters:"y: Number, x: Number",return:"Number",demo:"console.log(Math.atan2(1, 1));"},ceil:{definition:"对一个数进行上取整",syntax:"Math.ceil(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.ceil(4.3));"},cbrt:{definition:"返回一个数的立方根",syntax:"Math.cbrt(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.cbrt(8));"},expm1:{definition:"返回e的x次方减1的值",syntax:"Math.expm1(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.expm1(1));"},clz32:{definition:"返回一个数在二进制表示中前导零的个数",syntax:"Math.clz32(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.clz32(1));"},cos:{definition:"返回一个数的余弦值",syntax:"Math.cos(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.cos(Math.PI));"},cosh:{definition:"返回一个数的双曲余弦值",syntax:"Math.cosh(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.cosh(0));"},exp:{definition:"返回e的x次方",syntax:"Math.exp(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.exp(1));"},floor:{definition:"对一个数进行下取整",syntax:"Math.floor(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.floor(4.7));"},fround:{definition:"返回一个数的单精度浮点表示",syntax:"Math.fround(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.fround(0.1 + 0.2));"},hypot:{definition:"返回一组数的平方和的平方根",syntax:"Math.hypot(...args)",parameters:"args: Number",return:"Number",demo:"console.log(Math.hypot(3, 4));"},imul:{definition:"返回两个数相乘的32位整数结果",syntax:"Math.imul(x, y)",parameters:"x: Number, y: Number",return:"Number",demo:"console.log(Math.imul(2, 3));"},log:{definition:"返回一个数的自然对数",syntax:"Math.log(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.log(10));"},log1p:{definition:"返回一个数加1的自然对数",syntax:"Math.log1p(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.log1p(1));"},log2:{definition:"返回一个数以2为底的对数",syntax:"Math.log2(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.log2(8));"},log10:{definition:"返回一个数以10为底的对数",syntax:"Math.log10(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.log10(100));"},max:{definition:"返回一组数中的最大值",syntax:"Math.max(...args)",parameters:"args: Number",return:"Number",demo:"console.log(Math.max(1, 2, 3));"},min:{definition:"返回一组数中的最小值",syntax:"Math.min(...args)",parameters:"args: Number",return:"Number",demo:"console.log(Math.min(1, 2, 3));"},pow:{definition:"返回一个数的指定次幂",syntax:"Math.pow(base, exponent)",parameters:"base: Number, exponent: Number",return:"Number",demo:"console.log(Math.pow(2, 3));"},random:{definition:"返回一个0到1之间的随机数",syntax:"Math.random()",return:"Number",demo:"console.log(Math.random());"},round:{definition:"对一个数进行四舍五入",syntax:"Math.round(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.round(4.5));"},sign:{definition:"返回一个数的符号",syntax:"Math.sign(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.sign(-3));"},sin:{definition:"返回一个数的正弦值",syntax:"Math.sin(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.sin(Math.PI / 2));"},sinh:{definition:"返回一个数的双曲正弦值",syntax:"Math.sinh(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.sinh(0));"},sqrt:{definition:"返回一个数的平方根",syntax:"Math.sqrt(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.sqrt(9));"},tan:{definition:"返回一个数的正切值",syntax:"Math.tan(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.tan(0));"},tanh:{definition:"返回一个数的双曲正切值",syntax:"Math.tanh(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.tanh(0));"},trunc:{definition:"去除一个数的小数部分，返回整数部分",syntax:"Math.trunc(x)",parameters:"x: Number",return:"Number",demo:"console.log(Math.trunc(4.9));"},E:{definition:"常量，自然对数的底数e",syntax:"Math.E",return:"Number",demo:"console.log(Math.E);"},LN10:{definition:"常量，10的自然对数",syntax:"Math.LN10",return:"Number",demo:"console.log(Math.LN10);"},LN2:{definition:"常量，2的自然对数",syntax:"Math.LN2",return:"Number",demo:"console.log(Math.LN2);"},LOG10E:{definition:"常量，以10为底的e的对数",syntax:"Math.LOG10E",return:"Number",demo:"console.log(Math.LOG10E);"},LOG2E:{definition:"常量，以2为底的e的对数",syntax:"Math.LOG2E",return:"Number",demo:"console.log(Math.LOG2E);"},PI:{definition:"常量，圆周率π",syntax:"Math.PI",return:"Number",demo:"console.log(Math.PI);"},SQRT1_2:{definition:"常量，1/2的平方根",syntax:"Math.SQRT1_2",return:"Number",demo:"console.log(Math.SQRT1_2);"},SQRT2:{definition:"常量，2的平方根",syntax:"Math.SQRT2",return:"Number",demo:"console.log(Math.SQRT2);"}},_:{length:{definition:"返回集合的长度",syntax:"_.length(collection)",parameters:"collection: Array | Object | String",return:"Number",demo:"console.log(_.length([1, 2, 3]));"},name:{definition:"获取函数的名称",syntax:"_.name(func)",parameters:"func: Function",return:"String",demo:"console.log(_.name(_.map));"},arguments:{definition:"获取函数的参数列表",syntax:"_.arguments(func)",parameters:"func: Function",return:"Array",demo:"console.log(_.arguments(_.map));"},caller:{definition:"获取函数的调用者",syntax:"_.caller(func)",parameters:"func: Function",return:"Function",demo:"console.log(_.caller(_.map));"},prototype:{definition:"获取对象的原型",syntax:"_.prototype(value)",parameters:"value: any",return:"Object",demo:"console.log(_.prototype([]));"},templateSettings:{definition:"获取或设置模板引擎的设置",syntax:"_.templateSettings",return:"Object",demo:"console.log(_.templateSettings.escape);"},after:{definition:"创建一个函数，调用n次后才会执行",syntax:"_.after(n, func)",parameters:"n: Number, func: Function",return:"Function",demo:"const greet = _.after(3, () => console.log('Hello!'));<br/>greet();<br/>greet();<br/>greet();"},ary:{definition:"创建一个函数，限制函数的参数个数",syntax:"_.ary(func, n)",parameters:"func: Function, n: Number",return:"Function",demo:"const add = (a, b) => a + b;<br/>const addTwo = _.ary(add, 2);<br/>console.log(addTwo(1, 2, 3));"},assign:{definition:"将源对象的可枚举属性复制到目标对象",syntax:"_.assign(object, ...sources)",parameters:"object: Object, sources: Object",return:"Object",demo:"const obj1 = { a: 1 };<br/>const obj2 = { b: 2 };<br/>const merged = _.assign(obj1, obj2);<br/>console.log(merged);"},assignIn:{definition:"将所有可枚举属性从一个或多个源对象复制到目标对象",syntax:"_.assignIn(object, ...sources)",parameters:"object: Object, sources: Object",return:"Object",demo:"const obj1 = { a: 1 };<br/>const obj2 = { b: 2 };<br/>const merged = _.assignIn(obj1, obj2);<br/>console.log(merged);"},assignInWith:{definition:"将所有可枚举属性从一个或多个源对象复制到目标对象，可自定义复制行为",syntax:"_.assignInWith(object, ...sources, customizer)",parameters:"object: Object, sources: Object, customizer: Function",return:"Object",demo:"const obj1 = { a: 1 };<br/>const obj2 = { b: 2 };<br/>const merged = _.assignInWith(obj1, obj2, (objValue, srcValue) => objValue || srcValue);<br/>console.log(merged);"},assignWith:{definition:"将源对象的可枚举属性复制到目标对象，可自定义复制行为",syntax:"_.assignWith(object, ...sources, customizer)",parameters:"object: Object, sources: Object, customizer: Function",return:"Object",demo:"const obj1 = { a: 1 };<br/>const obj2 = { b: 2 };<br/>const merged = _.assignWith(obj1, obj2, (objValue, srcValue) => objValue || srcValue);<br/>console.log(merged);"},at:{definition:"从对象中获取指定路径的值",syntax:"_.at(object, paths)",parameters:"object: Object, paths: (string | string[])",return:"Array",demo:"const obj = { a: { b: { c: 3 } } };<br/>const value = _.at(obj, ['a.b.c']);<br/>console.log(value);"},before:{definition:"创建一个函数，调用n次后不再执行",syntax:"_.before(n, func)",parameters:"n: Number, func: Function",return:"Function",demo:"const greet = _.before(3, () => console.log('Hello!'));<br/>greet();<br/>greet();<br/>greet();"},bind:{definition:"创建一个绑定上下文的函数",syntax:"_.bind(func, thisArg, ...partials)",parameters:"func: Function, thisArg: any, partials: any",return:"Function",demo:"const greet = function (message) {<br/>  console.log(`${message} ${this.name}!`);<br/>};<br/>const boundGreet = _.bind(greet, { name: 'Alice' }, 'Hello');<br/>boundGreet();"},bindAll:{definition:"绑定对象中的所有方法到对象本身",syntax:"_.bindAll(object, ...methodNames)",parameters:"object: Object, methodNames: (string | string[])",return:"Object",demo:"const obj = {<br/>  name: 'Alice',<br/>  greet() {<br/>    console.log(`Hello, ${this.name}!`);<br/>  },<br/>};<br/><br/>_.bindAll(obj, 'greet');<br/>obj.greet();"},bindKey:{definition:"创建一个绑定上下文和指定键的函数",syntax:"_.bindKey(object, key, ...partials)",parameters:"object: Object, key: string, partials: any",return:"Function",demo:"const obj = {<br/>  name: 'Alice',<br/>  greet(message) {<br/>    console.log(`${message} ${this.name}!`);<br/>  },<br/>};<br/><br/>const boundGreet = _.bindKey(obj, 'greet', 'Hello');<br/>boundGreet();"},castArray:{definition:"将值转换为数组",syntax:"_.castArray(value)",parameters:"value: any",return:"Array",demo:"console.log(_.castArray(1));<br/>console.log(_.castArray({ a: 1 }));<br/>console.log(_.castArray([1, 2, 3]));"},chain:{definition:"创建一个lodash链式调用的封装对象",syntax:"_.chain(value)",parameters:"value: any",return:"Object",demo:"const result = _.chain([1, 2, 3])<br/>  .map(n => n * 2)<br/>  .filter(n => n % 3 === 0)<br/>  .value();<br/>console.log(result);"},chunk:{definition:"将数组分割成指定大小的块",syntax:"_.chunk(array, size)",parameters:"array: Array, size: Number",return:"Array",demo:"const array = [1, 2, 3, 4, 5, 6];<br/>const chunks = _.chunk(array, 2);<br/>console.log(chunks);"},compact:{definition:"创建一个移除所有假值的数组副本",syntax:"_.compact(array)",parameters:"array: Array",return:"Array",demo:"const array = [1, 0, null, '', undefined, 2, false];<br/>const compactArray = _.compact(array);<br/>console.log(compactArray);"},concat:{definition:"将多个数组或值连接成一个数组",syntax:"_.concat(array, ...values)",parameters:"array: Array, values: any",return:"Array",demo:"const array1 = [1];<br/>const array2 = [2];<br/>const concatenated = _.concat(array1, array2, [3], 4);<br/>console.log(concatenated);"},cond:{definition:"创建一个函数，根据断言函数返回的结果执行对应的函数",syntax:"_.cond(pairs)",parameters:"pairs: Array",return:"Function",demo:"const classify = _.cond([<br/>  [n => n < 0, n => 'negative'],<br/>  [n => n === 0, n => 'zero'],<br/>  [n => n > 0, n => 'positive'],<br/>]);<br/><br/>console.log(classify(5));<br/>console.log(classify(0));<br/>console.log(classify(-5));"},conforms:{definition:"创建一个断言函数，根据对象的属性是否满足特定条件返回结果",syntax:"_.conforms(source)",parameters:"source: Object",return:"Function",demo:"const users = [<br/>  { name: 'Alice', age: 25 },<br/>  { name: 'Bob', age: 30 },<br/>  { name: 'Charlie', age: 20 },<br/>];<br/><br/>const criteria = _.conforms({<br/>  age: age => age < 30,<br/>});<br/><br/>const filtered = _.filter(users, criteria);<br/>console.log(filtered);"},constant:{definition:"创建一个返回固定值的函数",syntax:"_.constant(value)",parameters:"value: any",return:"Function",demo:"const alwaysTrue = _.constant(true);<br/>console.log(alwaysTrue());<br/>console.log(alwaysTrue());"},countBy:{definition:"根据迭代函数的结果对集合中的元素进行分组统计",syntax:"_.countBy(collection, iteratee)",parameters:"collection: Array | Object, iteratee: Function",return:"Object",demo:"const users = [<br/>  { name: 'Alice', age: 25 },<br/>  { name: 'Bob', age: 30 },<br/>  { name: 'Charlie', age: 25 },<br/>];<br/><br/>const countByAge = _.countBy(users, user => user.age);<br/>console.log(countByAge);"},create:{definition:"创建一个具有指定原型的对象",syntax:"_.create(prototype, properties)",parameters:"prototype: Object, properties: Object",return:"Object",demo:"const person = {<br/>  greet() {<br/>    console.log(`Hello, ${this.name}!`);<br/>  },<br/>};<br/><br/>const alice = _.create(person, { name: 'Alice' });<br/>alice.greet();"},curry:{definition:"创建一个柯里化的函数",syntax:"_.curry(func, arity)",parameters:"func: Function, arity: Number",return:"Function",demo:"const add = (a, b, c) => a + b + c;<br/>const curriedAdd = _.curry(add);<br/>console.log(curriedAdd(1)(2)(3));<br/>console.log(curriedAdd(1, 2)(3));<br/>console.log(curriedAdd(1, 2, 3));"},curryRight:{definition:"从右到左创建一个柯里化的函数",syntax:"_.curryRight(func, arity)",parameters:"func: Function, arity: Number",return:"Function",demo:"const divide = (a, b, c) => a / b / c;<br/>const curriedDivide = _.curryRight(divide);<br/>console.log(curriedDivide(12)(6)(2));<br/>console.log(curriedDivide(12, 6)(2));<br/>console.log(curriedDivide(12, 6, 2));"},debounce:{definition:"创建一个防抖函数，延迟执行函数的调用，直到一段时间内没有新的调用",syntax:"_.debounce(func, wait, options)",parameters:"func: Function, wait: Number, options: Object",return:"Function",demo:"window.addEventListener('scroll', _.debounce(() => {<br/>  console.log('Scroll event debounced.');<br/>}, 200));"},defaults:{definition:"将指定对象的属性复制到目标对象，但只复制目标对象不存在的属性",syntax:"_.defaults(object, ...sources)",parameters:"object: Object, sources: Object",return:"Object",demo:"const obj1 = { a: 1 };<br/>const obj2 = { b: 2, c: 3 };<br/>const merged = _.defaults(obj1, obj2);<br/>console.log(merged);"},defaultsDeep:{definition:"将指定对象的属性复制到目标对象的深层属性中，但只复制目标对象不存在的属性",syntax:"_.defaultsDeep(object, ...sources)",parameters:"object: Object, sources: Object",return:"Object",demo:"const obj1 = { a: { b: 1 } };<br/>const obj2 = { a: { c: 2 } };<br/>const merged = _.defaultsDeep(obj1, obj2);<br/>console.log(merged);"},defer:{definition:"延迟调用函数，直到当前调用栈清空",syntax:"_.defer(func, ...args)",parameters:"func: Function, args: any",return:"Number",demo:"_.defer(() => {<br/>  console.log('Deferred function called.');<br/>});"},delay:{definition:"延迟调用函数，经过指定的延迟时间后执行",syntax:"_.delay(func, wait, ...args)",parameters:"func: Function, wait: Number, args: any",return:"Number",demo:"_.delay(() => {<br/>  console.log('Delayed function called.');<br/>}, 2000);"},difference:{definition:"创建一个剔除所有给定数组中的元素后的数组",syntax:"_.difference(array, ...values)",parameters:"array: Array, values: Array",return:"Array",demo:"const array1 = [1, 2, 3, 4, 5];<br/>const array2 = [3, 4, 5, 6, 7];<br/>const diff = _.difference(array1, array2);<br/>console.log(diff);"},differenceBy:{definition:"根据迭代函数的结果创建一个剔除所有给定数组中的元素后的数组",syntax:"_.differenceBy(array, ...values, iteratee)",parameters:"array: Array, values: Array, iteratee: Function | string",return:"Array",demo:"const array1 = [1.1, 2.2, 3.3, 4.4, 5.5];<br/>const array2 = [3.3, 4.4, 5.5, 6.6, 7.7];<br/>const diff = _.differenceBy(array1, array2, Math.floor);<br/>console.log(diff);"},differenceWith:{definition:"使用比较函数创建一个剔除所有给定数组中的元素后的数组",syntax:"_.differenceWith(array, values, comparator)",parameters:"array: Array, values: Array, comparator: Function",return:"Array",demo:"const array1 = [{ x: 1, y: 2 }, { x: 2, y: 3 }];<br/>const array2 = [{ x: 1, y: 2 }];<br/>const diff = _.differenceWith(array1, array2, _.isEqual);<br/>console.log(diff);"},drop:{definition:"创建一个剔除指定数量元素后的数组",syntax:"_.drop(array, n)",parameters:"array: Array, n: Number",return:"Array",demo:"const array = [1, 2, 3, 4, 5];<br/>const dropped = _.drop(array, 2);<br/>console.log(dropped);"},dropRight:{definition:"创建一个剔除指定数量元素后的倒序数组",syntax:"_.dropRight(array, n)",parameters:"array: Array, n: Number",return:"Array",demo:"const array = [1, 2, 3, 4, 5];<br/>const droppedRight = _.dropRight(array, 2);<br/>console.log(droppedRight);"},dropRightWhile:{definition:"创建一个剔除满足条件的元素后的倒序数组",syntax:"_.dropRightWhile(array, predicate)",parameters:"array: Array, predicate: Function | Object",return:"Array",demo:"const users = [<br/>  { name: 'Alice', active: true },<br/>  { name: 'Bob', active: true },<br/>  { name: 'Charlie', active: false },<br/>];<br/><br/>const droppedRight = _.dropRightWhile(users, user => !user.active);<br/>console.log(droppedRight);"},dropWhile:{definition:"创建一个剔除满足条件的元素后的数组",syntax:"_.dropWhile(array, predicate)",parameters:"array: Array, predicate: Function | Object",return:"Array",demo:"const users = [<br/>  { name: 'Alice', active: false },<br/>  { name: 'Bob', active: false },<br/>  { name: 'Charlie', active: true },<br/>];<br/><br/>const dropped = _.dropWhile(users, user => !user.active);<br/>console.log(dropped);"},fill:{definition:"用指定值填充数组的元素",syntax:"_.fill(array, value, start, end)",parameters:"array: Array, value: any, start: Number, end: Number",return:"Array",demo:"const array = [1, 2, 3, 4, 5];<br/>_.fill(array, 'a', 1, 4);<br/>console.log(array);"},filter:{definition:"根据断言函数筛选出符合条件的元素",syntax:"_.filter(collection, predicate)",parameters:"collection: Array | Object, predicate: Function | Object",return:"Array",demo:"const users = [<br/>  { name: 'Alice', active: true },<br/>  { name: 'Bob', active: false },<br/>  { name: 'Charlie', active: true },<br/>];<br/><br/>const filtered = _.filter(users, user => user.active);<br/>console.log(filtered);"},flatMap:{definition:"先映射每个元素，然后将结果扁平化为一个新数组",syntax:"_.flatMap(collection, iteratee)",parameters:"collection: Array | Object, iteratee: Function",return:"Array",demo:"const array = [1, 2, 3];<br/>const doubled = _.flatMap(array, num => [num, num * 2]);<br/>console.log(doubled);"},flatMapDeep:{definition:"递归地先映射每个元素，然后将结果扁平化为一个新数组",syntax:"_.flatMapDeep(collection, iteratee)",parameters:"collection: Array | Object, iteratee: Function",return:"Array",demo:"const array = [1, [2, [3, [4]], 5]];<br/>const flattened = _.flatMapDeep(array, num => [num, num * 2]);<br/>console.log(flattened);"},flatMapDepth:{definition:"指定递归深度地先映射每个元素，然后将结果扁平化为一个新数组",syntax:"_.flatMapDepth(collection, iteratee, depth)",parameters:"collection: Array | Object, iteratee: Function, depth: Number",return:"Array",demo:"const array = [1, [2, [3, [4]], 5]];<br/>const flattened = _.flatMapDepth(array, num => [num, num * 2], 2);<br/>console.log(flattened);"},flatten:{definition:"扁平化数组",syntax:"_.flatten(array)",parameters:"array: Array",return:"Array",demo:"const array = [1, [2, [3, [4]], 5]];<br/>const flattened = _.flatten(array);<br/>console.log(flattened);"},flattenDeep:{definition:"递归地扁平化数组",syntax:"_.flattenDeep(array)",parameters:"array: Array",return:"Array",demo:"const array = [1, [2, [3, [4]], 5]];<br/>const flattened = _.flattenDeep(array);<br/>console.log(flattened);"},flattenDepth:{definition:"指定递归深度地扁平化数组",syntax:"_.flattenDepth(array, depth)",parameters:"array: Array, depth: Number",return:"Array",demo:"const array = [1, [2, [3, [4]], 5]];<br/>const flattened = _.flattenDepth(array, 2);<br/>console.log(flattened);"},flip:{definition:"创建一个接受参数顺序相反的函数",syntax:"_.flip(func)",parameters:"func: Function",return:"Function",demo:"const subtract = (a, b) => a - b;<br/>const flippedSubtract = _.flip(subtract);<br/>console.log(flippedSubtract(5, 10));"},flow:{definition:"创建一个函数，依次调用给定的函数，将每个函数的返回值作为下一个函数的参数",syntax:"_.flow(...funcs)",parameters:"funcs: Function[]",return:"Function",demo:"const add = (a, b) => a + b;<br/>const square = x => x * x;<br/>const addThenSquare = _.flow(add, square);<br/>console.log(addThenSquare(2, 3));"},flowRight:{definition:"创建一个函数，依次调用给定的函数，将每个函数的返回值作为下一个函数的参数（从右到左）",syntax:"_.flowRight(...funcs)",parameters:"funcs: Function[]",return:"Function",demo:"const add = (a, b) => a + b;<br/>const square = x => x * x;<br/>const squareThenAdd = _.flowRight(square, add);<br/>console.log(squareThenAdd(2, 3));"},fromPairs:{definition:"将键值对数组转换为对象",syntax:"_.fromPairs(pairs)",parameters:"pairs: Array",return:"Object",demo:"const pairs = [['a', 1], ['b', 2], ['c', 3]];<br/>const obj = _.fromPairs(pairs);<br/>console.log(obj);"},functions:{definition:"获取对象自身可枚举属性名组成的数组",syntax:"_.functions(object)",parameters:"object: Object",return:"Array",demo:"const object = {<br/>  a: () => {},<br/>  b: () => {},<br/>  c: () => {}<br/>};<br/><br/>const funcs = _.functions(object);<br/>console.log(funcs);"},functionsIn:{definition:"获取对象自身和继承的可枚举属性名组成的数组",syntax:"_.functionsIn(object)",parameters:"object: Object",return:"Array",demo:"function Foo() {<br/>  this.a = () => {};<br/>  this.b = () => {};<br/>}<br/><br/>Foo.prototype.c = () => {};<br/><br/>const object = new Foo();<br/>const funcs = _.functionsIn(object);<br/>console.log(funcs);"},groupBy:{definition:"根据指定条件对集合进行分组",syntax:"_.groupBy(collection, iteratee)",parameters:"collection: Array | Object, iteratee: Function | Object",return:"Object",demo:"const users = [<br/>  { name: 'Alice', age: 20 },<br/>  { name: 'Bob', age: 25 },<br/>  { name: 'Charlie', age: 20 },<br/>];<br/><br/>const grouped = _.groupBy(users, 'age');<br/>console.log(grouped);"},initial:{definition:"获取除了最后一个元素外的所有元素组成的数组",syntax:"_.initial(array)",parameters:"array: Array",return:"Array",demo:"const array = [1, 2, 3, 4, 5];<br/>const initial = _.initial(array);<br/>console.log(initial);"},intersection:{definition:"创建一个包含所有给定数组中共有元素的数组",syntax:"_.intersection(...arrays)",parameters:"arrays: Array[]",return:"Array",demo:"const array1 = [1, 2, 3];<br/>const array2 = [2, 3, 4];<br/>const array3 = [3, 4, 5];<br/>const intersection = _.intersection(array1, array2, array3);<br/>console.log(intersection);"},intersectionBy:{definition:"使用迭代函数创建一个包含所有给定数组中共有元素的数组",syntax:"_.intersectionBy(...arrays, iteratee)",parameters:"arrays: Array[], iteratee: Function",return:"Array",demo:"const array1 = [1.1, 2.2, 3.3];<br/>const array2 = [2.2, 3.3, 4.4];<br/>const array3 = [3.3, 4.4, 5.5];<br/>const intersection = _.intersectionBy(array1, array2, array3, Math.floor);<br/>console.log(intersection);"},intersectionWith:{definition:"使用比较函数创建一个包含所有给定数组中共有元素的数组",syntax:"_.intersectionWith(...arrays, comparator)",parameters:"arrays: Array[], comparator: Function",return:"Array",demo:"const array1 = [{ x: 1, y: 2 }, { x: 2, y: 3 }];<br/>const array2 = [{ x: 2, y: 3 }, { x: 3, y: 4 }];<br/>const array3 = [{ x: 3, y: 4 }, { x: 4, y: 5 }];<br/>const intersection = _.intersectionWith(array1, array2, array3, _.isEqual);<br/>console.log(intersection);"},invert:{definition:"创建一个对象，其键值对是原始对象的值和键的对应关系",syntax:"_.invert(object)",parameters:"object: Object",return:"Object",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const inverted = _.invert(object);<br/>console.log(inverted);"},invertBy:{definition:"根据迭代函数创建一个对象，其键值对是原始对象的值和键的对应关系",syntax:"_.invertBy(object, iteratee)",parameters:"object: Object, iteratee: Function",return:"Object",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const inverted = _.invertBy(object, String);<br/>console.log(inverted);"},invokeMap:{definition:"对集合中的每个元素调用相应的方法，并返回结果组成的数组",syntax:"_.invokeMap(collection, path, ...args)",parameters:"collection: Array | Object, path: Function | Array | string, args: any[]",return:"Array",demo:"const objects = [{ a: 1, b: 2 }, { a: 3, b: 4 }];<br/>const result = _.invokeMap(objects, 'a.toFixed', 1);<br/>console.log(result);"},iteratee:{definition:"转换参数为一个可以作为迭代函数的函数",syntax:"_.iteratee(value)",parameters:"value: any",return:"Function",demo:"const iteratee = _.iteratee('a.b.c');<br/>console.log(iteratee({ a: { b: { c: 42 } } }));"},keyBy:{definition:"根据指定条件将集合转换为以指定键为索引的对象",syntax:"_.keyBy(collection, iteratee)",parameters:"collection: Array | Object, iteratee: Function | Object | string",return:"Object",demo:"const users = [<br/>  { id: '1', name: 'Alice' },<br/>  { id: '2', name: 'Bob' },<br/>  { id: '3', name: 'Charlie' },<br/>];<br/><br/>const indexed = _.keyBy(users, 'id');<br/>console.log(indexed);"},keys:{definition:"获取对象自身可枚举属性名组成的数组",syntax:"_.keys(object)",parameters:"object: Object",return:"Array",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const keys = _.keys(object);<br/>console.log(keys);"},keysIn:{definition:"获取对象自身和继承的可枚举属性名组成的数组",syntax:"_.keysIn(object)",parameters:"object: Object",return:"Array",demo:"function Foo() {<br/>  this.a = 1;<br/>  this.b = 2;<br/>}<br/><br/>Foo.prototype.c = 3;<br/><br/>const object = new Foo();<br/>const keys = _.keysIn(object);<br/>console.log(keys);"},map:{definition:"对集合中的每个元素调用相应的方法，并返回结果组成的数组",syntax:"_.map(collection, iteratee)",parameters:"collection: Array | Object, iteratee: Function",return:"Array",demo:"const array = [1, 2, 3];<br/>const doubled = _.map(array, n => n * 2);<br/>console.log(doubled);"},mapKeys:{definition:"根据指定条件将对象的键转换为新的键",syntax:"_.mapKeys(object, iteratee)",parameters:"object: Object, iteratee: Function",return:"Object",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const mapped = _.mapKeys(object, (value, key) => key.toUpperCase());<br/>console.log(mapped);"},mapValues:{definition:"根据指定条件对对象的值进行转换",syntax:"_.mapValues(object, iteratee)",parameters:"object: Object, iteratee: Function",return:"Object",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const mapped = _.mapValues(object, n => n * 2);<br/>console.log(mapped);"},matches:{definition:"创建一个深度比较的对象",syntax:"_.matches(source)",parameters:"source: Object",return:"Function",demo:"const object = { a: 1, b: 2 };<br/>const matcher = _.matches({ b: 2 });<br/>console.log(matcher(object));"},matchesProperty:{definition:"创建一个基于对象的属性和值的深度比较的函数",syntax:"_.matchesProperty(path, srcValue)",parameters:"path: Array | string, srcValue: any",return:"Function",demo:"const object = { a: 1, b: 2 };<br/>const matcher = _.matchesProperty('b', 2);<br/>console.log(matcher(object));"},memoize:{definition:"创建一个记忆化的函数，缓存其结果",syntax:"_.memoize(func, [resolver])",parameters:"func: Function, resolver: Function",return:"Function",demo:"const expensiveFunc = n => {<br/>  console.log('Computing...');<br/>  return n * 2;<br/>};<br/><br/>const memoizedFunc = _.memoize(expensiveFunc);<br/>console.log(memoizedFunc(5));<br/>console.log(memoizedFunc(5)); // Output should be cached"},merge:{definition:"将源对象的可枚举属性合并到目标对象",syntax:"_.merge(object, ...sources)",parameters:"object: Object, sources: Object[]",return:"Object",demo:"const object = { a: 1 };<br/>const source = { b: 2 };<br/>const merged = _.merge(object, source);<br/>console.log(merged);"},mergeWith:{definition:"使用自定义合并函数将源对象的可枚举属性合并到目标对象",syntax:"_.mergeWith(object, ...sources, customizer)",parameters:"object: Object, sources: Object[], customizer: Function",return:"Object",demo:"const object = { a: [1], b: [2] };<br/>const source = { a: [3], b: [4] };<br/><br/>const merged = _.mergeWith(object, source, (objValue, srcValue) => objValue.concat(srcValue));<br/>console.log(merged);"},method:{definition:"创建一个调用给定对象的指定方法的函数",syntax:"_.method(path, [...args])",parameters:"path: Array | string, args: any[]",return:"Function",demo:"const objects = [<br/>  { name: 'Alice', age: 20 },<br/>  { name: 'Bob', age: 25 },<br/>  { name: 'Charlie', age: 30 },<br/>];<br/><br/>const getName = _.method('name');<br/>const names = _.map(objects, getName);<br/>console.log(names);"},methodOf:{definition:"创建一个在给定对象上调用指定方法的函数",syntax:"_.methodOf(object, [...args])",parameters:"object: Object, args: any[]",return:"Function",demo:"const object = {<br/>  greeting: 'Hello',<br/>  greet(name) {<br/>    return `${this.greeting}, ${name}!`;<br/>  },<br/>};<br/><br/>const greet = _.methodOf(object);<br/>console.log(greet('Alice'));"},mixin:{definition:"向Lodash对象中添加自定义方法",syntax:"_.mixin([options={}], [source=lodash])",parameters:"options: Object, source: Object",return:"void",demo:"_.mixin({<br/>  multiply(a, b) {<br/>    return a * b;<br/>  }<br/>});<br/><br/>console.log(_.multiply(2, 3));"},negate:{definition:"创建一个否定给定函数返回结果的函数",syntax:"_.negate(predicate)",parameters:"predicate: Function",return:"Function",demo:"const isEven = n => n % 2 === 0;<br/>const isOdd = _.negate(isEven);<br/><br/>console.log(isOdd(3)); // true<br/>console.log(isOdd(4)); // false"},nthArg:{definition:"创建一个接受参数数组并返回第n个参数的函数",syntax:"_.nthArg(n)",parameters:"n: number",return:"Function",demo:"const func = _.nthArg(1);<br/>console.log(func('a', 'b', 'c')); // 'b'"},omit:{definition:"创建一个排除指定属性的对象副本",syntax:"_.omit(object, [...props])",parameters:"object: Object, props: string[]",return:"Object",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const omitted = _.omit(object, ['a', 'c']);<br/>console.log(omitted);"},omitBy:{definition:"根据断言函数排除对象的属性",syntax:"_.omitBy(object, predicate)",parameters:"object: Object, predicate: Function",return:"Object",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const omitted = _.omitBy(object, n => n % 2 === 0);<br/>console.log(omitted);"},once:{definition:"创建一个函数，调用不超过一次",syntax:"_.once(func)",parameters:"func: Function",return:"Function",demo:"const initialize = _.once(() => {<br/>  console.log('Initializing...');<br/>});<br/><br/>initialize(); // 'Initializing...'<br/>initialize(); // (no output)"},orderBy:{definition:"根据指定条件对集合进行排序",syntax:"_.orderBy(collection, iteratees, orders)",parameters:"collection: Array | Object, iteratees: Function[] | string[], orders: string[]",return:"Array",demo:"const users = [<br/>  { name: 'Alice', age: 25 },<br/>  { name: 'Bob', age: 30 },<br/>  { name: 'Charlie', age: 20 },<br/>];<br/><br/>const sorted = _.orderBy(users, ['name', 'age'], ['asc', 'desc']);<br/>console.log(sorted);"},over:{definition:"创建一个接受一系列函数并返回其结果数组的函数",syntax:"_.over(...fns)",parameters:"fns: Function[]",return:"Function",demo:"const square = n => n * n;<br/>const double = n => n * 2;<br/>const squareAndDouble = _.over(square, double);<br/>console.log(squareAndDouble(5)); // [25, 10]"},overArgs:{definition:"创建一个函数，调用时将参数转换为对应函数的预期参数",syntax:"_.overArgs(func, [transforms])",parameters:"func: Function, transforms: Function[] | Object[]",return:"Function",demo:"const greet = (firstName, lastName) => `Hello, ${firstName} ${lastName}!`;<br/>const capitalize = str => str.toUpperCase();<br/><br/>const greetAndCapitalize = _.overArgs(greet, [capitalize, capitalize]);<br/>console.log(greetAndCapitalize('alice', 'smith')); // 'Hello, ALICE SMITH!'"},overEvery:{definition:"创建一个接受一系列断言函数并返回布尔值的函数，当所有断言函数都返回truthy时，返回true",syntax:"_.overEvery(...predicates)",parameters:"predicates: Function[]",return:"Function",demo:"const isEven = n => n % 2 === 0;<br/>const isPositive = n => n > 0;<br/>const isEvenAndPositive = _.overEvery(isEven, isPositive);<br/><br/>console.log(isEvenAndPositive(4)); // true<br/>console.log(isEvenAndPositive(-2)); // false"},overSome:{definition:"创建一个接受一系列断言函数并返回布尔值的函数，当至少有一个断言函数返回truthy时，返回true",syntax:"_.overSome(...predicates)",parameters:"predicates: Function[]",return:"Function",demo:"const isEven = n => n % 2 === 0;<br/>const isPositive = n => n > 0;<br/>const isEvenOrPositive = _.overSome(isEven, isPositive);<br/><br/>console.log(isEvenOrPositive(4)); // true<br/>console.log(isEvenOrPositive(-2)); // true"},partial:{definition:"创建一个函数，调用时传递部分参数，返回一个接受剩余参数的函数",syntax:"_.partial(func, [...partials])",parameters:"func: Function, partials: any[]",return:"Function",demo:"const greet = (greeting, name) => `${greeting}, ${name}!`;<br/>const sayHello = _.partial(greet, 'Hello');<br/>console.log(sayHello('Alice')); // 'Hello, Alice!'"},partialRight:{definition:"创建一个函数，调用时传递部分参数，返回一个接受先前传递的参数的函数",syntax:"_.partialRight(func, [...partials])",parameters:"func: Function, partials: any[]",return:"Function",demo:"const greet = (greeting, name) => `${greeting}, ${name}!`;<br/>const greetAlice = _.partialRight(greet, 'Alice');<br/>console.log(greetAlice('Hello')); // 'Hello, Alice!'"},partition:{definition:"根据断言函数将集合的元素分成两个数组，一个是符合条件的元素，另一个是不符合条件的元素",syntax:"_.partition(collection, predicate)",parameters:"collection: Array | Object, predicate: Function",return:"Array",demo:"const users = [<br/>  { name: 'Alice', age: 25 },<br/>  { name: 'Bob', age: 30 },<br/>  { name: 'Charlie', age: 20 },<br/>];<br/><br/>const [adults, minors] = _.partition(users, user => user.age >= 18);<br/>console.log(adults);<br/>console.log(minors);"},pick:{definition:"创建一个从对象中选择指定属性的对象副本",syntax:"_.pick(object, [...props])",parameters:"object: Object, props: string[]",return:"Object",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const picked = _.pick(object, ['a', 'c']);<br/>console.log(picked);"},pickBy:{definition:"根据断言函数选择对象的属性",syntax:"_.pickBy(object, predicate)",parameters:"object: Object, predicate: Function",return:"Object",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const picked = _.pickBy(object, n => n % 2 === 0);<br/>console.log(picked);"},property:{definition:"创建一个返回给定对象的指定属性的函数",syntax:"_.property(path)",parameters:"path: Array | string",return:"Function",demo:"const objects = [<br/>  { name: 'Alice', age: 20 },<br/>  { name: 'Bob', age: 25 },<br/>  { name: 'Charlie', age: 30 },<br/>];<br/><br/>const getAge = _.property('age');<br/>const ages = _.map(objects, getAge);<br/>console.log(ages);"},propertyOf:{definition:"创建一个返回给定对象指定属性的函数",syntax:"_.propertyOf(object)",parameters:"object: Object",return:"Function",demo:"const object = { a: { b: { c: 1 } } };<br/>const getValue = _.propertyOf(object);<br/>console.log(getValue('a.b.c')); // 1"},pull:{definition:"从数组中移除指定的值，并返回移除的值组成的数组",syntax:"_.pull(array, ...values)",parameters:"array: any[], values: any[]",return:"Array",demo:"const array = [1, 2, 3, 1, 2, 3];<br/>const removed = _.pull(array, 2, 3);<br/>console.log(removed); // [2, 3]<br/>console.log(array); // [1, 1]"},pullAll:{definition:"从数组中移除指定的值，并返回移除的值组成的数组",syntax:"_.pullAll(array, values)",parameters:"array: any[], values: any[]",return:"Array",demo:"const array = [1, 2, 3, 1, 2, 3];<br/>const removed = _.pullAll(array, [2, 3]);<br/>console.log(removed); // [2, 3]<br/>console.log(array); // [1, 1]"},pullAllBy:{definition:"根据迭代函数从数组中移除指定的值，并返回移除的值组成的数组",syntax:"_.pullAllBy(array, values, [iteratee=_.identity])",parameters:"array: any[], values: any[], iteratee: Function",return:"Array",demo:"const array = [{ x: 1 }, { x: 2 }, { x: 3 }, { x: 1 }, { x: 2 }, { x: 3 }];<br/>const removed = _.pullAllBy(array, [{ x: 2 }, { x: 3 }], 'x');<br/>console.log(removed); // [{ x: 2 }, { x: 3 }]<br/>console.log(array); // [{ x: 1 }, { x: 1 }]"},pullAllWith:{definition:"使用比较函数从数组中移除指定的值，并返回移除的值组成的数组",syntax:"_.pullAllWith(array, values, [comparator])",parameters:"array: any[], values: any[], comparator: Function",return:"Array",demo:"const array = [{ x: 1, y: 1 }, { x: 2, y: 2 }, { x: 3, y: 3 }, { x: 1, y: 1 }, { x: 2, y: 2 }, { x: 3, y: 3 }];<br/>const removed = _.pullAllWith(array, [{ x: 2, y: 2 }, { x: 3, y: 3 }], _.isEqual);<br/>console.log(removed); // [{ x: 2, y: 2 }, { x: 3, y: 3 }]<br/>console.log(array); // [{ x: 1, y: 1 }, { x: 1, y: 1 }]"},pullAt:{definition:"根据索引值从数组中移除对应的元素，并返回移除的元素组成的数组",syntax:"_.pullAt(array, [...indexes])",parameters:"array: any[], indexes: number[]",return:"Array",demo:"const array = ['a', 'b', 'c', 'd'];<br/>const removed = _.pullAt(array, [1, 3]);<br/>console.log(removed); // ['b', 'd']<br/>console.log(array); // ['a', 'c']"},range:{definition:"创建一个包含指定范围内数字的数组",syntax:"_.range([start=0], end, [step=1])",parameters:"start: number, end: number, step: number",return:"Array",demo:"const numbers = _.range(1, 10, 2);<br/>console.log(numbers); // [1, 3, 5, 7, 9]"},rangeRight:{definition:"创建一个包含指定范围内数字的数组，从右到左生成",syntax:"_.rangeRight([start=0], end, [step=1])",parameters:"start: number, end: number, step: number",return:"Array",demo:"const numbers = _.rangeRight(1, 10, 2);<br/>console.log(numbers); // [9, 7, 5, 3, 1]"},rearg:{definition:"创建一个函数，调用时根据指定的参数索引顺序重新排列参数",syntax:"_.rearg(func, indexes)",parameters:"func: Function, indexes: number[]",return:"Function",demo:"const greet = (greeting, name) => `${greeting}, ${name}!`;<br/>const greetAndReverse = _.rearg(greet, [1, 0]);<br/>console.log(greetAndReverse('Hello', 'Alice')); // 'Alice, Hello!'"},reject:{definition:"根据断言函数排除集合的元素",syntax:"_.reject(collection, predicate)",parameters:"collection: Array | Object, predicate: Function",return:"Array",demo:"const users = [<br/>  { name: 'Alice', age: 25 },<br/>  { name: 'Bob', age: 30 },<br/>  { name: 'Charlie', age: 20 },<br/>];<br/><br/>const youngUsers = _.reject(users, user => user.age >= 30);<br/>console.log(youngUsers);"},remove:{definition:"根据断言函数移除数组中符合条件的元素，并返回移除的元素组成的数组",syntax:"_.remove(array, predicate)",parameters:"array: any[], predicate: Function",return:"Array",demo:"const array = [1, 2, 3, 4, 5];<br/>const removed = _.remove(array, n => n % 2 === 0);<br/>console.log(removed); // [2, 4]<br/>console.log(array); // [1, 3, 5]"},rest:{definition:"创建一个函数，调用时从指定索引开始接收参数",syntax:"_.rest(func, [start=func.length-1])",parameters:"func: Function, start: number",return:"Function",demo:"const logArguments = (...args) => console.log(args);<br/>const logRestArguments = _.rest(logArguments, 2);<br/><br/>logRestArguments(1, 2, 3, 4); // [3, 4]"},reverse:{definition:"反转数组或字符串",syntax:"_.reverse(collection)",parameters:"collection: Array | string",return:"Array | string",demo:"const array = [1, 2, 3, 4, 5];<br/>const reversedArray = _.reverse(array);<br/>console.log(reversedArray); // [5, 4, 3, 2, 1]<br/><br/>const string = 'Hello';<br/>const reversedString = _.reverse(string);<br/>console.log(reversedString); // 'olleH'"},sampleSize:{definition:"从数组或字符串中随机获取指定数量的元素",syntax:"_.sampleSize(collection, n)",parameters:"collection: Array | string, n: number",return:"Array | string",demo:"const array = [1, 2, 3, 4, 5];<br/>const sample = _.sampleSize(array, 3);<br/>console.log(sample); // [2, 4, 1]<br/><br/>const string = 'Hello';<br/>const sampleString = _.sampleSize(string, 2);<br/>console.log(sampleString); // 'ol'"},set:{definition:"设置对象指定路径上的值。如果路径不存在，则会创建它",syntax:"_.set(object, path, value)",parameters:"object: Object, path: Array | string, value: any",return:"Object",demo:"const object = {};<br/><br/>_.set(object, 'a[0].b.c', 42);<br/>console.log(object); // { a: [{ b: { c: 42 } }] }"},setWith:{definition:"设置对象指定路径上的值。如果路径不存在，则会创建它。使用自定义的值计算函数",syntax:"_.setWith(object, path, value, customizer)",parameters:"object: Object, path: Array | string, value: any, customizer: Function",return:"Object",demo:"const object = {};<br/><br/>_.setWith(object, 'a[0].b.c', 42, Object);<br/>console.log(object); // { a: [{ b: { c: 42 } }] }"},shuffle:{definition:"随机打乱数组或字符串的顺序",syntax:"_.shuffle(collection)",parameters:"collection: Array | string",return:"Array | string",demo:"const array = [1, 2, 3, 4, 5];<br/>const shuffledArray = _.shuffle(array);<br/>console.log(shuffledArray); // [4, 2, 1, 5, 3]<br/><br/>const string = 'Hello';<br/>const shuffledString = _.shuffle(string);<br/>console.log(shuffledString); // 'oHelL'"},slice:{definition:"返回数组或字符串的片段",syntax:"_.slice(collection, [start=0], [end=collection.length])",parameters:"collection: Array | string, start: number, end: number",return:"Array | string",demo:"const array = [1, 2, 3, 4, 5];<br/>const slicedArray = _.slice(array, 1, 3);<br/>console.log(slicedArray); // [2, 3]<br/><br/>const string = 'Hello';<br/>const slicedString = _.slice(string, 1, 4);<br/>console.log(slicedString); // 'ell'"},sortBy:{definition:"根据指定的属性排序集合的元素",syntax:"_.sortBy(collection, [iteratees])",parameters:"collection: Array | Object, iteratees: (Function | Array)",return:"Array",demo:"const users = [<br/>  { name: 'Alice', age: 25 },<br/>  { name: 'Bob', age: 30 },<br/>  { name: 'Charlie', age: 20 },<br/>];<br/><br/>const sortedUsers = _.sortBy(users, ['age']);<br/>console.log(sortedUsers);"},sortedUniq:{definition:"返回一个去重并排序的数组",syntax:"_.sortedUniq(array)",parameters:"array: Array",return:"Array",demo:"const array = [1, 2, 2, 3, 4, 4, 5];<br/>const sortedUniqArray = _.sortedUniq(array);<br/>console.log(sortedUniqArray); // [1, 2, 3, 4, 5]"},sortedUniqBy:{definition:"根据迭代函数返回的结果对数组进行去重并排序",syntax:"_.sortedUniqBy(array, [iteratee=_.identity])",parameters:"array: Array, iteratee: Function",return:"Array",demo:"const array = [1.1, 1.2, 2.3, 2.4, 3.5, 3.6];<br/>const sortedUniqByArray = _.sortedUniqBy(array, Math.floor);<br/>console.log(sortedUniqByArray); // [1.1, 2.3, 3.5]"},split:{definition:"将字符串按指定的分隔符拆分成数组",syntax:"_.split(string, separator, [limit])",parameters:"string: string, separator: RegExp | string, limit: number",return:"Array",demo:"const string = 'Hello, World!';<br/>const words = _.split(string, ' ');<br/>console.log(words); // ['Hello,', 'World!']"},spread:{definition:"创建一个函数，调用时将接收到的参数作为单独的参数传递给另一个函数",syntax:"_.spread(func, [start=0])",parameters:"func: Function, start: number",return:"Function",demo:"const sum = (a, b, c) => a + b + c;<br/>const spreadSum = _.spread(sum);<br/><br/>console.log(spreadSum([1, 2, 3])); // 6"},tail:{definition:"返回数组或字符串的除第一个元素外的剩余部分",syntax:"_.tail(array)",parameters:"array: Array | string",return:"Array | string",demo:"const array = [1, 2, 3, 4, 5];<br/>const tailArray = _.tail(array);<br/>console.log(tailArray); // [2, 3, 4, 5]<br/><br/>const string = 'Hello';<br/>const tailString = _.tail(string);<br/>console.log(tailString); // 'ello'"},take:{definition:"返回数组或字符串的前n个元素",syntax:"_.take(array, [n=1])",parameters:"array: Array | string, n: number",return:"Array | string",demo:"const array = [1, 2, 3, 4, 5];<br/>const takenArray = _.take(array, 3);<br/>console.log(takenArray); // [1, 2, 3]<br/><br/>const string = 'Hello';<br/>const takenString = _.take(string, 2);<br/>console.log(takenString); // 'He'"},takeRight:{definition:"返回数组或字符串的后n个元素",syntax:"_.takeRight(array, [n=1])",parameters:"array: Array | string, n: number",return:"Array | string",demo:"const array = [1, 2, 3, 4, 5];<br/>const takenRightArray = _.takeRight(array, 3);<br/>console.log(takenRightArray); // [3, 4, 5]<br/><br/>const string = 'Hello';<br/>const takenRightString = _.takeRight(string, 2);<br/>console.log(takenRightString); // 'lo'"},takeRightWhile:{definition:"从数组或字符串的末尾开始获取元素，直到断言函数返回假值",syntax:"_.takeRightWhile(array, [predicate=_.identity])",parameters:"array: Array | string, predicate: Function",return:"Array | string",demo:"const array = [1, 2, 3, 4, 5];<br/>const takenRightWhileArray = _.takeRightWhile(array, n => n > 2);<br/>console.log(takenRightWhileArray); // [3, 4, 5]<br/><br/>const string = 'Hello';<br/>const takenRightWhileString = _.takeRightWhile(string, c => c !== 'o');<br/>console.log(takenRightWhileString); // 'Hell'"},takeWhile:{definition:"从数组或字符串的开头开始获取元素，直到断言函数返回假值",syntax:"_.takeWhile(array, [predicate=_.identity])",parameters:"array: Array | string, predicate: Function",return:"Array | string",demo:"const array = [1, 2, 3, 4, 5];<br/>const takenWhileArray = _.takeWhile(array, n => n < 4);<br/>console.log(takenWhileArray); // [1, 2, 3]<br/><br/>const string = 'Hello';<br/>const takenWhileString = _.takeWhile(string, c => c !== 'o');<br/>console.log(takenWhileString); // 'Hell'"},tap:{definition:"调用函数，并传递值，然后返回该值",syntax:"_.tap(value, interceptor)",parameters:"value: any, interceptor: Function",return:"any",demo:"const greet = name => `Hello, ${name}!`;<br/>const tappedGreet = _.tap(greet, console.log);<br/><br/>tappedGreet('Alice'); // 'Hello, Alice!' (printed to console)"},throttle:{definition:"创建一个节流函数，确保在指定的时间间隔内最多只调用一次函数",syntax:"_.throttle(func, [wait=0], [options={}])",parameters:"func: Function, wait: number, options: Object",return:"Function",demo:"const logMessage = message => console.log(message);<br/>const throttledLog = _.throttle(logMessage, 1000);<br/><br/>throttledLog('Hello'); // 'Hello' (printed to console)<br/>throttledLog('World'); // (nothing printed)<br/><br/>// After 1 second<br/>throttledLog('OpenAI'); // 'OpenAI' (printed to console)"},thru:{definition:"通过将值传递给函数并返回该函数的结果来链式调用方法",syntax:"_.thru(value, interceptor)",parameters:"value: any, interceptor: Function",return:"any",demo:"const double = n => n * 2;<br/>const result = _.thru(5, double);<br/>console.log(result); // 10"},toArray:{definition:"将值转换为数组",syntax:"_.toArray(value)",parameters:"value: any",return:"Array",demo:"const object = { a: 1, b: 2 };<br/>const array = _.toArray(object);<br/>console.log(array); // [1, 2]<br/><br/>const string = 'Hello';<br/>const stringArray = _.toArray(string);<br/>console.log(stringArray); // ['H', 'e', 'l', 'l', 'o']"},toPairs:{definition:"将对象转换为[key, value]对的数组",syntax:"_.toPairs(object)",parameters:"object: Object",return:"Array",demo:"const object = { a: 1, b: 2 };<br/>const pairs = _.toPairs(object);<br/>console.log(pairs); // [['a', 1], ['b', 2]]"},toPairsIn:{definition:"将对象自身和继承的可枚举属性转换为[key, value]对的数组",syntax:"_.toPairsIn(object)",parameters:"object: Object",return:"Array",demo:"function Shape() {<br/>  this.x = 0;<br/>  this.y = 0;<br/>}<br/><br/>Shape.prototype.z = 0;<br/><br/>const shape = new Shape();<br/>const pairsIn = _.toPairsIn(shape);<br/>console.log(pairsIn); // [['x', 0], ['y', 0], ['z', 0]]"},toPath:{definition:"将字符串转换为路径数组",syntax:"_.toPath(value)",parameters:"value: any",return:"Array",demo:"const path = _.toPath('a.b[0].c');<br/>console.log(path); // ['a', 'b', '0', 'c']"},toPlainObject:{definition:"将对象的原型链上的属性复制到新的普通对象上",syntax:"_.toPlainObject(value)",parameters:"value: any",return:"Object",demo:"const person = Object.create({ name: 'Alice' });<br/>person.age = 25;<br/><br/>const plainObject = _.toPlainObject(person);<br/>console.log(plainObject); // { age: 25 }"},transform:{definition:"对对象的自身和继承的可枚举属性进行迭代并应用转换函数",syntax:"_.transform(object, [iteratee=_.identity], [accumulator])",parameters:"object: Object, iteratee: Function, accumulator: any",return:"any",demo:"const object = { a: 1, b: 2, c: 1 };<br/><br/>const result = _.transform(object, (result, value, key) => {<br/>  (result[value] || (result[value] = [])).push(key);<br/>}, {});<br/><br/>console.log(result); // { '1': ['a', 'c'], '2': ['b'] }"},unary:{definition:"创建一个接受一个参数的函数",syntax:"_.unary(func)",parameters:"func: Function",return:"Function",demo:"const binaryFn = (a, b) => a + b;<br/>const unaryFn = _.unary(binaryFn);<br/><br/>console.log(unaryFn(1, 2)); // 3"},union:{definition:"创建一个按顺序排列的唯一值的数组",syntax:"_.union([arrays])",parameters:"arrays: Array[]",return:"Array",demo:"const array1 = [2];<br/>const array2 = [1, 2];<br/><br/>const unionArray = _.union(array1, array2);<br/>console.log(unionArray); // [2, 1]"},unionBy:{definition:"根据转换函数对数组的元素进行比较，创建一个按顺序排列的唯一值的数组",syntax:"_.unionBy([arrays], [iteratee=_.identity])",parameters:"arrays: Array[], iteratee: Function",return:"Array",demo:"const array1 = [2.1];<br/>const array2 = [1.2, 2.3];<br/><br/>const unionByArray = _.unionBy(array1, array2, Math.floor);<br/>console.log(unionByArray); // [2.1, 1.2]"},unionWith:{definition:"使用比较函数对数组的元素进行比较，创建一个按顺序排列的唯一值的数组",syntax:"_.unionWith([arrays], [comparator])",parameters:"arrays: Array[], comparator: Function",return:"Array",demo:"const objects1 = [{ x: 1, y: 2 }, { x: 2, y: 1 }];<br/>const objects2 = [{ x: 1, y: 1 }, { x: 1, y: 2 }];<br/><br/>const unionWithArray = _.unionWith(objects1, objects2, _.isEqual);<br/>console.log(unionWithArray); // [{ x: 1, y: 2 }, { x: 2, y: 1 }, { x: 1, y: 1 }]"},uniq:{definition:"创建一个去重后的数组",syntax:"_.uniq(array)",parameters:"array: Array",return:"Array",demo:"const array = [1, 2, 2, 3, 3, 4, 5, 5];<br/>const uniqueArray = _.uniq(array);<br/>console.log(uniqueArray); // [1, 2, 3, 4, 5]"},uniqBy:{definition:"根据转换函数创建一个去重后的数组",syntax:"_.uniqBy(array, [iteratee=_.identity])",parameters:"array: Array, iteratee: Function",return:"Array",demo:"const array = [1.1, 1.2, 2.3, 2.4, 3.5];<br/>const uniqueByArray = _.uniqBy(array, Math.floor);<br/>console.log(uniqueByArray); // [1.1, 2.3, 3.5]"},uniqWith:{definition:"使用比较函数创建一个去重后的数组",syntax:"_.uniqWith(array, [comparator])",parameters:"array: Array, comparator: Function",return:"Array",demo:"const objects = [{ x: 1, y: 2 }, { x: 2, y: 1 }, { x: 1, y: 2 }];<br/><br/>const uniqueWithArray = _.uniqWith(objects, _.isEqual);<br/>console.log(uniqueWithArray); // [{ x: 1, y: 2 }, { x: 2, y: 1 }]"},unset:{definition:"从对象中删除指定路径的属性",syntax:"_.unset(object, path)",parameters:"object: Object, path: string | Array",return:"boolean",demo:"const object = { 'a': [{ 'b': { 'c': 7 } }] };<br/><br/>_.unset(object, 'a[0].b.c');<br/>console.log(object); // { 'a': [{}] }"},unzip:{definition:"将多个数组的对应元素组合成新的数组",syntax:"_.unzip(arrays)",parameters:"arrays: Array[]",return:"Array",demo:"const zipped = [['a', 1, true], ['b', 2, false]];<br/>const unzipped = _.unzip(zipped);<br/>console.log(unzipped); // [['a', 'b'], [1, 2], [true, false]]"},unzipWith:{definition:"将多个数组的对应元素组合成新的数组，并使用指定的迭代器对每个组合进行处理",syntax:"_.unzipWith(arrays, [iteratee=_.identity])",parameters:"arrays: Array[], iteratee: Function",return:"Array",demo:"const zipped = [[1, 10, 100], [2, 20, 200]];<br/>const unzippedWith = _.unzipWith(zipped, _.add);<br/>console.log(unzippedWith); // [3, 30, 300]"},update:{definition:"根据指定路径更新对象的属性值",syntax:"_.update(object, path, updater)",parameters:"object: Object, path: string | Array, updater: Function",return:"Object",demo:"const object = { 'a': [{ 'b': { 'c': 3 } }] };<br/><br/>const updatedObject = _.update(object, 'a[0].b.c', n => n * 2);<br/>console.log(updatedObject); // { 'a': [{ 'b': { 'c': 6 } }] }"},updateWith:{definition:"根据指定路径和自定义函数更新对象的属性值",syntax:"_.updateWith(object, path, updater, [customizer])",parameters:"object: Object, path: string | Array, updater: Function, customizer: Function",return:"Object",demo:"const object = { 'a': [{ 'b': { 'c': 3 } }] };<br/><br/>const updatedObject = _.updateWith(object, 'a[0].b.c', n => n * 2);<br/>console.log(updatedObject); // { 'a': [{ 'b': { 'c': 6 } }] }"},values:{definition:"提取对象自身可枚举属性的值，返回一个数组",syntax:"_.values(object)",parameters:"object: Object",return:"Array",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const valuesArray = _.values(object);<br/>console.log(valuesArray); // [1, 2, 3]"},valuesIn:{definition:"提取对象自身和继承的可枚举属性的值，返回一个数组",syntax:"_.valuesIn(object)",parameters:"object: Object",return:"Array",demo:"function Shape() {<br/>  this.x = 0;<br/>  this.y = 0;<br/>}<br/><br/>Shape.prototype.z = 0;<br/><br/>const shape = new Shape();<br/>const valuesInArray = _.valuesIn(shape);<br/>console.log(valuesInArray); // [0, 0, 0]"},without:{definition:"创建一个不包含指定值的数组副本",syntax:"_.without(array, [values])",parameters:"array: Array, values: ...any",return:"Array",demo:"const array = [1, 2, 3, 4, 5];<br/>const newArray = _.without(array, 2, 4);<br/>console.log(newArray); // [1, 3, 5]"},words:{definition:"将字符串拆分为单词数组",syntax:"_.words([string=''], [pattern])",parameters:"string: string, pattern: RegExp",return:"Array",demo:"const sentence = 'Hello, world!';<br/>const wordsArray = _.words(sentence);<br/>console.log(wordsArray); // ['Hello', 'world']"},wrap:{definition:"将函数包装在一个函数中，并将其作为第一个参数传递给封装函数",syntax:"_.wrap(value, [wrapper=identity])",parameters:"value: any, wrapper: Function",return:"Function",demo:"const greet = name => `Hello, ${name}!`;<br/>const wrappedGreet = _.wrap(greet, func => `*${func('John')}*`);<br/>console.log(wrappedGreet()); // '*Hello, John!*'"},xor:{definition:"创建一个排除了所有给定数组的元素后的数组",syntax:"_.xor([arrays])",parameters:"arrays: Array[]",return:"Array",demo:"const array1 = [2, 1];<br/>const array2 = [2, 3];<br/><br/>const xorArray = _.xor(array1, array2);<br/>console.log(xorArray); // [1, 3]"},xorBy:{definition:"根据转换函数对数组进行比较，创建一个排除了所有给定数组的元素后的数组",syntax:"_.xorBy([arrays], [iteratee=_.identity])",parameters:"arrays: Array[], iteratee: Function",return:"Array",demo:"const array1 = [2.1, 1.2];<br/>const array2 = [2.3, 3.4];<br/><br/>const xorByArray = _.xorBy(array1, array2, Math.floor);<br/>console.log(xorByArray); // [1.2, 3.4]"},xorWith:{definition:"使用比较函数对数组进行比较，创建一个排除了所有给定数组的元素后的数组",syntax:"_.xorWith([arrays], [comparator])",parameters:"arrays: Array[], comparator: Function",return:"Array",demo:"const objects1 = [{ x: 1, y: 2 }, { x: 2, y: 1 }];<br/>const objects2 = [{ x: 1, y: 1 }, { x: 1, y: 2 }];<br/><br/>const xorWithArray = _.xorWith(objects1, objects2, _.isEqual);<br/>console.log(xorWithArray); // [{ x: 2, y: 1 }, { x: 1, y: 1 }]"},zip:{definition:"创建一个组合了多个数组对应位置元素的新数组",syntax:"_.zip([arrays])",parameters:"arrays: Array[]",return:"Array",demo:"const array1 = ['a', 'b', 'c'];<br/>const array2 = [1, 2, 3];<br/><br/>const zippedArray = _.zip(array1, array2);<br/>console.log(zippedArray); // [['a', 1], ['b', 2], ['c', 3]]"},zipObject:{definition:"将两个数组组合成一个对象，以第一个数组作为键名，第二个数组作为对应的值",syntax:"_.zipObject([props=[]], [values=[]])",parameters:"props: Array, values: Array",return:"Object",demo:"const props = ['a', 'b', 'c'];<br/>const values = [1, 2, 3];<br/><br/>const zipObject = _.zipObject(props, values);<br/>console.log(zipObject); // { 'a': 1, 'b': 2, 'c': 3 }"},zipObjectDeep:{definition:"将两个数组组合成一个嵌套对象，以第一个数组作为键路径，第二个数组作为对应的值",syntax:"_.zipObjectDeep([props=[]], [values=[]])",parameters:"props: Array, values: Array",return:"Object",demo:"const props = [['a'], ['b'], ['c']];<br/>const values = [1, 2, 3];<br/><br/>const zipObjectDeep = _.zipObjectDeep(props, values);<br/>console.log(zipObjectDeep); // { 'a': { 'b': { 'c': 3 } } }"},zipWith:{definition:"创建一个组合了多个数组对应位置元素的新数组，并使用指定的迭代器对每个组合进行处理",syntax:"_.zipWith([arrays], [iteratee=_.identity])",parameters:"arrays: Array[], iteratee: Function",return:"Array",demo:"const array1 = [1, 2, 3];<br/>const array2 = [4, 5, 6];<br/><br/>const zipWithArray = _.zipWith(array1, array2, (a, b) => a + b);<br/>console.log(zipWithArray); // [5, 7, 9]"},entries:{definition:"返回对象自身可枚举属性的键值对数组",syntax:"_.entries(object)",parameters:"object: Object",return:"Array",demo:"const object = { a: 1, b: 2, c: 3 };<br/>const entriesArray = _.entries(object);<br/>console.log(entriesArray); // [['a', 1], ['b', 2], ['c', 3]]"},entriesIn:{definition:"返回对象自身和继承的可枚举属性的键值对数组",syntax:"_.entriesIn(object)",parameters:"object: Object",return:"Array",demo:"function Shape() {<br/>  this.x = 0;<br/>  this.y = 0;<br/>}<br/><br/>Shape.prototype.z = 0;<br/><br/>const shape = new Shape();<br/>const entriesInArray = _.entriesIn(shape);<br/>console.log(entriesInArray); // [['x', 0], ['y', 0], ['z', 0]]"},extend:{definition:"将源对象的可枚举属性扩展到目标对象上",syntax:"_.extend(destination, [sources])",parameters:"destination: Object, sources: Object[]",return:"Object",demo:"const object = { a: 1 };<br/>const other = { b: 2 };<br/><br/>const extendedObject = _.extend(object, other);<br/>console.log(extendedObject); // { a: 1, b: 2 }"},extendWith:{definition:"将源对象的可枚举属性扩展到目标对象上，并使用自定义函数处理冲突的属性",syntax:"_.extendWith(destination, [sources], [customizer])",parameters:"destination: Object, sources: Object[], customizer: Function",return:"Object",demo:"const object = { a: 1 };<br/>const other = { b: 2 };<br/><br/>const extendedObject = _.extendWith(object, other, (objValue, srcValue) => objValue === 1 ? 3 : srcValue);<br/>console.log(extendedObject); // { a: 3, b: 2 }"},add:{definition:"两个数相加",syntax:"_.add(augend, addend)",parameters:"augend: number, addend: number",return:"number",demo:"const sum = _.add(2, 3);<br/>console.log(sum); // 5"},attempt:{definition:"尝试调用函数，如果函数抛出错误，则返回错误对象",syntax:"_.attempt(func, [args])",parameters:"func: Function, args: ...any",return:"any",demo:"const result = _.attempt(JSON.parse, '{\"x\": 1}');<br/><br/>if (_.isError(result)) {<br/>  console.log('Parsing failed');<br/>} else {<br/>  console.log(result); // { x: 1 }<br/>}"},camelCase:{definition:"将字符串转换为驼峰命名法",syntax:"_.camelCase([string=''])",parameters:"string: string",return:"string",demo:"const camelCaseString = _.camelCase('Foo Bar');<br/>console.log(camelCaseString); // 'fooBar'"},capitalize:{definition:"将字符串的第一个字符转换为大写，其他字符转换为小写",syntax:"_.capitalize([string=''])",parameters:"string: string",return:"string",demo:"const capitalizedString = _.capitalize('hello');<br/>console.log(capitalizedString); // 'Hello'"},ceil:{definition:"将数字向上取整",syntax:"_.ceil(number, [precision=0])",parameters:"number: number, precision: number",return:"number",demo:"const roundedNumber = _.ceil(4.006);<br/>console.log(roundedNumber); // 5"},clamp:{definition:"将数字限制在指定范围内",syntax:"_.clamp(number, [lower], upper)",parameters:"number: number, lower: number, upper: number",return:"number",demo:"const clampedNumber = _.clamp(7, 3, 5);<br/>console.log(clampedNumber); // 5"},clone:{definition:"创建一个浅拷贝的值",syntax:"_.clone(value)",parameters:"value: any",return:"any",demo:"const object = { a: 1 };<br/>const clonedObject = _.clone(object);<br/>console.log(clonedObject); // { a: 1 }<br/>console.log(object === clonedObject); // false"},cloneDeep:{definition:"创建一个深拷贝的值",syntax:"_.cloneDeep(value)",parameters:"value: any",return:"any",demo:"const object = { a: 1 };<br/>const clonedObject = _.cloneDeep(object);<br/>console.log(clonedObject); // { a: 1 }<br/>console.log(object === clonedObject); // false"},cloneDeepWith:{definition:"创建一个深拷贝的值，并使用自定义函数进行转换",syntax:"_.cloneDeepWith(value, [customizer])",parameters:"value: any, customizer: Function",return:"any",demo:"const object = { a: 1 };<br/>const clonedObject = _.cloneDeepWith(object, value => [value]);<br/>console.log(clonedObject); // [{ a: 1 }]<br/>console.log(object === clonedObject); // false"},cloneWith:{definition:"创建一个浅拷贝的值，并使用自定义函数进行转换",syntax:"_.cloneWith(value, [customizer])",parameters:"value: any, customizer: Function",return:"any",demo:"const object = { a: 1 };<br/>const clonedObject = _.cloneWith(object, value => [value]);<br/>console.log(clonedObject); // [{ a: 1 }]<br/>console.log(object === clonedObject); // false"},conformsTo:{definition:"检查对象是否符合给定的属性约束",syntax:"_.conformsTo(object, source)",parameters:"object: Object, source: Object",return:"boolean",demo:"const object = { a: 1, b: 2 };<br/>const conforms = _.conformsTo(object, { b: n => n > 1 });<br/>console.log(conforms); // true"},deburr:{definition:"将字符串中的重音字符转换为对应的非重音字符",syntax:"_.deburr([string=''])",parameters:"string: string",return:"string",demo:"const deburredString = _.deburr('déjà vu');<br/>console.log(deburredString); // 'deja vu'"},defaultTo:{definition:"如果给定值为null或undefined，则返回默认值",syntax:"_.defaultTo(value, defaultValue)",parameters:"value: any, defaultValue: any",return:"any",demo:"const result1 = _.defaultTo(1, 10);<br/>console.log(result1); // 1<br/><br/>const result2 = _.defaultTo(null, 10);<br/>console.log(result2); // 10<br/><br/>const result3 = _.defaultTo(undefined, 10);<br/>console.log(result3); // 10"},divide:{definition:"两个数相除",syntax:"_.divide(dividend, divisor)",parameters:"dividend: number, divisor: number",return:"number",demo:"const quotient = _.divide(6, 3);<br/>console.log(quotient); // 2"},endsWith:{definition:"检查字符串是否以给定的目标字符串结尾",syntax:"_.endsWith([string=''], target, [position=string.length])",parameters:"string: string, target: string, position: number",return:"boolean",demo:"const endsWithFoo = _.endsWith('foobar', 'bar');<br/>console.log(endsWithFoo); // true<br/><br/>const endsWithBar = _.endsWith('foobar', 'foo');<br/>console.log(endsWithBar); // false"},eq:{definition:"执行严格相等比较，判断两个值是否相等",syntax:"_.eq(value, other)",parameters:"value: any, other: any",return:"boolean",demo:"const equal = _.eq(1, 1);<br/>console.log(equal); // true<br/><br/>const notEqual = _.eq(1, '1');<br/>console.log(notEqual); // false"},escape:{definition:"转义字符串中的特殊字符",syntax:"_.escape([string=''])",parameters:"string: string",return:"string",demo:"const escapedString = _.escape('<p>Hello, world!</p>');<br/>console.log(escapedString); // '&lt;p&gt;Hello, world!&lt;/p&gt;'"},escapeRegExp:{definition:"转义字符串中的正则表达式特殊字符",syntax:"_.escapeRegExp([string=''])",parameters:"string: string",return:"string",demo:"const escapedRegExp = _.escapeRegExp('[lodash](https://lodash.com/)');<br/>console.log(escapedRegExp); // '\\[lodash\\]\\(https://lodash\\.com/\\)'"},every:{definition:"对集合中的每个元素应用断言函数，如果所有元素都满足条件，则返回true",syntax:"_.every(collection, [predicate=_.identity])",parameters:"collection: Array|Object, predicate: Function",return:"boolean",demo:"const users = [<br/>  { name: 'John', age: 25 },<br/>  { name: 'Jane', age: 30 },<br/>  { name: 'Jim', age: 35 }<br/>];<br/><br/>const allUnder40 = _.every(users, user => user.age < 40);<br/>console.log(allUnder40); // true<br/><br/>const allOver30 = _.every(users, user => user.age > 30);<br/>console.log(allOver30); // false"},find:{definition:"返回集合中满足条件的第一个元素",syntax:"_.find(collection, [predicate=_.identity], [fromIndex=0])",parameters:"collection: Array|Object, predicate: Function, fromIndex: number",return:"any",demo:"const users = [<br/>  { name: 'John', age: 25 },<br/>  { name: 'Jane', age: 30 },<br/>  { name: 'Jim', age: 35 }<br/>];<br/><br/>const user = _.find(users, user => user.age > 30);<br/>console.log(user); // { name: 'Jane', age: 30 }"},findIndex:{definition:"返回集合中满足条件的第一个元素的索引",syntax:"_.findIndex(array, [predicate=_.identity], [fromIndex=0])",parameters:"array: Array, predicate: Function, fromIndex: number",return:"number",demo:"const users = [<br/>  { name: 'John', age: 25 },<br/>  { name: 'Jane', age: 30 },<br/>  { name: 'Jim', age: 35 }<br/>];<br/><br/>const index = _.findIndex(users, user => user.age > 30);<br/>console.log(index); // 1"},findKey:{definition:"返回集合中满足条件的第一个元素的键",syntax:"_.findKey(object, [predicate=_.identity])",parameters:"object: Object, predicate: Function",return:"string|null",demo:"const users = {<br/>  john: { name: 'John', age: 25 },<br/>  jane: { name: 'Jane', age: 30 },<br/>  jim: { name: 'Jim', age: 35 }<br/>};<br/><br/>const key = _.findKey(users, user => user.age > 30);<br/>console.log(key); // 'jane'"},findLast:{definition:"返回集合中满足条件的最后一个元素",syntax:"_.findLast(collection, [predicate=_.identity], [fromIndex=collection.length-1])",parameters:"collection: Array|Object, predicate: Function, fromIndex: number",return:"any",demo:"const users = [<br/>  { name: 'John', age: 25 },<br/>  { name: 'Jane', age: 30 },<br/>  { name: 'Jim', age: 35 }<br/>];<br/><br/>const user = _.findLast(users, user => user.age > 30);<br/>console.log(user); // { name: 'Jim', age: 35 }"},findLastIndex:{definition:"返回集合中满足条件的最后一个元素的索引",syntax:"_.findLastIndex(array, [predicate=_.identity], [fromIndex=array.length-1])",parameters:"array: Array, predicate: Function, fromIndex: number",return:"number",demo:"const users = [<br/>  { name: 'John', age: 25 },<br/>  { name: 'Jane', age: 30 },<br/>  { name: 'Jim', age: 35 }<br/>];<br/><br/>const index = _.findLastIndex(users, user => user.age > 30);<br/>console.log(index); // 2"},findLastKey:{definition:"返回集合中满足条件的最后一个元素的键",syntax:"_.findLastKey(object, [predicate=_.identity])",parameters:"object: Object, predicate: Function",return:"string|null",demo:"const users = {<br/>  john: { name: 'John', age: 25 },<br/>  jane: { name: 'Jane', age: 30 },<br/>  jim: { name: 'Jim', age: 35 }<br/>};<br/><br/>const key = _.findLastKey(users, user => user.age > 30);<br/>console.log(key); // 'jim'"},floor:{definition:"将数字向下取整",syntax:"_.floor(number, [precision=0])",parameters:"number: number, precision: number",return:"number",demo:"const roundedNumber = _.floor(4.006);<br/>console.log(roundedNumber); // 4"},forEach:{definition:"对集合中的每个元素应用迭代函数",syntax:"_.forEach(collection, [iteratee=_.identity])",parameters:"collection: Array|Object, iteratee: Function",return:"void",demo:"_.forEach([1, 2, 3], number => {<br/>  console.log(number);<br/>});<br/><br/>// Output:<br/>// 1<br/>// 2<br/>// 3"},forEachRight:{definition:"对集合中的每个元素应用迭代函数，从最后一个元素开始迭代",syntax:"_.forEachRight(collection, [iteratee=_.identity])",parameters:"collection: Array|Object, iteratee: Function",return:"void",demo:"_.forEachRight([1, 2, 3], number => {<br/>  console.log(number);<br/>});<br/><br/>// Output:<br/>// 3<br/>// 2<br/>// 1"},forIn:{definition:"遍历对象的可枚举属性并应用迭代函数",syntax:"_.forIn(object, [iteratee=_.identity])",parameters:"object: Object, iteratee: Function",return:"void",demo:"const object = { a: 1, b: 2, c: 3 };<br/><br/>_.forIn(object, (value, key) => {<br/>  console.log(key, value);<br/>});<br/><br/>// Output:<br/>// a 1<br/>// b 2<br/>// c 3"},forInRight:{definition:"从最后一个可枚举属性开始，遍历对象并应用迭代函数",syntax:"_.forInRight(object, [iteratee=_.identity])",parameters:"object: Object, iteratee: Function",return:"void",demo:"const object = { a: 1, b: 2, c: 3 };<br/><br/>_.forInRight(object, (value, key) => {<br/>  console.log(key, value);<br/>});<br/><br/>// Output:<br/>// c 3<br/>// b 2<br/>// a 1"},forOwn:{definition:"遍历对象的自身可枚举属性并应用迭代函数",syntax:"_.forOwn(object, [iteratee=_.identity])",parameters:"object: Object, iteratee: Function",return:"void",demo:"const object = { a: 1, b: 2, c: 3 };<br/><br/>_.forOwn(object, (value, key) => {<br/>  console.log(key, value);<br/>});<br/><br/>// Output:<br/>// a 1<br/>// b 2<br/>// c 3"},forOwnRight:{definition:"从最后一个自身可枚举属性开始，遍历对象并应用迭代函数",syntax:"_.forOwnRight(object, [iteratee=_.identity])",parameters:"object: Object, iteratee: Function",return:"void",demo:"const object = { a: 1, b: 2, c: 3 };<br/><br/>_.forOwnRight(object, (value, key) => {<br/>  console.log(key, value);<br/>});<br/><br/>// Output:<br/>// c 3<br/>// b 2<br/>// a 1"},get:{definition:"获取对象的属性值",syntax:"_.get(object, path, [defaultValue])",parameters:"object: Object, path: string|Array, defaultValue: any",return:"any",demo:"const object = { a: { b: { c: 1 } } };<br/><br/>const value = _.get(object, 'a.b.c');<br/>console.log(value); // 1<br/><br/>const defaultValue = _.get(object, 'a.b.d', 'default');<br/>console.log(defaultValue); // 'default'"},gt:{definition:"检查第一个值是否大于第二个值",syntax:"_.gt(value, other)",parameters:"value: any, other: any",return:"boolean",demo:"const result = _.gt(5, 3);<br/>console.log(result); // true"},gte:{definition:"检查第一个值是否大于或等于第二个值",syntax:"_.gte(value, other)",parameters:"value: any, other: any",return:"boolean",demo:"const result1 = _.gte(5, 3);<br/>console.log(result1); // true<br/><br/>const result2 = _.gte(3, 3);<br/>console.log(result2); // true"},has:{definition:"检查对象是否具有指定属性",syntax:"_.has(object, path)",parameters:"object: Object, path: string|Array",return:"boolean",demo:"const object = { a: 1, b: 2 };<br/><br/>const hasA = _.has(object, 'a');<br/>console.log(hasA); // true<br/><br/>const hasC = _.has(object, 'c');<br/>console.log(hasC); // false"},hasIn:{definition:"检查对象是否具有指定路径的属性（包括继承的属性）",syntax:"_.hasIn(object, path)",parameters:"object: Object, path: string|Array",return:"boolean",demo:"const object = { a: 1 };<br/>const inheritedObject = Object.create(object);<br/><br/>const hasA = _.hasIn(inheritedObject, 'a');<br/>console.log(hasA); // true<br/><br/>const hasB = _.hasIn(inheritedObject, 'b');<br/>console.log(hasB); // false"},head:{definition:"获取数组的第一个元素",syntax:"_.head(array)",parameters:"array: Array",return:"any",demo:"const array = [1, 2, 3];<br/><br/>const firstElement = _.head(array);<br/>console.log(firstElement); // 1"},identity:{definition:"返回接收到的第一个参数",syntax:"_.identity(value)",parameters:"value: any",return:"any",demo:"const result = _.identity(42);<br/>console.log(result); // 42"},includes:{definition:"检查集合中是否包含指定值",syntax:"_.includes(collection, value, [fromIndex=0])",parameters:"collection: Array|Object|string, value: any, fromIndex: number",return:"boolean",demo:"const array = [1, 2, 3];<br/>const object = { a: 1, b: 2 };<br/><br/>const includes1 = _.includes(array, 2);<br/>console.log(includes1); // true<br/><br/>const includes2 = _.includes(object, 1);<br/>console.log(includes2); // true<br/><br/>const includes3 = _.includes('hello', 'e');<br/>console.log(includes3); // true"},indexOf:{definition:"返回数组中首次出现指定值的索引，从前往后搜索",syntax:"_.indexOf(array, value, [fromIndex=0])",parameters:"array: Array, value: any, fromIndex: number",return:"number",demo:"const array = [1, 2, 1, 2];<br/><br/>const index = _.indexOf(array, 2);<br/>console.log(index); // 1"},inRange:{definition:"检查指定值是否在指定范围内，范围为[start=0, end]",syntax:"_.inRange(number, [start=0], end)",parameters:"number: number, start: number, end: number",return:"boolean",demo:"const inRange1 = _.inRange(3, 2, 5);<br/>console.log(inRange1); // true<br/><br/>const inRange2 = _.inRange(1, 2, 5);<br/>console.log(inRange2); // false"},invoke:{definition:"调用集合中每个元素的方法",syntax:"_.invoke(collection, path, [...args])",parameters:"collection: Array|Object, path: string|Array, args: any",return:"Array",demo:"const array = ['hello', 'world'];<br/><br/>const result = _.invoke(array, 'toUpperCase');<br/>console.log(result); // ['HELLO', 'WORLD']"},isArguments:{definition:"检查值是否为Arguments对象",syntax:"_.isArguments(value)",parameters:"value: any",return:"boolean",demo:"const args = (function() {<br/>  return arguments;<br/>})();<br/><br/>const isArgs = _.isArguments(args);<br/>console.log(isArgs); // true"},isArray:{definition:"检查值是否为数组",syntax:"_.isArray(value)",parameters:"value: any",return:"boolean",demo:"const isArray1 = _.isArray([1, 2, 3]);<br/>console.log(isArray1); // true<br/><br/>const isArray2 = _.isArray('hello');<br/>console.log(isArray2); // false"},isArrayBuffer:{definition:"检查值是否为ArrayBuffer对象",syntax:"_.isArrayBuffer(value)",parameters:"value: any",return:"boolean",demo:"const buffer = new ArrayBuffer(8);<br/><br/>const isArrayBuffer = _.isArrayBuffer(buffer);<br/>console.log(isArrayBuffer); // true"},isArrayLike:{definition:"检查值是否类似数组，即具有类数组的特征",syntax:"_.isArrayLike(value)",parameters:"value: any",return:"boolean",demo:"const arrayLike1 = 'hello';<br/>const arrayLike2 = [1, 2, 3];<br/><br/>const isArrayLike1 = _.isArrayLike(arrayLike1);<br/>console.log(isArrayLike1); // true<br/><br/>const isArrayLike2 = _.isArrayLike(arrayLike2);<br/>console.log(isArrayLike2); // true"},isArrayLikeObject:{definition:"检查值是否既是对象又是类数组",syntax:"_.isArrayLikeObject(value)",parameters:"value: any",return:"boolean",demo:"const arrayLikeObject = { 0: 'hello', 1: 'world', length: 2 };<br/><br/>const isArrayLikeObject = _.isArrayLikeObject(arrayLikeObject);<br/>console.log(isArrayLikeObject); // true"},isBoolean:{definition:"检查值是否为布尔值",syntax:"_.isBoolean(value)",parameters:"value: any",return:"boolean",demo:"const isBoolean1 = _.isBoolean(true);<br/>console.log(isBoolean1); // true<br/><br/>const isBoolean2 = _.isBoolean(0);<br/>console.log(isBoolean2); // false"},isBuffer:{definition:"检查值是否为Buffer对象",syntax:"_.isBuffer(value)",parameters:"value: any",return:"boolean",demo:"const buffer = Buffer.from('hello');<br/><br/>const isBuffer = _.isBuffer(buffer);<br/>console.log(isBuffer); // true"},isDate:{definition:"检查值是否为日期对象",syntax:"_.isDate(value)",parameters:"value: any",return:"boolean",demo:"const date = new Date();<br/><br/>const isDate = _.isDate(date);<br/>console.log(isDate); // true"},isElement:{definition:"检查值是否为DOM元素",syntax:"_.isElement(value)",parameters:"value: any",return:"boolean",demo:"const element = document.createElement('div');<br/><br/>const isElement = _.isElement(element);<br/>console.log(isElement); // true"},isEmpty:{definition:"检查值是否为空，为空的情况包括：null、undefined、空字符串、空数组、空对象",syntax:"_.isEmpty(value)",parameters:"value: any",return:"boolean",demo:"const isEmpty1 = _.isEmpty(null);<br/>console.log(isEmpty1); // true<br/><br/>const isEmpty2 = _.isEmpty([]);<br/>console.log(isEmpty2); // true<br/><br/>const isEmpty3 = _.isEmpty({});<br/>console.log(isEmpty3); // true<br/><br/>const isEmpty4 = _.isEmpty('');<br/>console.log(isEmpty4); // true"},isEqual:{definition:"执行深度比较以确定两个值是否相等",syntax:"_.isEqual(value, other)",parameters:"value: any, other: any",return:"boolean",demo:"const object1 = { a: 1 };<br/>const object2 = { a: 1 };<br/><br/>const isEqual = _.isEqual(object1, object2);<br/>console.log(isEqual); // true"},isEqualWith:{definition:"使用自定义比较器执行深度比较以确定两个值是否相等",syntax:"_.isEqualWith(value, other, [customizer])",parameters:"value: any, other: any, customizer: Function",return:"boolean",demo:"const object1 = { a: 1 };<br/>const object2 = { a: 1 };<br/><br/>const isEqual = _.isEqualWith(object1, object2, (val1, val2) => val1 === val2);<br/>console.log(isEqual); // true"},isError:{definition:"检查值是否为Error对象",syntax:"_.isError(value)",parameters:"value: any",return:"boolean",demo:"const error = new Error('An error occurred');<br/><br/>const isError = _.isError(error);<br/>console.log(isError); // true"},isFinite:{definition:"检查值是否为有限数值",syntax:"_.isFinite(value)",parameters:"value: any",return:"boolean",demo:"const isFinite1 = _.isFinite(42);<br/>console.log(isFinite1); // true<br/><br/>const isFinite2 = _.isFinite(Infinity);<br/>console.log(isFinite2); // false"},isFunction:{definition:"检查值是否为函数",syntax:"_.isFunction(value)",parameters:"value: any",return:"boolean",demo:"const isFunction1 = _.isFunction(() => {});<br/>console.log(isFunction1); // true<br/><br/>const isFunction2 = _.isFunction('hello');<br/>console.log(isFunction2); // false"},isInteger:{definition:"检查值是否为整数",syntax:"_.isInteger(value)",parameters:"value: any",return:"boolean",demo:"const isInteger1 = _.isInteger(42);<br/>console.log(isInteger1); // true<br/><br/>const isInteger2 = _.isInteger(3.14);<br/>console.log(isInteger2); // false"},isLength:{definition:"检查值是否为有效的数组长度",syntax:"_.isLength(value)",parameters:"value: any",return:"boolean",demo:"const isLength1 = _.isLength(3);<br/>console.log(isLength1); // true<br/><br/>const isLength2 = _.isLength(-1);<br/>console.log(isLength2); // false"},isMap:{definition:"检查值是否为Map对象",syntax:"_.isMap(value)",parameters:"value: any",return:"boolean",demo:"const map = new Map();<br/><br/>const isMap = _.isMap(map);<br/>console.log(isMap); // true"},isMatch:{definition:"执行部分深度比较以确定对象是否包含给定的键值对",syntax:"_.isMatch(object, source)",parameters:"object: Object, source: Object",return:"boolean",demo:"const object = { a: 1, b: 2 };<br/><br/>const isMatch1 = _.isMatch(object, { a: 1 });<br/>console.log(isMatch1); // true<br/><br/>const isMatch2 = _.isMatch(object, { b: 1 });<br/>console.log(isMatch2); // false"},isMatchWith:{definition:"使用自定义比较器执行部分深度比较以确定对象是否包含给定的键值对",syntax:"_.isMatchWith(object, source, [customizer])",parameters:"object: Object, source: Object, customizer: Function",return:"boolean",demo:"const object = { a: 1, b: 2 };<br/><br/>const isMatch = _.isMatchWith(object, { a: 1 }, (val1, val2) => val1 === val2);<br/>console.log(isMatch); // true"},isNaN:{definition:"检查值是否为NaN",syntax:"_.isNaN(value)",parameters:"value: any",return:"boolean",demo:"const isNaN1 = _.isNaN(NaN);<br/>console.log(isNaN1); // true<br/><br/>const isNaN2 = _.isNaN(0 / 0);<br/>console.log(isNaN2); // true<br/><br/>const isNaN3 = _.isNaN(42);<br/>console.log(isNaN3); // false"},isNative:{definition:"检查值是否为原生函数",syntax:"_.isNative(value)",parameters:"value: any",return:"boolean",demo:"const isNative = _.isNative(Array.prototype.push);<br/>console.log(isNative); // true"},isNil:{definition:"检查值是否为null或undefined",syntax:"_.isNil(value)",parameters:"value: any",return:"boolean",demo:"const isNil1 = _.isNil(null);<br/>console.log(isNil1); // true<br/><br/>const isNil2 = _.isNil(undefined);<br/>console.log(isNil2); // true<br/><br/>const isNil3 = _.isNil(0);<br/>console.log(isNil3); // false"},isNull:{definition:"检查值是否为null",syntax:"_.isNull(value)",parameters:"value: any",return:"boolean",demo:"const isNull1 = _.isNull(null);<br/>console.log(isNull1); // true<br/><br/>const isNull2 = _.isNull(undefined);<br/>console.log(isNull2); // false"},isNumber:{definition:"检查值是否为数值",syntax:"_.isNumber(value)",parameters:"value: any",return:"boolean",demo:"const isNumber1 = _.isNumber(42);<br/>console.log(isNumber1); // true<br/><br/>const isNumber2 = _.isNumber('42');<br/>console.log(isNumber2); // false"},isObject:{definition:"检查值是否为对象",syntax:"_.isObject(value)",parameters:"value: any",return:"boolean",demo:"const isObject1 = _.isObject({});<br/>console.log(isObject1); // true<br/><br/>const isObject2 = _.isObject([]);<br/>console.log(isObject2); // true<br/><br/>const isObject3 = _.isObject(null);<br/>console.log(isObject3); // false"},isObjectLike:{definition:"检查值是否为对象或类对象",syntax:"_.isObjectLike(value)",parameters:"value: any",return:"boolean",demo:"const isObjectLike1 = _.isObjectLike({});<br/>console.log(isObjectLike1); // true<br/><br/>const isObjectLike2 = _.isObjectLike([]);<br/>console.log(isObjectLike2); // true<br/><br/>const isObjectLike3 = _.isObjectLike(null);<br/>console.log(isObjectLike3); // false"},isPlainObject:{definition:"检查值是否为纯对象，即通过对象字面量或Object构造函数创建的对象",syntax:"_.isPlainObject(value)",parameters:"value: any",return:"boolean",demo:"const isPlainObject1 = _.isPlainObject({});<br/>console.log(isPlainObject1); // true<br/><br/>const isPlainObject2 = _.isPlainObject(Object.create(null));<br/>console.log(isPlainObject2); // true<br/><br/>const isPlainObject3 = _.isPlainObject([]);<br/>console.log(isPlainObject3); // false"},isRegExp:{definition:"检查值是否为正则表达式对象",syntax:"_.isRegExp(value)",parameters:"value: any",return:"boolean",demo:"const isRegExp = _.isRegExp(/abc/);<br/>console.log(isRegExp); // true"},isSafeInteger:{definition:"检查值是否为安全整数",syntax:"_.isSafeInteger(value)",parameters:"value: any",return:"boolean",demo:"const isSafeInteger1 = _.isSafeInteger(42);<br/>console.log(isSafeInteger1); // true<br/><br/>const isSafeInteger2 = _.isSafeInteger(9007199254740992);<br/>console.log(isSafeInteger2); // false"},isSet:{definition:"检查值是否为Set对象",syntax:"_.isSet(value)",parameters:"value: any",return:"boolean",demo:"const set = new Set();<br/><br/>const isSet = _.isSet(set);<br/>console.log(isSet); // true"},isString:{definition:"检查值是否为字符串",syntax:"_.isString(value)",parameters:"value: any",return:"boolean",demo:"const isString1 = _.isString('hello');<br/>console.log(isString1); // true<br/><br/>const isString2 = _.isString(42);<br/>console.log(isString2); // false"},isSymbol:{definition:"检查值是否为符号",syntax:"_.isSymbol(value)",parameters:"value: any",return:"boolean",demo:"const symbol = Symbol('mySymbol');<br/><br/>const isSymbol = _.isSymbol(symbol);<br/>console.log(isSymbol); // true"},isTypedArray:{definition:"检查值是否为类型化数组",syntax:"_.isTypedArray(value)",parameters:"value: any",return:"boolean",demo:"const typedArray = new Int32Array();<br/><br/>const isTypedArray = _.isTypedArray(typedArray);<br/>console.log(isTypedArray); // true"},isUndefined:{definition:"检查值是否为undefined",syntax:"_.isUndefined(value)",parameters:"value: any",return:"boolean",demo:"const isUndefined1 = _.isUndefined(undefined);<br/>console.log(isUndefined1); // true<br/><br/>const isUndefined2 = _.isUndefined(null);<br/>console.log(isUndefined2); // false"},isWeakMap:{definition:"检查值是否为WeakMap对象",syntax:"_.isWeakMap(value)",parameters:"value: any",return:"boolean",demo:"const weakMap = new WeakMap();<br/><br/>const isWeakMap = _.isWeakMap(weakMap);<br/>console.log(isWeakMap); // true"},isWeakSet:{definition:"检查值是否为WeakSet对象",syntax:"_.isWeakSet(value)",parameters:"value: any",return:"boolean",demo:"const weakSet = new WeakSet();<br/><br/>const isWeakSet = _.isWeakSet(weakSet);<br/>console.log(isWeakSet); // true"},join:{definition:"将数组中的所有元素转化为字符串并连接起来",syntax:"_.join(array, [separator=','])",parameters:"array: Array, separator: string",return:"string",demo:"const array = ['Hello', 'World'];<br/><br/>const joinedString = _.join(array, ' ');<br/>console.log(joinedString); // 'Hello World'"},kebabCase:{definition:"将字符串转化为kebab case格式（单词之间使用连字符-分隔）",syntax:"_.kebabCase(string)",parameters:"string: string",return:"string",demo:"const kebabCase = _.kebabCase('helloWorld');<br/>console.log(kebabCase); // 'hello-world'"},last:{definition:"获取数组中的最后一个元素",syntax:"_.last(array)",parameters:"array: Array",return:"any",demo:"const array = ['apple', 'banana', 'orange'];<br/><br/>const lastElement = _.last(array);<br/>console.log(lastElement); // 'orange'"},lastIndexOf:{definition:"返回数组中指定元素最后一次出现的索引",syntax:"_.lastIndexOf(array, value, [fromIndex=array.length-1])",parameters:"array: Array, value: any, fromIndex: number",return:"number",demo:"const array = [1, 2, 3, 4, 3, 2, 1];<br/><br/>const lastIndex1 = _.lastIndexOf(array, 3);<br/>console.log(lastIndex1); // 4<br/><br/>const lastIndex2 = _.lastIndexOf(array, 3, 3);<br/>console.log(lastIndex2); // 2"},lowerCase:{definition:"将字符串转化为小写，并将非单词字符替换为连字符-",syntax:"_.lowerCase(string)",parameters:"string: string",return:"string",demo:"const lowerCase = _.lowerCase('Hello World!');<br/>console.log(lowerCase); // 'hello-world'"},lowerFirst:{definition:"将字符串的首字母转化为小写",syntax:"_.lowerFirst(string)",parameters:"string: string",return:"string",demo:"const lowerFirst = _.lowerFirst('Hello');<br/>console.log(lowerFirst); // 'hello'"},lt:{definition:"检查第一个值是否小于第二个值",syntax:"_.lt(value, other)",parameters:"value: any, other: any",return:"boolean",demo:"const isLessThan = _.lt(3, 5);<br/>console.log(isLessThan); // true"},lte:{definition:"检查第一个值是否小于或等于第二个值",syntax:"_.lte(value, other)",parameters:"value: any, other: any",return:"boolean",demo:"const isLessThanOrEqualTo = _.lte(3, 3);<br/>console.log(isLessThanOrEqualTo); // true"},max:{definition:"返回数组中的最大值",syntax:"_.max(array)",parameters:"array: Array",return:"any",demo:"const array = [1, 3, 2, 5, 4];<br/><br/>const maxValue = _.max(array);<br/>console.log(maxValue); // 5"},maxBy:{definition:"根据迭代器返回的结果获取数组中的最大值",syntax:"_.maxBy(array, [iteratee=_.identity])",parameters:"array: Array, iteratee: Function",return:"any",demo:"const users = [<br/>  { name: 'John', age: 30 },<br/>  { name: 'Mary', age: 25 },<br/>  { name: 'Peter', age: 35 }<br/>];<br/><br/>const oldestUser = _.maxBy(users, user => user.age);<br/>console.log(oldestUser); // { name: 'Peter', age: 35 }"},mean:{definition:"计算数组中所有数值的平均值",syntax:"_.mean(array)",parameters:"array: Array",return:"number",demo:"const array = [1, 2, 3, 4, 5];<br/><br/>const meanValue = _.mean(array);<br/>console.log(meanValue); // 3"},meanBy:{definition:"根据迭代器返回的结果计算数组中所有数值的平均值",syntax:"_.meanBy(array, [iteratee=_.identity])",parameters:"array: Array, iteratee: Function",return:"number",demo:"const users = [<br/>  { name: 'John', age: 30 },<br/>  { name: 'Mary', age: 25 },<br/>  { name: 'Peter', age: 35 }<br/>];<br/><br/>const averageAge = _.meanBy(users, user => user.age);<br/>console.log(averageAge); // 30"},min:{definition:"返回数组中的最小值",syntax:"_.min(array)",parameters:"array: Array",return:"any",demo:"const array = [1, 3, 2, 5, 4];<br/><br/>const minValue = _.min(array);<br/>console.log(minValue); // 1"},minBy:{definition:"根据迭代器返回的结果获取数组中的最小值",syntax:"_.minBy(array, [iteratee=_.identity])",parameters:"array: Array, iteratee: Function",return:"any",demo:"const users = [<br/>  { name: 'John', age: 30 },<br/>  { name: 'Mary', age: 25 },<br/>  { name: 'Peter', age: 35 }<br/>];<br/><br/>const youngestUser = _.minBy(users, user => user.age);<br/>console.log(youngestUser); // { name: 'Mary', age: 25 }"},stubArray:{definition:"创建一个空数组",syntax:"_.stubArray()",parameters:"",return:"Array",demo:"const array = _.stubArray();<br/>console.log(array); // []"},stubFalse:{definition:"返回false",syntax:"_.stubFalse()",parameters:"",return:"boolean",demo:"const result = _.stubFalse();<br/>console.log(result); // false"},stubObject:{definition:"创建一个空对象",syntax:"_.stubObject()",parameters:"",return:"Object",demo:"const object = _.stubObject();<br/>console.log(object); // {}"},stubString:{definition:"返回空字符串",syntax:"_.stubString()",parameters:"",return:"string",demo:"const string = _.stubString();<br/>console.log(string); // ''"},stubTrue:{definition:"返回true",syntax:"_.stubTrue()",parameters:"",return:"boolean",demo:"const result = _.stubTrue();<br/>console.log(result); // true"},multiply:{definition:"返回两个数的乘积",syntax:"_.multiply(multiplier, multiplicand)",parameters:"multiplier: number, multiplicand: number",return:"number",demo:"const product = _.multiply(6, 7);<br/>console.log(product); // 42"},nth:{definition:"获取数组中第n个元素",syntax:"_.nth(array, [n=0])",parameters:"array: Array, n: number",return:"any",demo:"const array = ['a', 'b', 'c', 'd'];<br/><br/>const nthElement = _.nth(array, 2);<br/>console.log(nthElement); // 'c'"},noConflict:{definition:"将全局变量中的`_`恢复为之前的值，并返回`lodash`对象",syntax:"_.noConflict()",parameters:"",return:"Object",demo:"_.noConflict();<br/><br/>// 此时`_`不再是`lodash`库<br/>const result = _.add(1, 2);<br/>console.log(result); // Uncaught ReferenceError: _ is not defined"},noop:{definition:"一个什么都不做的空函数",syntax:"_.noop()",parameters:"",return:"undefined",demo:"_.noop();<br/><br/>// 该函数不会产生任何输出或副作用"},now:{definition:"返回当前时间的时间戳",syntax:"_.now()",parameters:"",return:"number",demo:"const timestamp = _.now();<br/>console.log(timestamp); // 1624224929532"},pad:{definition:"用指定的字符将字符串填充为指定的长度",syntax:"_.pad(string, [length=0], [chars=' '])",parameters:"string: string, length: number, chars: string",return:"string",demo:"const paddedString = _.pad('hello', 8, '*');<br/>console.log(paddedString); // '**hello*'"},padEnd:{definition:"用指定的字符将字符串填充到指定的长度（末尾填充）",syntax:"_.padEnd(string, [length=0], [chars=' '])",parameters:"string: string, length: number, chars: string",return:"string",demo:"const paddedString = _.padEnd('hello', 8, '*');<br/>console.log(paddedString); // 'hello***'"},padStart:{definition:"用指定的字符将字符串填充到指定的长度（开头填充）",syntax:"_.padStart(string, [length=0], [chars=' '])",parameters:"string: string, length: number, chars: string",return:"string",demo:"const paddedString = _.padStart('hello', 8, '*');<br/>console.log(paddedString); // '***hello'"},parseInt:{definition:"将字符串转化为整数",syntax:"_.parseInt(string, [radix=10])",parameters:"string: string, radix: number",return:"number",demo:"const parsedInt = _.parseInt('42');<br/>console.log(parsedInt); // 42"},random:{definition:"生成一个在指定范围内的随机数",syntax:"_.random([lower=0], [upper=1], [floating])",parameters:"lower: number, upper: number, floating: boolean",return:"number",demo:"const randomNum = _.random(1, 10);<br/>console.log(randomNum); // 7"},reduce:{definition:"将数组或对象中的元素累积为一个值",syntax:"_.reduce(collection, [iteratee=_.identity], [accumulator])",parameters:"collection: Array or Object, iteratee: Function, accumulator: any",return:"any",demo:"const array = [1, 2, 3, 4, 5];<br/><br/>const sum = _.reduce(array, (accumulator, value) => accumulator + value, 0);<br/>console.log(sum); // 15"},reduceRight:{definition:"将数组或对象中的元素从右到左累积为一个值",syntax:"_.reduceRight(collection, [iteratee=_.identity], [accumulator])",parameters:"collection: Array or Object, iteratee: Function, accumulator: any",return:"any",demo:"const array = [1, 2, 3, 4, 5];<br/><br/>const sum = _.reduceRight(array, (accumulator, value) => accumulator + value, 0);<br/>console.log(sum); // 15"},repeat:{definition:"重复指定次数的字符串",syntax:"_.repeat(string, [n=1])",parameters:"string: string, n: number",return:"string",demo:"const repeatedString = _.repeat('hello', 3);<br/>console.log(repeatedString); // 'hellohellohello'"},replace:{definition:"替换字符串中的匹配部分",syntax:"_.replace(string, pattern, replacement)",parameters:"string: string, pattern: RegExp or string, replacement: string or Function",return:"string",demo:"const replacedString = _.replace('Hello World', 'World', 'Universe');<br/>console.log(replacedString); // 'Hello Universe'"},result:{definition:"根据对象路径获取对应的值",syntax:"_.result(object, path, [defaultValue])",parameters:"object: Object, path: string or Array, defaultValue: any",return:"any",demo:"const object = { name: 'John', age: 30 };<br/><br/>const name = _.result(object, 'name');<br/>console.log(name); // 'John'"},round:{definition:"将数值四舍五入到指定的精度",syntax:"_.round(number, [precision=0])",parameters:"number: number, precision: number",return:"number",demo:"const roundedNumber = _.round(3.14159, 2);<br/>console.log(roundedNumber); // 3.14"},runInContext:{definition:"使用指定的`lodash`对象运行函数",syntax:"_.runInContext([context=root])",parameters:"context: Object",return:"Function",demo:"const lodash = _.runInContext();<br/><br/>const array = [1, 2, 3];<br/>const square = lodash.map(array, num => num * num);<br/>console.log(square); // [1, 4, 9]"},sample:{definition:"随机返回数组或对象中的一个元素",syntax:"_.sample(collection)",parameters:"collection: Array or Object",return:"any",demo:"const array = [1, 2, 3, 4, 5];<br/><br/>const randomElement = _.sample(array);<br/>console.log(randomElement); // e.g., 3"},size:{definition:"获取数组或对象的长度",syntax:"_.size(collection)",parameters:"collection: Array or Object",return:"number",demo:"const array = [1, 2, 3, 4, 5];<br/>const object = { a: 1, b: 2, c: 3 };<br/><br/>const arraySize = _.size(array);<br/>const objectSize = _.size(object);<br/><br/>console.log(arraySize); // 5<br/>console.log(objectSize); // 3"},snakeCase:{definition:"将字符串转换为蛇形命名法（小写单词之间使用下划线连接）",syntax:"_.snakeCase(string)",parameters:"string: string",return:"string",demo:"const snakeCaseString = _.snakeCase('Hello World');<br/>console.log(snakeCaseString); // 'hello_world'"},some:{definition:"检查集合中是否至少有一个元素满足条件",syntax:"_.some(collection, [predicate=_.identity])",parameters:"collection: Array or Object, predicate: Function",return:"boolean",demo:"const array = [1, 2, 3, 4, 5];<br/><br/>const hasEvenNumber = _.some(array, num => num % 2 === 0);<br/>console.log(hasEvenNumber); // true"},sortedIndex:{definition:"确定在已排序的数组中插入值的索引位置",syntax:"_.sortedIndex(array, value)",parameters:"array: Array, value: any",return:"number",demo:"const array = [10, 20, 30, 40, 50];<br/><br/>const index = _.sortedIndex(array, 35);<br/>console.log(index); // 3"},sortedIndexBy:{definition:"使用迭代器确定在已排序的数组中插入值的索引位置",syntax:"_.sortedIndexBy(array, value, [iteratee=_.identity])",parameters:"array: Array, value: any, iteratee: Function",return:"number",demo:"const users = [<br/>  { name: 'John', age: 30 },<br/>  { name: 'Alice', age: 40 },<br/>  { name: 'Bob', age: 50 }<br/>];<br/><br/>const index = _.sortedIndexBy(users, { name: 'Charlie', age: 35 }, 'age');<br/>console.log(index); // 1"},sortedIndexOf:{definition:"在已排序的数组中查找第一个匹配值的索引",syntax:"_.sortedIndexOf(array, value)",parameters:"array: Array, value: any",return:"number",demo:"const array = [10, 20, 30, 40, 50, 50, 50];<br/><br/>const index = _.sortedIndexOf(array, 50);<br/>console.log(index); // 4"},sortedLastIndex:{definition:"确定在已排序的数组中插入值的最后一个索引位置",syntax:"_.sortedLastIndex(array, value)",parameters:"array: Array, value: any",return:"number",demo:"const array = [10, 20, 30, 40, 50];<br/><br/>const index = _.sortedLastIndex(array, 35);<br/>console.log(index); // 4"},sortedLastIndexBy:{definition:"使用迭代器确定在已排序的数组中插入值的最后一个索引位置",syntax:"_.sortedLastIndexBy(array, value, [iteratee=_.identity])",parameters:"array: Array, value: any, iteratee: Function",return:"number",demo:"const users = [<br/>  { name: 'John', age: 30 },<br/>  { name: 'Alice', age: 40 },<br/>  { name: 'Bob', age: 50 }<br/>];<br/><br/>const index = _.sortedLastIndexBy(users, { name: 'Charlie', age: 35 }, 'age');<br/>console.log(index); // 2"},sortedLastIndexOf:{definition:"在已排序的数组中查找最后一个匹配值的索引",syntax:"_.sortedLastIndexOf(array, value)",parameters:"array: Array, value: any",return:"number",demo:"const array = [10, 20, 30, 40, 50, 50, 50];<br/><br/>const index = _.sortedLastIndexOf(array, 50);<br/>console.log(index); // 6"},startCase:{definition:"将字符串转换为以空格分隔的大写单词形式",syntax:"_.startCase(string)",parameters:"string: string",return:"string",demo:"const startCaseString = _.startCase('hello world');<br/>console.log(startCaseString); // 'Hello World'"},startsWith:{definition:"检查字符串是否以指定的字符串开始",syntax:"_.startsWith(string, target, [position=0])",parameters:"string: string, target: string, position: number",return:"boolean",demo:"const string = 'Hello World';<br/><br/>const startsWithHello = _.startsWith(string, 'Hello');<br/>console.log(startsWithHello); // true"},subtract:{definition:"计算两个数的差",syntax:"_.subtract(minuend, subtrahend)",parameters:"minuend: number, subtrahend: number",return:"number",demo:"const difference = _.subtract(10, 5);<br/>console.log(difference); // 5"},sum:{definition:"计算数组或对象中的所有数值的总和",syntax:"_.sum(collection)",parameters:"collection: Array or Object",return:"number",demo:"const array = [1, 2, 3, 4, 5];<br/>const object = { a: 1, b: 2, c: 3 };<br/><br/>const arraySum = _.sum(array);<br/>const objectSum = _.sum(object);<br/><br/>console.log(arraySum); // 15<br/>console.log(objectSum); // 6"},sumBy:{definition:"根据迭代器计算数组或对象中的所有元素的总和",syntax:"_.sumBy(collection, [iteratee=_.identity])",parameters:"collection: Array or Object, iteratee: Function",return:"number",demo:"const users = [<br/>  { name: 'John', age: 30, score: 100 },<br/>  { name: 'Alice', age: 40, score: 200 },<br/>  { name: 'Bob', age: 50, score: 150 }<br/>];<br/><br/>const totalScore = _.sumBy(users, 'score');<br/>console.log(totalScore); // 450"},template:{definition:"使用占位符替换字符串模板中的值",syntax:"_.template(string, [options={}])",parameters:"string: string, options: Object",return:"Function",demo:"const compiled = _.template('Hello <%= user %>!');<br/><br/>const result = compiled({ user: 'Alice' });<br/>console.log(result); // 'Hello Alice!'"},times:{definition:"调用迭代器指定次数并返回结果",syntax:"_.times(n, [iteratee=_.identity])",parameters:"n: number, iteratee: Function",return:"Array",demo:"const squares = _.times(5, n => n * n);<br/>console.log(squares); // [0, 1, 4, 9, 16]"},toFinite:{definition:"将值转换为有限数",syntax:"_.toFinite(value)",parameters:"value: any",return:"number",demo:"const finiteNumber = _.toFinite(3.14);<br/>console.log(finiteNumber); // 3.14"},toInteger:{definition:"将值转换为整数",syntax:"_.toInteger(value)",parameters:"value: any",return:"number",demo:"const integer = _.toInteger('42');<br/>console.log(integer); // 42"},toLength:{definition:"将值转换为有效数组长度",syntax:"_.toLength(value)",parameters:"value: any",return:"number",demo:"const length = _.toLength('3.14');<br/>console.log(length); // 3"},toLower:{definition:"将字符串转换为小写",syntax:"_.toLower(string)",parameters:"string: string",return:"string",demo:"const lowerCaseString = _.toLower('Hello World');<br/>console.log(lowerCaseString); // 'hello world'"},toNumber:{definition:"将值转换为数字",syntax:"_.toNumber(value)",parameters:"value: any",return:"number",demo:"const number = _.toNumber('42.5');<br/>console.log(number); // 42.5"},toSafeInteger:{definition:"将值转换为安全整数",syntax:"_.toSafeInteger(value)",parameters:"value: any",return:"number",demo:"const safeInteger = _.toSafeInteger('9007199254740992');<br/>console.log(safeInteger); // 9007199254740992"},toString:{definition:"将值转换为字符串",syntax:"_.toString(value)",parameters:"value: any",return:"string",demo:"const string = _.toString(123);<br/>console.log(string); // '123'"},toUpper:{definition:"将字符串转换为大写",syntax:"_.toUpper(string)",parameters:"string: string",return:"string",demo:"const upperCaseString = _.toUpper('Hello World');<br/>console.log(upperCaseString); // 'HELLO WORLD'"},trim:{definition:"去除字符串两侧的空格或指定字符",syntax:"_.trim(string, [chars=whitespace])",parameters:"string: string, chars: string",return:"string",demo:"const trimmedString = _.trim('  Hello World  ');<br/>console.log(trimmedString); // 'Hello World'"},trimEnd:{definition:"去除字符串末尾的空格或指定字符",syntax:"_.trimEnd(string, [chars=whitespace])",parameters:"string: string, chars: string",return:"string",demo:"const trimmedString = _.trimEnd('  Hello World  ');<br/>console.log(trimmedString); // '  Hello World'"},trimStart:{definition:"去除字符串开头的空格或指定字符",syntax:"_.trimStart(string, [chars=whitespace])",parameters:"string: string, chars: string",return:"string",demo:"const trimmedString = _.trimStart('  Hello World  ');<br/>console.log(trimmedString); // 'Hello World  '"},truncate:{definition:"根据指定的长度截断字符串并添加省略号",syntax:"_.truncate(string, [options={}])",parameters:"string: string, options: Object",return:"string",demo:"const truncatedString = _.truncate('Hello World', { length: 7 });<br/>console.log(truncatedString); // 'Hello...'"},unescape:{definition:"将HTML实体转换为对应的字符",syntax:"_.unescape(string)",parameters:"string: string",return:"string",demo:"const unescapedString = _.unescape('Hello &amp; World');<br/>console.log(unescapedString); // 'Hello & World'"},uniqueId:{definition:"生成唯一标识符",syntax:"_.uniqueId([prefix=''])",parameters:"prefix: string",return:"string",demo:"const id1 = _.uniqueId('user_');<br/>const id2 = _.uniqueId('user_');<br/><br/>console.log(id1); // 'user_1'<br/>console.log(id2); // 'user_2'"},upperCase:{definition:"将字符串转换为大写并以空格分隔单词",syntax:"_.upperCase(string)",parameters:"string: string",return:"string",demo:"const upperCaseString = _.upperCase('hello world');<br/>console.log(upperCaseString); // 'HELLO WORLD'"},upperFirst:{definition:"将字符串的第一个字符转换为大写",syntax:"_.upperFirst(string)",parameters:"string: string",return:"string",demo:"const upperFirstString = _.upperFirst('hello world');<br/>console.log(upperFirstString); // 'Hello world'"},each:{definition:"迭代数组或对象的每个元素，并对其执行回调函数",syntax:"_.each(collection, [iteratee=_.identity])",parameters:"collection: Array or Object, iteratee: Function",return:"undefined",demo:"_.each([1, 2, 3], value => console.log(value));<br/>// Output:<br/>// 1<br/>// 2<br/>// 3"},eachRight:{definition:"反向迭代数组或对象的每个元素，并对其执行回调函数",syntax:"_.eachRight(collection, [iteratee=_.identity])",parameters:"collection: Array or Object, iteratee: Function",return:"undefined",demo:"_.eachRight([1, 2, 3], value => console.log(value));<br/>// Output:<br/>// 3<br/>// 2<br/>// 1"},first:{definition:"获取数组或字符串的第一个元素",syntax:"_.first(array)",parameters:"array: Array or string",return:"any",demo:"const firstElement = _.first([1, 2, 3]);<br/>console.log(firstElement); // 1"},VERSION:{definition:"lodash库的版本号",syntax:"_.VERSION",return:"string",demo:"console.log(_.VERSION); // '4.17.21'"}},formulajs:(v={ABS:{definition:"返回一个数的绝对值",syntax:"ABS(number)",parameters:"number: number",return:"number"},ACCRINT:{definition:"计算从付息期开始到某个日期之间的累计应计利息",syntax:"ACCRINT(issue, firstInterest, settlement, rate, par, frequency, [basis])",parameters:"issue: Date, firstInterest: Date, settlement: Date, rate: number, par: number, frequency: number, basis: number",return:"number"},ACCRINTM:{definition:"计算在付息期内的累计应计利息",syntax:"ACCRINTM(issue, settlement, rate, par, basis)",parameters:"issue: Date, settlement: Date, rate: number, par: number, basis: number",return:"number"},ACOS:{definition:"返回一个数的反余弦值（单位为弧度）",syntax:"ACOS(number)",parameters:"number: number",return:"number"},ACOSH:{definition:"返回一个数的反双曲余弦值",syntax:"ACOSH(number)",parameters:"number: number",return:"number"},ACOT:{definition:"返回一个数的反余切值（单位为弧度）",syntax:"ACOT(number)",parameters:"number: number",return:"number"},ACOTH:{definition:"返回一个数的反双曲余切值",syntax:"ACOTH(number)",parameters:"number: number",return:"number"},ADD:{definition:"对两个数或范围的所有单元格执行加法操作",syntax:"ADD(...values)",parameters:"values: number or Range",return:"number"},AGGREGATE:{definition:"根据指定的选项对范围进行聚合计算",syntax:"AGGREGATE(function, options, ...values)",parameters:"function: number, options: number, values: number or Range",return:"number"},AMORDEGRC:{definition:"根据一年中的天数计算基于部分偿还的固定收益证券的应计折旧",syntax:"AMORDEGRC(cost, purchaseDate, firstPeriod, salvage, period, rate, basis)",parameters:"cost: number, purchaseDate: Date, firstPeriod: Date, salvage: number, period: number, rate: number, basis: number",return:"number"},AMORLINC:{definition:"根据一年中的天数计算基于完全偿还的固定收益证券的应计折旧",syntax:"AMORLINC(cost, purchaseDate, firstPeriod, salvage, period, rate, basis)",parameters:"cost: number, purchaseDate: Date, firstPeriod: Date, salvage: number, period: number, rate: number, basis: number",return:"number"},AND:{definition:"检查多个条件是否都为 TRUE，如果是则返回 TRUE，否则返回 FALSE",syntax:"AND(...logicalValues)",parameters:"logicalValues: boolean",return:"boolean"},ARABIC:{definition:"将罗马数字转换为阿拉伯数字",syntax:"ARABIC(romanNumber)",parameters:"romanNumber: string",return:"number"},ARGS2ARRAY:{definition:"将参数列表转换为数组",syntax:"ARGS2ARRAY(...args)",parameters:"args: any",return:"Array"},ASC:{definition:"返回给定字符的字符编码",syntax:"ASC(text)",parameters:"text: string",return:"number"},ASIN:{definition:"返回一个数的反正弦值（单位为弧度）",syntax:"ASIN(number)",parameters:"number: number",return:"number"},ASINH:{definition:"返回一个数的反双曲正弦值",syntax:"ASINH(number)",parameters:"number: number",return:"number"},ATAN:{definition:"返回一个数的反正切值（单位为弧度）",syntax:"ATAN(number)",parameters:"number: number",return:"number"},ATAN2:{definition:"返回点的极坐标，即从原点到点 (x_num, y_num) 之间的直线与正 x 轴之间的夹角（单位为弧度）",syntax:"ATAN2(xNum, yNum)",parameters:"xNum: number, yNum: number",return:"number"},ATANH:{definition:"返回一个数的反双曲正切值",syntax:"ATANH(number)",parameters:"number: number",return:"number"},AVEDEV:{definition:"计算一组数的平均绝对偏差",syntax:"AVEDEV(...values)",parameters:"values: number",return:"number"},AVERAGE:{definition:"计算一组数的算术平均值",syntax:"AVERAGE(...values)",parameters:"values: number",return:"number"},AVERAGEA:{definition:"计算一组数的算术平均值，包括对布尔值和文本的处理",syntax:"AVERAGEA(...values)",parameters:"values: number or boolean or string",return:"number"},AVERAGEIF:{definition:"根据指定条件计算一组数的条件平均值",syntax:"AVERAGEIF(range, criteria, [averageRange])",parameters:"range: Range, criteria: string or number or boolean, averageRange: Range (optional)",return:"number"},AVERAGEIFS:{definition:"根据多个条件计算一组数的条件平均值",syntax:"AVERAGEIFS(averageRange, criteriaRange1, criteria1, [criteriaRange2, criteria2, ...])",parameters:"averageRange: Range, criteriaRange1: Range, criteria1: string or number or boolean, criteriaRange2: Range, criteria2: string or number or boolean, ...",return:"number"},BAHTTEXT:{definition:"将数字转换为泰国文字格式",syntax:"BAHTTEXT(number)",parameters:"number: number",return:"string"},BASE:{definition:"将数字转换为指定基数的文本格式",syntax:"BASE(number, radix, [minLength])",parameters:"number: number, radix: number, minLength: number (optional)",return:"string"},BESSELI:{definition:"计算修正的贝塞尔函数 I(n, x)",syntax:"BESSELI(n, x)",parameters:"n: number, x: number",return:"number"},BESSELJ:{definition:"计算贝塞尔函数 J(n, x)",syntax:"BESSELJ(n, x)",parameters:"n: number, x: number",return:"number"},BESSELK:{definition:"计算贝塞尔函数 K(n, x)",syntax:"BESSELK(n, x)",parameters:"n: number, x: number",return:"number"},BESSELY:{definition:"计算贝塞尔函数 Y(n, x)",syntax:"BESSELY(n, x)",parameters:"n: number, x: number",return:"number"},BETA:{definition:"计算贝塔函数值",syntax:"BETA(x, y)",parameters:"x: number, y: number",return:"number"},BETADIST:{definition:"计算贝塔分布的累积分布函数值",syntax:"BETADIST(x, alpha, beta, [lowerBound], [upperBound])",parameters:"x: number, alpha: number, beta: number, lowerBound: number (optional), upperBound: number (optional)",return:"number"},BETAINV:{definition:"计算贝塔分布的反函数值",syntax:"BETAINV(probability, alpha, beta, [lowerBound], [upperBound])",parameters:"probability: number, alpha: number, beta: number, lowerBound: number (optional), upperBound: number (optional)",return:"number"},BIN2DEC:{definition:"将二进制数转换为十进制数",syntax:"BIN2DEC(binaryNumber)",parameters:"binaryNumber: string",return:"number"},BIN2HEX:{definition:"将二进制数转换为十六进制数",syntax:"BIN2HEX(binaryNumber, [minLength])",parameters:"binaryNumber: string, minLength: number (optional)",return:"string"},BIN2OCT:{definition:"将二进制数转换为八进制数",syntax:"BIN2OCT(binaryNumber, [minLength])",parameters:"binaryNumber: string, minLength: number (optional)",return:"string"},BINOMDIST:{definition:"计算二项分布的概率",syntax:"BINOMDIST(successes, trials, probability, [cumulative])",parameters:"successes: number, trials: number, probability: number, cumulative: boolean (optional)",return:"number"},CEILING:{definition:"将数向上取整为最接近的指定因数的倍数",syntax:"CEILING(number, [factor])",parameters:"number: number, factor: number (optional)",return:"number"},CELL:{definition:"返回单元格的属性信息，例如格式、地址和内容类型",syntax:"CELL(infoType, reference)",parameters:"infoType: string, reference: Range",return:"various"},CHAR:{definition:"根据字符编码返回字符",syntax:"CHAR(charCode)",parameters:"charCode: number",return:"string"},CHIDIST:{definition:"计算卡方分布的单尾概率",syntax:"CHIDIST(x, degreesOfFreedom)",parameters:"x: number, degreesOfFreedom: number",return:"number"},CHIINV:{definition:"计算卡方分布的反函数值",syntax:"CHIINV(probability, degreesOfFreedom)",parameters:"probability: number, degreesOfFreedom: number",return:"number"},CHISQ:{definition:"计算卡方分布的值",syntax:"CHISQ(x, degreesOfFreedom)",parameters:"x: number, degreesOfFreedom: number",return:"number"},CHITEST:{definition:"执行卡方检验以检测独立性",syntax:"CHITEST(actualRange, expectedRange)",parameters:"actualRange: Range, expectedRange: Range",return:"number"},CHOOSE:{definition:"根据索引返回选项列表中的元素",syntax:"CHOOSE(index, choice1, choice2, ...)",parameters:"index: number, choice1: any, choice2: any, ...",return:"any"},CLEAN:{definition:"从文本中删除非打印字符",syntax:"CLEAN(text)",parameters:"text: string",return:"string"},CODE:{definition:"返回文本中第一个字符的字符编码",syntax:"CODE(text)",parameters:"text: string",return:"number"},COLUMN:{definition:"返回包含指定单元格引用的列号",syntax:"COLUMN(reference)",parameters:"reference: Range",return:"number"},COLUMNS:{definition:"返回指定区域中的列数",syntax:"COLUMNS(range)",parameters:"range: Range",return:"number"},COMBIN:{definition:"计算从给定集合中选择指定数量的对象的组合数",syntax:"COMBIN(n, k)",parameters:"n: number, k: number",return:"number"},COMPLEX:{definition:"将实部和虚部的系数用于创建复数",syntax:"COMPLEX(real, [imaginary], [suffix])",parameters:"real: number, imaginary: number (optional), suffix: string (optional)",return:"complex number"},CONCAT:{definition:"将多个文本字符串连接为一个字符串",syntax:"CONCAT(text1, text2, ...)",parameters:"text1: string, text2: string, ...",return:"string"},CONCATENATE:{definition:"将多个文本字符串连接为一个字符串",syntax:"CONCATENATE(text1, text2, ...)",parameters:"text1: string, text2: string, ...",return:"string"},CONFIDENCE:{definition:"计算总体均值的置信区间范围",syntax:"CONFIDENCE(alpha, standardDeviation, size)",parameters:"alpha: number, standardDeviation: number, size: number",return:"number"},"CONFIDENCE.NORM":{definition:"计算正态分布总体均值的置信区间范围",syntax:"CONFIDENCE.NORM(alpha, standardDeviation, size)",parameters:"alpha: number, standardDeviation: number, size: number",return:"number"},"CONFIDENCE.T":{definition:"计算 t 分布总体均值的置信区间范围",syntax:"CONFIDENCE.T(alpha, standardDeviation, size)",parameters:"alpha: number, standardDeviation: number, size: number",return:"number"},CONVERT:{definition:"将数值从一种度量单位转换为另一种度量单位",syntax:"CONVERT(value, fromUnit, toUnit)",parameters:"value: number, fromUnit: string, toUnit: string",return:"number"},CORREL:{definition:"计算两个数据集之间的相关性",syntax:"CORREL(dataSet1, dataSet2)",parameters:"dataSet1: Range, dataSet2: Range",return:"number"},COS:{definition:"计算给定角度的余弦值",syntax:"COS(angle)",parameters:"angle: number",return:"number"},COSH:{definition:"计算给定角度的双曲余弦值",syntax:"COSH(angle)",parameters:"angle: number",return:"number"},COUNT:{definition:"计算给定数据集中的数字个数",syntax:"COUNT(value1, value2, ...)",parameters:"value1: number, value2: number, ...",return:"number"},COUNTA:{definition:"计算给定数据集中的非空单元格个数",syntax:"COUNTA(value1, value2, ...)",parameters:"value1: any, value2: any, ...",return:"number"},COUNTBLANK:{definition:"计算给定数据集中的空单元格个数",syntax:"COUNTBLANK(range)",parameters:"range: Range",return:"number"},COUNTIF:{definition:"根据指定条件计算数据集中满足条件的单元格个数",syntax:"COUNTIF(range, criteria)",parameters:"range: Range, criteria: string or number or boolean",return:"number"},COUNTIFS:{definition:"根据多个条件计算数据集中满足所有条件的单元格个数",syntax:"COUNTIFS(criteriaRange1, criteria1, [criteriaRange2, criteria2, ...])",parameters:"criteriaRange1: Range, criteria1: string or number or boolean, criteriaRange2: Range, criteria2: string or number or boolean, ...",return:"number"},COUPDAYBS:{definition:"计算从结算日到下一付息日之间的天数",syntax:"COUPDAYBS(settlement, maturity, frequency, [basis])",parameters:"settlement: Date, maturity: Date, frequency: number, basis: number (optional)",return:"number"},COUPDAYS:{definition:"计算在结算日和到期日之间的天数",syntax:"COUPDAYS(settlement, maturity, frequency, [basis])",parameters:"settlement: Date, maturity: Date, frequency: number, basis: number (optional)",return:"number"},COUPDAYSNC:{definition:"计算在结算日和下一付息日之间的天数，不考虑其他支付条件",syntax:"COUPDAYSNC(settlement, maturity, frequency, [basis])",parameters:"settlement: Date, maturity: Date, frequency: number, basis: number (optional)",return:"number"},COUPNCD:{definition:"返回下一付息日的日期",syntax:"COUPNCD(settlement, maturity, frequency, [basis])",parameters:"settlement: Date, maturity: Date, frequency: number, basis: number (optional)",return:"Date"},COUPNUM:{definition:"计算在结算日和到期日之间的付息期数",syntax:"COUPNUM(settlement, maturity, frequency, [basis])",parameters:"settlement: Date, maturity: Date, frequency: number, basis: number (optional)",return:"number"},COUPPCD:{definition:"返回上一付息日的日期",syntax:"COUPPCD(settlement, maturity, frequency, [basis])",parameters:"settlement: Date, maturity: Date, frequency: number, basis: number (optional)",return:"Date"}},(0,b.Z)(v,"COSH",{definition:"计算给定角度的双曲余弦值",syntax:"COSH(angle)",parameters:"angle: number",return:"number"}),(0,b.Z)(v,"COT",{definition:"计算给定角度的余切值",syntax:"COT(angle)",parameters:"angle: number",return:"number"}),(0,b.Z)(v,"COTH",{definition:"计算给定角度的双曲余切值",syntax:"COTH(angle)",parameters:"angle: number",return:"number"}),(0,b.Z)(v,"COUNT",{definition:"计算给定数据集中的数字个数",syntax:"COUNT(value1, value2, ...)",parameters:"value1: number, value2: number, ...",return:"number"}),(0,b.Z)(v,"COUNTA",{definition:"计算给定数据集中的非空单元格个数",syntax:"COUNTA(value1, value2, ...)",parameters:"value1: any, value2: any, ...",return:"number"}),(0,b.Z)(v,"COUNTBLANK",{definition:"计算给定数据集中的空单元格个数",syntax:"COUNTBLANK(range)",parameters:"range: Range",return:"number"}),(0,b.Z)(v,"COUNTIF",{definition:"根据指定条件计算数据集中满足条件的单元格个数",syntax:"COUNTIF(range, criteria)",parameters:"range: Range, criteria: string or number or boolean",return:"number"}),(0,b.Z)(v,"COUNTIFS",{definition:"根据多个条件计算数据集中满足所有条件的单元格个数",syntax:"COUNTIFS(criteriaRange1, criteria1, [criteriaRange2, criteria2, ...])",parameters:"criteriaRange1: Range, criteria1: string or number or boolean, criteriaRange2: Range, criteria2: string or number or boolean, ...",return:"number"}),(0,b.Z)(v,"COUNTUNIQUE",{definition:"计算给定数据集中的唯一值的个数",syntax:"COUNTUNIQUE(value1, value2, ...)",parameters:"value1: any, value2: any, ...",return:"number"}),(0,b.Z)(v,"CURRENCY",{definition:"将给定数字格式化为货币",syntax:"CURRENCY(value, [symbol])",parameters:"value: number, symbol: string (optional)",return:"string"}),(0,b.Z)(v,"CURRENCYCONVERT",{definition:"将数值从一种货币单位转换为另一种货币单位",syntax:"CURRENCYCONVERT(value, fromCurrency, toCurrency, [conversionType])",parameters:"value: number, fromCurrency: string, toCurrency: string, conversionType: number (optional)",return:"number"}),(0,b.Z)(v,"CURRENTCELL",{definition:"返回包含公式的单元格的引用",syntax:"CURRENTCELL()",parameters:"",return:"Range"}),(0,b.Z)(v,"CUSTOMFUNCTIONS",{definition:"返回已定义的自定义函数的列表",syntax:"CUSTOMFUNCTIONS()",parameters:"",return:"array of strings"}),(0,b.Z)(v,"DATE",{definition:"返回给定年、月、日的日期",syntax:"DATE(year, month, day)",parameters:"year: number, month: number, day: number",return:"Date"}),(0,b.Z)(v,"DATEDIF",{definition:"计算两个日期之间的差异",syntax:"DATEDIF(startDate, endDate, unit)",parameters:"startDate: Date, endDate: Date, unit: string",return:"number"}),(0,b.Z)(v,"DATEVALUE",{definition:"将日期字符串转换为日期值",syntax:"DATEVALUE(date)",parameters:"date: string",return:"Date"}),(0,b.Z)(v,"DAY",{definition:"返回给定日期的日份",syntax:"DAY(date)",parameters:"date: Date",return:"number"}),(0,b.Z)(v,"DAYS",{definition:"计算两个日期之间的天数差",syntax:"DAYS(startDate, endDate)",parameters:"startDate: Date, endDate: Date",return:"number"}),(0,b.Z)(v,"DAYS360",{definition:"计算两个日期之间的360天数差",syntax:"DAYS360(startDate, endDate, [method])",parameters:"startDate: Date, endDate: Date, method: number (optional)",return:"number"}),(0,b.Z)(v,"DB",{definition:"返回给定资产在指定时期内的折旧费用",syntax:"DB(cost, salvage, life, period, [month])",parameters:"cost: number, salvage: number, life: number, period: number, month: number (optional)",return:"number"}),(0,b.Z)(v,"DCOUNT",{definition:"根据指定条件计算数据集中满足条件的单元格个数",syntax:"DCOUNT(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"number"}),(0,b.Z)(v,"DCOUNTA",{definition:"计算数据集中满足非空条件的单元格个数",syntax:"DCOUNTA(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"number"}),(0,b.Z)(v,"DCOUNTBLANK",{definition:"计算数据集中满足空条件的单元格个数",syntax:"DCOUNTBLANK(database, field)",parameters:"database: Range, field: string",return:"number"}),(0,b.Z)(v,"DCOUNTUNIQUE",{definition:"计算数据集中满足唯一值条件的单元格个数",syntax:"DCOUNTUNIQUE(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"number"}),(0,b.Z)(v,"DECIMAL",{definition:"将给定文本表示的数字转换为十进制数",syntax:"DECIMAL(text, [base])",parameters:"text: string, base: number (optional)",return:"number"}),(0,b.Z)(v,"DEGREES",{definition:"将给定弧度转换为度数",syntax:"DEGREES(angle)",parameters:"angle: number",return:"number"}),(0,b.Z)(v,"DELTA",{definition:"如果两个值相等，则返回1；否则返回0",syntax:"DELTA(value1, value2)",parameters:"value1: number, value2: number",return:"number"}),(0,b.Z)(v,"DEVSQ",{definition:"计算数据集的偏差平方和",syntax:"DEVSQ(value1, value2, ...)",parameters:"value1: number, value2: number, ...",return:"number"}),(0,b.Z)(v,"DGET",{definition:"根据指定条件从数据库中提取单个记录",syntax:"DGET(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"any"}),(0,b.Z)(v,"DISC",{definition:"计算有价证券的贴现率",syntax:"DISC(settlement, maturity, pr, redemption, [basis])",parameters:"settlement: Date, maturity: Date, pr: number, redemption: number, basis: number (optional)",return:"number"}),(0,b.Z)(v,"DMAX",{definition:"从数据库中返回满足条件的最大值",syntax:"DMAX(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"any"}),(0,b.Z)(v,"DMIN",{definition:"从数据库中返回满足条件的最小值",syntax:"DMIN(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"any"}),(0,b.Z)(v,"DOLLAR",{definition:"将给定数字格式化为货币，可指定小数位数和货币符号",syntax:"DOLLAR(value, [decimals])",parameters:"value: number, decimals: number (optional)",return:"string"}),(0,b.Z)(v,"DOLLARDE",{definition:"将以分为单位的价格转换为以小数表示的价格",syntax:"DOLLARDE(fractionalDollar, [fraction])",parameters:"fractionalDollar: number, fraction: number (optional)",return:"number"}),(0,b.Z)(v,"DOLLARFR",{definition:"将以小数表示的价格转换为以分为单位的价格",syntax:"DOLLARFR(decimalDollar, [fraction])",parameters:"decimalDollar: number, fraction: number (optional)",return:"number"}),(0,b.Z)(v,"DPRODUCT",{definition:"在数据库中计算满足条件的数值字段的乘积",syntax:"DPRODUCT(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"number"}),(0,b.Z)(v,"DSTDEV",{definition:"计算在数据库中满足条件的数值字段的样本标准偏差",syntax:"DSTDEV(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"number"}),(0,b.Z)(v,"DSTDEVP",{definition:"计算在数据库中满足条件的数值字段的总体标准偏差",syntax:"DSTDEVP(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"number"}),(0,b.Z)(v,"DSUM",{definition:"在数据库中计算满足条件的数值字段的总和",syntax:"DSUM(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"number"}),(0,b.Z)(v,"DURATION",{definition:"计算固定利率债券的修正久期",syntax:"DURATION(settlement, maturity, coupon, yield, frequency, [basis])",parameters:"settlement: Date, maturity: Date, coupon: number, yield: number, frequency: number, basis: number (optional)",return:"number"}),(0,b.Z)(v,"DVAR",{definition:"计算在数据库中满足条件的数值字段的样本方差",syntax:"DVAR(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"number"}),(0,b.Z)(v,"DVARP",{definition:"计算在数据库中满足条件的数值字段的总体方差",syntax:"DVARP(database, field, criteria)",parameters:"database: Range, field: string, criteria: Range",return:"number"}),(0,b.Z)(v,"EDATE",{definition:"返回给定日期之后或之前指定月份数的日期",syntax:"EDATE(startDate, months)",parameters:"startDate: Date, months: number",return:"Date"}),(0,b.Z)(v,"EFFECT",{definition:"根据名义年利率和每年复利计息次数，计算实际年利率",syntax:"EFFECT(nominalRate, npery)",parameters:"nominalRate: number, npery: number",return:"number"}),(0,b.Z)(v,"ENCODEURL",{definition:"将 URL 字符串进行 URL 编码",syntax:"ENCODEURL(url)",parameters:"url: string",return:"string"}),(0,b.Z)(v,"EOMONTH",{definition:"返回给定日期所在月份的月底日期",syntax:"EOMONTH(startDate, months)",parameters:"startDate: Date, months: number",return:"Date"}),(0,b.Z)(v,"ERF",{definition:"计算高斯误差函数的值",syntax:"ERF(x)",parameters:"x: number",return:"number"}),(0,b.Z)(v,"ERFC",{definition:"计算补余误差函数的值",syntax:"ERFC(x)",parameters:"x: number",return:"number"}),(0,b.Z)(v,"ERROR.TYPE",{definition:"返回错误值的类型",syntax:"ERROR.TYPE(errorValue)",parameters:"errorValue: any",return:"number"}),(0,b.Z)(v,"EURO",{definition:"将给定数字格式化为欧元货币",syntax:"EURO(value)",parameters:"value: number",return:"string"}),(0,b.Z)(v,"EUROCONVERT",{definition:"将数值从一种欧元货币单位转换为另一种欧元货币单位",syntax:"EUROCONVERT(value, sourceCurrency, targetCurrency, [fullPrecision], [triangulationPrecision])",parameters:"value: number, sourceCurrency: string, targetCurrency: string, fullPrecision: boolean (optional), triangulationPrecision: number (optional)",return:"number"}),(0,b.Z)(v,"EVEN",{definition:"将给定数值向上取整为最接近的偶数",syntax:"EVEN(value)",parameters:"value: number",return:"number"}),(0,b.Z)(v,"EXACT",{definition:"比较两个文本字符串是否完全相同",syntax:"EXACT(text1, text2)",parameters:"text1: string, text2: string",return:"boolean"}),(0,b.Z)(v,"EXP",{definition:"计算 e 的指定次幂",syntax:"EXP(x)",parameters:"x: number",return:"number"}),(0,b.Z)(v,"EXPON.DIST",{definition:"计算指数分布的概率密度函数或累积分布函数",syntax:"EXPON.DIST(x, lambda, [cumulative])",parameters:"x: number, lambda: number, cumulative: boolean (optional)",return:"number"}),(0,b.Z)(v,"FACT",{definition:"计算给定数值的阶乘",syntax:"FACT(number)",parameters:"number: number",return:"number"}),(0,b.Z)(v,"FACTDOUBLE",{definition:"计算给定数值的双阶乘",syntax:"FACTDOUBLE(number)",parameters:"number: number",return:"number"}),(0,b.Z)(v,"FALSE",{definition:"返回逻辑值 FALSE",syntax:"FALSE()",return:"boolean"}),(0,b.Z)(v,"FDIST",{definition:"计算 Fisher 分布的累积分布函数",syntax:"FDIST(x, degreesFreedom1, degreesFreedom2)",parameters:"x: number, degreesFreedom1: number, degreesFreedom2: number",return:"number"}),(0,b.Z)(v,"FINDB",{definition:"在文本字符串中查找指定子字符串的起始位置（不区分大小写）",syntax:"FINDB(findText, withinText, [startIndex])",parameters:"findText: string, withinText: string, startIndex: number (optional)",return:"number"}),(0,b.Z)(v,"FIND",{definition:"在文本字符串中查找指定子字符串的起始位置（区分大小写）",syntax:"FIND(findText, withinText, [startIndex])",parameters:"findText: string, withinText: string, startIndex: number (optional)",return:"number"}),(0,b.Z)(v,"FINV",{definition:"计算 Fisher 分布的反函数",syntax:"FINV(probability, degreesFreedom1, degreesFreedom2)",parameters:"probability: number, degreesFreedom1: number, degreesFreedom2: number",return:"number"}),(0,b.Z)(v,"FISHER",{definition:"计算 Fisher 变换后的值",syntax:"FISHER(x)",parameters:"x: number",return:"number"}),(0,b.Z)(v,"FISHERINV",{definition:"计算 Fisher 变换的逆值",syntax:"FISHERINV(y)",parameters:"y: number",return:"number"}),(0,b.Z)(v,"FIXED",{definition:"将给定数字按指定小数位数和用逗号分隔的千位分隔符进行格式化",syntax:"FIXED(value, [decimals], [noCommas])",parameters:"value: number, decimals: number (optional), noCommas: boolean (optional)",return:"string"}),(0,b.Z)(v,"FLOOR",{definition:"将给定数值向下取整为最接近的指定因子的倍数",syntax:"FLOOR(value, factor)",parameters:"value: number, factor: number",return:"number"}),(0,b.Z)(v,"FLOOR.MATH",{definition:"将给定数值向下取整为最接近的指定因子的倍数，可指定取整方式",syntax:"FLOOR.MATH(value, factor, [mode])",parameters:"value: number, factor: number, mode: number (optional)",return:"number"}),(0,b.Z)(v,"FLOOR.PRECISE",{definition:"将给定数值向下取整为最接近的指定因子的倍数",syntax:"FLOOR.PRECISE(value, factor)",parameters:"value: number, factor: number",return:"number"}),(0,b.Z)(v,"FORECAST",{definition:"使用线性回归计算给定 x 值对应的 y 值",syntax:"FORECAST(x, knownYs, knownXs)",parameters:"x: number, knownYs: Range, knownXs: Range",return:"number"}),(0,b.Z)(v,"FORMULATEXT",{definition:"返回指定单元格中公式的文本表示形式",syntax:"FORMULATEXT(reference)",parameters:"reference: Range",return:"string"}),(0,b.Z)(v,"FREQUENCY",{definition:"计算数据集中在给定区间内的值的频率分布",syntax:"FREQUENCY(data, bins)",parameters:"data: Range, bins: Range",return:"Array"}),(0,b.Z)(v,"FTEST",{definition:"计算两个数据集之间的方差比",syntax:"FTEST(array1, array2)",parameters:"array1: Range, array2: Range",return:"number"}),(0,b.Z)(v,"FV",{definition:"计算投资或贷款的未来价值",syntax:"FV(rate, nper, pmt, [pv], [type])",parameters:"rate: number, nper: number, pmt: number, pv: number (optional), type: number (optional)",return:"number"}),(0,b.Z)(v,"FVSCHEDULE",{definition:"根据多个不同的复利率计算投资的未来价值",syntax:"FVSCHEDULE(principal, schedule)",parameters:"principal: number, schedule: Range",return:"number"}),(0,b.Z)(v,"GAMMA",{definition:"计算伽马函数的值",syntax:"GAMMA(x)",parameters:"x: number",return:"number"}),(0,b.Z)(v,"GAMMA.DIST",{definition:"计算伽马分布的概率密度函数或累积分布函数",syntax:"GAMMA.DIST(x, alpha, beta, [cumulative])",parameters:"x: number, alpha: number, beta: number, cumulative: boolean (optional)",return:"number"}),(0,b.Z)(v,"GAMMA.INV",{definition:"计算伽马分布的反函数",syntax:"GAMMA.INV(probability, alpha, beta)",parameters:"probability: number, alpha: number, beta: number",return:"number"}),(0,b.Z)(v,"GAMMALN",{definition:"计算伽马函数的自然对数",syntax:"GAMMALN(x)",parameters:"x: number",return:"number"}),(0,b.Z)(v,"GAMMALN.PRECISE",{definition:"计算伽马函数的自然对数",syntax:"GAMMALN.PRECISE(x)",parameters:"x: number",return:"number"}),(0,b.Z)(v,"GAUSS",{definition:"计算标准正态分布的累积分布函数",syntax:"GAUSS(z)",parameters:"z: number",return:"number"}),(0,b.Z)(v,"GCD",{definition:"计算给定数值的最大公约数",syntax:"GCD(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"GEOMEAN",{definition:"计算给定数值的几何平均值",syntax:"GEOMEAN(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"GESTEP",{definition:"如果给定数值大于等于阈值，返回 1；否则返回 0",syntax:"GESTEP(number, step)",parameters:"number: number, step: number",return:"number"}),(0,b.Z)(v,"GROWTH",{definition:"基于已知 x 值和 y 值，计算指数回归的预测结果",syntax:"GROWTH(knownYs, [knownXs], [newXs], [const])",parameters:"knownYs: Range, knownXs: Range (optional), newXs: Range (optional), const: boolean (optional)",return:"Array"}),(0,b.Z)(v,"HARMEAN",{definition:"计算给定数值的调和平均值",syntax:"HARMEAN(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"HEX2BIN",{definition:"将十六进制数转换为二进制数",syntax:"HEX2BIN(number, [places])",parameters:"number: string, places: number (optional)",return:"string"}),(0,b.Z)(v,"HEX2DEC",{definition:"将十六进制数转换为十进制数",syntax:"HEX2DEC(number)",parameters:"number: string",return:"number"}),(0,b.Z)(v,"HEX2OCT",{definition:"将十六进制数转换为八进制数",syntax:"HEX2OCT(number, [places])",parameters:"number: string, places: number (optional)",return:"string"}),(0,b.Z)(v,"HLOOKUP",{definition:"在水平范围内查找指定值，并返回对应的垂直范围内的值",syntax:"HLOOKUP(lookupValue, table, rowIndex, [rangeLookup])",parameters:"lookupValue: any, table: Range, rowIndex: number, rangeLookup: boolean (optional)",return:"any"}),(0,b.Z)(v,"HOUR",{definition:"从给定日期或时间值中提取小时部分",syntax:"HOUR(value)",parameters:"value: date or time",return:"number"}),(0,b.Z)(v,"HYPERLINK",{definition:"创建一个链接，将显示文本指向指定的 URL",syntax:"HYPERLINK(url, [linkText])",parameters:"url: string, linkText: string (optional)",return:"string"}),(0,b.Z)(v,"HYPGEOM.DIST",{definition:"计算超几何分布的概率密度函数或累积分布函数",syntax:"HYPGEOM.DIST(x, sampleS, numberSample, populationS, [cumulative])",parameters:"x: number, sampleS: number, numberSample: number, populationS: number, cumulative: boolean (optional)",return:"number"}),(0,b.Z)(v,"IF",{definition:"根据给定条件返回不同的结果",syntax:"IF(condition, valueIfTrue, valueIfFalse)",parameters:"condition: boolean, valueIfTrue: any, valueIfFalse: any",return:"any"}),(0,b.Z)(v,"IFERROR",{definition:"如果表达式返回错误值，返回指定的值，否则返回表达式的结果",syntax:"IFERROR(value, valueIfError)",parameters:"value: any, valueIfError: any",return:"any"}),(0,b.Z)(v,"IFNA",{definition:"如果表达式返回 #N/A 错误，返回指定的值，否则返回表达式的结果",syntax:"IFNA(value, valueIfNa)",parameters:"value: any, valueIfNa: any",return:"any"}),(0,b.Z)(v,"IMABS",{definition:"计算复数的绝对值",syntax:"IMABS(inumber)",parameters:"inumber: complex number",return:"number"}),(0,b.Z)(v,"IMAGINARY",{definition:"从复数中提取虚部",syntax:"IMAGINARY(inumber)",parameters:"inumber: complex number",return:"number"}),(0,b.Z)(v,"IMARGUMENT",{definition:"计算复数的辐角",syntax:"IMARGUMENT(inumber)",parameters:"inumber: complex number",return:"number"}),(0,b.Z)(v,"IMCONJUGATE",{definition:"计算复数的共轭复数",syntax:"IMCONJUGATE(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMCOS",{definition:"计算复数的余弦值",syntax:"IMCOS(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMCOSH",{definition:"计算复数的双曲余弦值",syntax:"IMCOSH(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMCOT",{definition:"计算复数的余切值",syntax:"IMCOT(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMCSC",{definition:"计算复数的余割值",syntax:"IMCSC(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMCSCH",{definition:"计算复数的双曲余割值",syntax:"IMCSCH(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMDIV",{definition:"计算两个复数的商",syntax:"IMDIV(inumber1, inumber2)",parameters:"inumber1: complex number, inumber2: complex number",return:"complex number"}),(0,b.Z)(v,"IMEXP",{definition:"计算复数的指数函数值",syntax:"IMEXP(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMLN",{definition:"计算复数的自然对数",syntax:"IMLN(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMLOG10",{definition:"计算复数的以 10 为底的对数",syntax:"IMLOG10(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMLOG2",{definition:"计算复数的以 2 为底的对数",syntax:"IMLOG2(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMPOWER",{definition:"计算复数的指定幂次方",syntax:"IMPOWER(inumber, number)",parameters:"inumber: complex number, number: number",return:"complex number"}),(0,b.Z)(v,"IMPRODUCT",{definition:"计算多个复数的乘积",syntax:"IMPRODUCT(inumber1, inumber2, ...)",parameters:"inumber1: complex number, inumber2: complex number, ...",return:"complex number"}),(0,b.Z)(v,"IMREAL",{definition:"从复数中提取实部",syntax:"IMREAL(inumber)",parameters:"inumber: complex number",return:"number"}),(0,b.Z)(v,"IMSEC",{definition:"计算复数的正割值",syntax:"IMSEC(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMSECH",{definition:"计算复数的双曲正割值",syntax:"IMSECH(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMSIN",{definition:"计算复数的正弦值",syntax:"IMSIN(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMSINH",{definition:"计算复数的双曲正弦值",syntax:"IMSINH(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMSQRT",{definition:"计算复数的平方根",syntax:"IMSQRT(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"IMSUB",{definition:"计算两个复数的差",syntax:"IMSUB(inumber1, inumber2)",parameters:"inumber1: complex number, inumber2: complex number",return:"complex number"}),(0,b.Z)(v,"IMSUM",{definition:"计算多个复数的和",syntax:"IMSUM(inumber1, inumber2, ...)",parameters:"inumber1: complex number, inumber2: complex number, ...",return:"complex number"}),(0,b.Z)(v,"IMTAN",{definition:"计算复数的正切值",syntax:"IMTAN(inumber)",parameters:"inumber: complex number",return:"complex number"}),(0,b.Z)(v,"INDEX",{definition:"返回给定范围内指定行和列的单元格值",syntax:"INDEX(range, row, [column])",parameters:"range: Range, row: number, column: number (optional)",return:"any"}),(0,b.Z)(v,"INDIRECT",{definition:"返回由给定字符串构建的单元格引用的值",syntax:"INDIRECT(refText, [a1])",parameters:"refText: string, a1: boolean (optional)",return:"any"}),(0,b.Z)(v,"INT",{definition:"向下取整，返回小于或等于给定数值的最大整数",syntax:"INT(number)",parameters:"number: number",return:"number"}),(0,b.Z)(v,"INTERCEPT",{definition:"计算线性回归线的截距",syntax:"INTERCEPT(knownYs, knownXs)",parameters:"knownYs: Range, knownXs: Range",return:"number"}),(0,b.Z)(v,"INTRATE",{definition:"计算定期利息的利率",syntax:"INTRATE(settlement, maturity, investment, redemption, basis)",parameters:"settlement: date, maturity: date, investment: number, redemption: number, basis: number",return:"number"}),(0,b.Z)(v,"IPMT",{definition:"计算定期支付期间的利息部分",syntax:"IPMT(rate, period, periods, presentValue, [futureValue], [type])",parameters:"rate: number, period: number, periods: number, presentValue: number, futureValue: number (optional), type: number (optional)",return:"number"}),(0,b.Z)(v,"IRR",{definition:"计算一系列现金流的内部收益率",syntax:"IRR(values, [guess])",parameters:"values: Range, guess: number (optional)",return:"number"}),(0,b.Z)(v,"ISBLANK",{definition:"检查给定单元格是否为空",syntax:"ISBLANK(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"ISERR",{definition:"检查给定值是否为除 #N/A 之外的错误值",syntax:"ISERR(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"ISERROR",{definition:"检查给定值是否为任何错误值",syntax:"ISERROR(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"ISEVEN",{definition:"检查给定数值是否为偶数",syntax:"ISEVEN(value)",parameters:"value: number",return:"boolean"}),(0,b.Z)(v,"ISFORMULA",{definition:"检查给定单元格是否包含公式",syntax:"ISFORMULA(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"ISLOGICAL",{definition:"检查给定值是否为逻辑值",syntax:"ISLOGICAL(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"ISNA",{definition:"检查给定值是否为 #N/A 错误",syntax:"ISNA(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"ISNONTEXT",{definition:"检查给定值是否为非文本值",syntax:"ISNONTEXT(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"ISNUMBER",{definition:"检查给定值是否为数值",syntax:"ISNUMBER(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"ISO.CEILING",{definition:"按指定倍数将数值向上舍入到最接近的整数或指定的倍数",syntax:"ISO.CEILING(number, [significance])",parameters:"number: number, significance: number (optional)",return:"number"}),(0,b.Z)(v,"ISODD",{definition:"检查给定数值是否为奇数",syntax:"ISODD(value)",parameters:"value: number",return:"boolean"}),(0,b.Z)(v,"ISPMT",{definition:"计算固定利率下特定支付期间的利息支付额",syntax:"ISPMT(rate, period, periods, presentValue)",parameters:"rate: number, period: number, periods: number, presentValue: number",return:"number"}),(0,b.Z)(v,"ISREF",{definition:"检查给定值是否为引用",syntax:"ISREF(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"ISTEXT",{definition:"检查给定值是否为文本",syntax:"ISTEXT(value)",parameters:"value: any",return:"boolean"}),(0,b.Z)(v,"KURT",{definition:"计算一组数据的峰度（峰值与正态分布峰值之间的差异程度）",syntax:"KURT(value1, value2, ...)",parameters:"value1: number, value2: number, ...",return:"number"}),(0,b.Z)(v,"LARGE",{definition:"返回一组数据中第 k 个最大值",syntax:"LARGE(array, k)",parameters:"array: Range, k: number",return:"number"}),(0,b.Z)(v,"LCM",{definition:"计算一组数的最小公倍数",syntax:"LCM(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"LEFT",{definition:"从文本字符串的左侧提取指定数量的字符",syntax:"LEFT(text, [numChars])",parameters:"text: string, numChars: number (optional)",return:"string"}),(0,b.Z)(v,"LEN",{definition:"返回文本字符串中的字符数",syntax:"LEN(text)",parameters:"text: string",return:"number"}),(0,b.Z)(v,"LINEST",{definition:"计算最佳拟合直线的统计信息",syntax:"LINEST(knownYs, [knownXs], [const], [stats])",parameters:"knownYs: Range, knownXs: Range (optional), const: boolean (optional), stats: boolean (optional)",return:"array or value"}),(0,b.Z)(v,"LN",{definition:"计算数值的自然对数",syntax:"LN(number)",parameters:"number: number",return:"number"}),(0,b.Z)(v,"LOG",{definition:"计算数值的对数",syntax:"LOG(number, [base])",parameters:"number: number, base: number (optional)",return:"number"}),(0,b.Z)(v,"LOG10",{definition:"计算数值的以 10 为底的对数",syntax:"LOG10(number)",parameters:"number: number",return:"number"}),(0,b.Z)(v,"LOGEST",{definition:"根据指定的数据集计算最佳拟合指数曲线的统计信息",syntax:"LOGEST(knownYs, [knownXs], [const], [stats])",parameters:"knownYs: Range, knownXs: Range (optional), const: boolean (optional), stats: boolean (optional)",return:"array or value"}),(0,b.Z)(v,"LOGINV",{definition:"计算指定均值和标准差的对数正态分布的反函数值",syntax:"LOGINV(probability, mean, standardDev)",parameters:"probability: number, mean: number, standardDev: number",return:"number"}),(0,b.Z)(v,"LOGNORM.DIST",{definition:"计算指定均值和标准差的对数正态分布的概率密度函数值",syntax:"LOGNORM.DIST(x, mean, standardDev, [cumulative])",parameters:"x: number, mean: number, standardDev: number, cumulative: boolean (optional)",return:"number"}),(0,b.Z)(v,"LOGNORM.INV",{definition:"计算指定均值和标准差的对数正态分布的反函数值",syntax:"LOGNORM.INV(probability, mean, standardDev)",parameters:"probability: number, mean: number, standardDev: number",return:"number"}),(0,b.Z)(v,"LOOKUP",{definition:"在向量或数组中查找一个值，并返回该值所在位置的对应值",syntax:"LOOKUP(lookupValue, lookupVector, [resultVector])",parameters:"lookupValue: any, lookupVector: Range, resultVector: Range (optional)",return:"any"}),(0,b.Z)(v,"LOWER",{definition:"将文本字符串转换为小写",syntax:"LOWER(text)",parameters:"text: string",return:"string"}),(0,b.Z)(v,"MATCH",{definition:"查找指定值在向量或数组中的位置",syntax:"MATCH(lookupValue, lookupArray, [matchType])",parameters:"lookupValue: any, lookupArray: Range, matchType: number (optional)",return:"number"}),(0,b.Z)(v,"MAX",{definition:"返回一组数值中的最大值",syntax:"MAX(value1, value2, ...)",parameters:"value1: number, value2: number, ...",return:"number"}),(0,b.Z)(v,"MAXA",{definition:"返回一组数值或文本中的最大值（不计算空值）",syntax:"MAXA(value1, value2, ...)",parameters:"value1: any, value2: any, ...",return:"any"}),(0,b.Z)(v,"MDETERM",{definition:"计算给定矩阵的行列式",syntax:"MDETERM(array)",parameters:"array: Range",return:"number"}),(0,b.Z)(v,"MDURATION",{definition:"计算修正久期，即一种测量债券价格对于收益率变化的敏感度指标",syntax:"MDURATION(settlement, maturity, coupon, yld, frequency, [basis])",parameters:"settlement: Date, maturity: Date, coupon: number, yld: number, frequency: number, basis: number (optional)",return:"number"}),(0,b.Z)(v,"MEDIAN",{definition:"返回一组数值中的中位数",syntax:"MEDIAN(value1, value2, ...)",parameters:"value1: number, value2: number, ...",return:"number"}),(0,b.Z)(v,"MID",{definition:"从文本字符串的指定位置开始提取指定数量的字符",syntax:"MID(text, startNum, numChars)",parameters:"text: string, startNum: number, numChars: number",return:"string"}),(0,b.Z)(v,"MIN",{definition:"返回一组数值中的最小值",syntax:"MIN(value1, value2, ...)",parameters:"value1: number, value2: number, ...",return:"number"}),(0,b.Z)(v,"MINA",{definition:"返回一组数值或文本中的最小值（不计算空值）",syntax:"MINA(value1, value2, ...)",parameters:"value1: any, value2: any, ...",return:"any"}),(0,b.Z)(v,"MINVERSE",{definition:"计算给定矩阵的逆矩阵",syntax:"MINVERSE(array)",parameters:"array: Range",return:"array"}),(0,b.Z)(v,"MIRR",{definition:"计算一系列现金流的修改内部收益率",syntax:"MIRR(values, financeRate, reinvestRate)",parameters:"values: Range, financeRate: number, reinvestRate: number",return:"number"}),(0,b.Z)(v,"MMULT",{definition:"计算两个矩阵的乘积",syntax:"MMULT(array1, array2)",parameters:"array1: Range, array2: Range",return:"array"}),(0,b.Z)(v,"MOD",{definition:"返回两个数相除的余数",syntax:"MOD(number, divisor)",parameters:"number: number, divisor: number",return:"number"}),(0,b.Z)(v,"MODE",{definition:"返回一组数值中的众数（出现频率最高的值）",syntax:"MODE(value1, value2, ...)",parameters:"value1: number, value2: number, ...",return:"number or array"}),(0,b.Z)(v,"MODE.MULT",{definition:"返回一组数值中的多个众数（出现频率最高的值）",syntax:"MODE.MULT(value1, value2, ...)",parameters:"value1: number, value2: number, ...",return:"array"}),(0,b.Z)(v,"MONTH",{definition:"返回给定日期的月份",syntax:"MONTH(date)",parameters:"date: Date",return:"number"}),(0,b.Z)(v,"MROUND",{definition:"将数值舍入到指定的倍数",syntax:"MROUND(number, multiple)",parameters:"number: number, multiple: number",return:"number"}),(0,b.Z)(v,"MULTINOMIAL",{definition:"计算一组数的多项式系数",syntax:"MULTINOMIAL(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"MUNIT",{definition:"生成给定维度的单位矩阵",syntax:"MUNIT(dimension)",parameters:"dimension: number",return:"array"}),(0,b.Z)(v,"N",{definition:"将给定值转换为数值",syntax:"N(value)",parameters:"value: any",return:"number"}),(0,b.Z)(v,"NA",{definition:"返回错误值 #N/A",syntax:"NA()",parameters:"",return:"error"}),(0,b.Z)(v,"NEGBINOM.DIST",{definition:"计算负二项分布的概率密度函数值",syntax:"NEGBINOM.DIST(x, r, p, [cumulative])",parameters:"x: number, r: number, p: number, cumulative: boolean (optional)",return:"number"}),(0,b.Z)(v,"NETWORKDAYS",{definition:"计算两个日期之间的工作日数",syntax:"NETWORKDAYS(startDate, endDate, [holidays])",parameters:"startDate: Date, endDate: Date, holidays: Range (optional)",return:"number"}),(0,b.Z)(v,"NOMINAL",{definition:"计算指定名义利率和复利期数下的年利率",syntax:"NOMINAL(effectiveRate, periods)",parameters:"effectiveRate: number, periods: number",return:"number"}),(0,b.Z)(v,"NORM.DIST",{definition:"计算正态分布的概率密度函数值",syntax:"NORM.DIST(x, mean, standardDev, [cumulative])",parameters:"x: number, mean: number, standardDev: number, cumulative: boolean (optional)",return:"number"}),(0,b.Z)(v,"NORM.INV",{definition:"计算指定均值和标准差的正态分布的反函数值",syntax:"NORM.INV(probability, mean, standardDev)",parameters:"probability: number, mean: number, standardDev: number",return:"number"}),(0,b.Z)(v,"NORM.S.DIST",{definition:"计算标准正态分布的概率密度函数值",syntax:"NORM.S.DIST(x, [cumulative])",parameters:"x: number, cumulative: boolean (optional)",return:"number"}),(0,b.Z)(v,"NORM.S.INV",{definition:"计算标准正态分布的反函数值",syntax:"NORM.S.INV(probability)",parameters:"probability: number",return:"number"}),(0,b.Z)(v,"NOT",{definition:"对逻辑值进行取反操作",syntax:"NOT(logical)",parameters:"logical: boolean",return:"boolean"}),(0,b.Z)(v,"NOW",{definition:"返回当前日期和时间",syntax:"NOW()",parameters:"",return:"Date"}),(0,b.Z)(v,"NPER",{definition:"计算定期支付额、利率和期数下的贷款或投资的净现值",syntax:"NPER(rate, payment, presentValue, [futureValue], [type])",parameters:"rate: number, payment: number, presentValue: number, futureValue: number (optional), type: number (optional)",return:"number"}),(0,b.Z)(v,"NPV",{definition:"计算一系列现金流的净现值",syntax:"NPV(rate, value1, value2, ...)",parameters:"rate: number, value1: number, value2: number, ...",return:"number"}),(0,b.Z)(v,"NUMBERVALUE",{definition:"将文本字符串转换为数值，根据指定的千位分隔符和小数分隔符进行解析",syntax:"NUMBERVALUE(text, [decimalSeparator], [groupSeparator])",parameters:"text: string, decimalSeparator: string (optional), groupSeparator: string (optional)",return:"number"}),(0,b.Z)(v,"ODD",{definition:"将数值向上取整为最接近的奇数",syntax:"ODD(number)",parameters:"number: number",return:"number"}),(0,b.Z)(v,"OFFSET",{definition:"返回给定范围的相对偏移范围",syntax:"OFFSET(reference, rows, cols, [height], [width])",parameters:"reference: Range, rows: number, cols: number, height: number (optional), width: number (optional)",return:"Range"}),(0,b.Z)(v,"OR",{definition:"对一组逻辑值进行逻辑或操作",syntax:"OR(logical1, logical2, ...)",parameters:"logical1: boolean, logical2: boolean, ...",return:"boolean"}),(0,b.Z)(v,"PEARSON",{definition:"计算两组数值之间的皮尔逊相关系数",syntax:"PEARSON(array1, array2)",parameters:"array1: Range, array2: Range",return:"number"}),(0,b.Z)(v,"PERCENTILE.EXC",{definition:"计算一组数值中的指定百分位数（排除最高和最低值）",syntax:"PERCENTILE.EXC(array, k)",parameters:"array: Range, k: number",return:"number"}),(0,b.Z)(v,"PERCENTILE.INC",{definition:"计算一组数值中的指定百分位数（包括最高和最低值）",syntax:"PERCENTILE.INC(array, k)",parameters:"array: Range, k: number",return:"number"}),(0,b.Z)(v,"PERCENTRANK.EXC",{definition:"计算一组数值中给定值的百分等级（排除最高和最低值）",syntax:"PERCENTRANK.EXC(array, x, [significance])",parameters:"array: Range, x: number, significance: number (optional)",return:"number"}),(0,b.Z)(v,"PERCENTRANK.INC",{definition:"计算一组数值中给定值的百分等级（包括最高和最低值）",syntax:"PERCENTRANK.INC(array, x, [significance])",parameters:"array: Range, x: number, significance: number (optional)",return:"number"}),(0,b.Z)(v,"PERMUT",{definition:"计算从给定数目的对象中选择若干个对象的排列数",syntax:"PERMUT(number, numberChosen)",parameters:"number: number, numberChosen: number",return:"number"}),(0,b.Z)(v,"PHI",{definition:"计算标准正态分布的累积分布函数值",syntax:"PHI(x)",parameters:"x: number",return:"number"}),(0,b.Z)(v,"PI",{definition:"返回圆周率 π (pi)",syntax:"PI()",parameters:"",return:"number"}),(0,b.Z)(v,"PMT",{definition:"计算等额分期付款的每期付款额",syntax:"PMT(rate, numPeriods, presentValue, [futureValue], [type])",parameters:"rate: number, numPeriods: number, presentValue: number, futureValue: number (optional), type: number (optional)",return:"number"}),(0,b.Z)(v,"POISSON.DIST",{definition:"计算泊松分布的概率密度函数值",syntax:"POISSON.DIST(x, mean, [cumulative])",parameters:"x: number, mean: number, cumulative: boolean (optional)",return:"number"}),(0,b.Z)(v,"POWER",{definition:"计算给定数的指定次幂",syntax:"POWER(number, power)",parameters:"number: number, power: number",return:"number"}),(0,b.Z)(v,"PPMT",{definition:"计算贷款或投资的指定期数下的本金偿还额",syntax:"PPMT(rate, period, numPeriods, presentValue, [futureValue], [type])",parameters:"rate: number, period: number, numPeriods: number, presentValue: number, futureValue: number (optional), type: number (optional)",return:"number"}),(0,b.Z)(v,"PRICE",{definition:"计算定期支付利息的债券的价格",syntax:"PRICE(settlement, maturity, rate, yld, redemption, [frequency], [basis])",parameters:"settlement: Date, maturity: Date, rate: number, yld: number, redemption: number, frequency: number (optional), basis: number (optional)",return:"number"}),(0,b.Z)(v,"PRICEDISC",{definition:"计算折价债券的价格",syntax:"PRICEDISC(settlement, maturity, discount, redemption, [basis])",parameters:"settlement: Date, maturity: Date, discount: number, redemption: number, basis: number (optional)",return:"number"}),(0,b.Z)(v,"PRICEMAT",{definition:"计算到期付息的债券的价格",syntax:"PRICEMAT(settlement, maturity, issue, rate, yld, [basis])",parameters:"settlement: Date, maturity: Date, issue: Date, rate: number, yld: number, basis: number (optional)",return:"number"}),(0,b.Z)(v,"PROB",{definition:"计算一组数值落在指定区间的概率",syntax:"PROB(range, probabilityRange, [lowerLimit], [upperLimit])",parameters:"range: Range, probabilityRange: Range, lowerLimit: number (optional), upperLimit: number (optional)",return:"number"}),(0,b.Z)(v,"PRODUCT",{definition:"计算一组数值的乘积",syntax:"PRODUCT(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"PROPER",{definition:"将给定文本字符串中的每个单词的首字母大写",syntax:"PROPER(text)",parameters:"text: string",return:"string"}),(0,b.Z)(v,"PV",{definition:"计算未来支付的现值",syntax:"PV(rate, numPeriods, payment, [futureValue], [type])",parameters:"rate: number, numPeriods: number, payment: number, futureValue: number (optional), type: number (optional)",return:"number"}),(0,b.Z)(v,"QUARTILE.EXC",{definition:"计算一组数值的指定四分位数（排除最高和最低值）",syntax:"QUARTILE.EXC(array, quart)",parameters:"array: Range, quart: number",return:"number"}),(0,b.Z)(v,"QUARTILE.INC",{definition:"计算一组数值的指定四分位数（包括最高和最低值）",syntax:"QUARTILE.INC(array, quart)",parameters:"array: Range, quart: number",return:"number"}),(0,b.Z)(v,"QUOTIENT",{definition:"计算两个数的整除结果",syntax:"QUOTIENT(numerator, denominator)",parameters:"numerator: number, denominator: number",return:"number"}),(0,b.Z)(v,"RADIANS",{definition:"将角度值转换为弧度值",syntax:"RADIANS(angle)",parameters:"angle: number",return:"number"}),(0,b.Z)(v,"RAND",{definition:"返回 0 到 1 之间的随机数",syntax:"RAND()",parameters:"",return:"number"}),(0,b.Z)(v,"RANDBETWEEN",{definition:"返回指定范围内的随机整数",syntax:"RANDBETWEEN(bottom, top)",parameters:"bottom: number, top: number",return:"number"}),(0,b.Z)(v,"RANK.AVG",{definition:"计算一组数值中给定值的平均排名",syntax:"RANK.AVG(number, array, [order])",parameters:"number: number, array: Range, order: number (optional)",return:"number"}),(0,b.Z)(v,"RANK.EQ",{definition:"计算一组数值中给定值的排名",syntax:"RANK.EQ(number, array, [order])",parameters:"number: number, array: Range, order: number (optional)",return:"number"}),(0,b.Z)(v,"RATE",{definition:"计算投资的每期利率",syntax:"RATE(numPeriods, payment, presentValue, [futureValue], [type], [guess])",parameters:"numPeriods: number, payment: number, presentValue: number, futureValue: number (optional), type: number (optional), guess: number (optional)",return:"number"}),(0,b.Z)(v,"RECEIVED",{definition:"计算债券的实际收益",syntax:"RECEIVED(settlement, maturity, investment, discount, [basis])",parameters:"settlement: Date, maturity: Date, investment: number, discount: number, basis: number (optional)",return:"number"}),(0,b.Z)(v,"REPLACE",{definition:"替换文本字符串中的一部分文本",syntax:"REPLACE(oldText, start, numChars, newText)",parameters:"oldText: string, start: number, numChars: number, newText: string",return:"string"}),(0,b.Z)(v,"REPT",{definition:"重复文本字符串多次",syntax:"REPT(text, numberTimes)",parameters:"text: string, numberTimes: number",return:"string"}),(0,b.Z)(v,"RIGHT",{definition:"返回文本字符串的最右侧指定字符数",syntax:"RIGHT(text, numChars)",parameters:"text: string, numChars: number",return:"string"}),(0,b.Z)(v,"ROMAN",{definition:"将阿拉伯数字转换为罗马数字",syntax:"ROMAN(number, [form])",parameters:"number: number, form: number (optional)",return:"string"}),(0,b.Z)(v,"ROUND",{definition:"将数值四舍五入到指定的位数",syntax:"ROUND(number, numDigits)",parameters:"number: number, numDigits: number",return:"number"}),(0,b.Z)(v,"ROUNDDOWN",{definition:"向下舍入数值到指定的位数",syntax:"ROUNDDOWN(number, numDigits)",parameters:"number: number, numDigits: number",return:"number"}),(0,b.Z)(v,"ROUNDUP",{definition:"向上舍入数值到指定的位数",syntax:"ROUNDUP(number, numDigits)",parameters:"number: number, numDigits: number",return:"number"}),(0,b.Z)(v,"ROW",{definition:"返回包含指定单元格的行号",syntax:"ROW([reference])",parameters:"reference: Range (optional)",return:"number"}),(0,b.Z)(v,"ROWS",{definition:"返回指定范围内的行数",syntax:"ROWS(array)",parameters:"array: Range",return:"number"}),(0,b.Z)(v,"RSQ",{definition:"计算给定数据集的 R 平方值",syntax:"RSQ(knownY, knownX)",parameters:"knownY: Range, knownX: Range",return:"number"}),(0,b.Z)(v,"SEARCH",{definition:"在文本字符串中查找子字符串的位置",syntax:"SEARCH(findText, withinText, [start])",parameters:"findText: string, withinText: string, start: number (optional)",return:"number"}),(0,b.Z)(v,"SECOND",{definition:"返回包含指定日期或时间的秒数",syntax:"SECOND(serialNumber)",parameters:"serialNumber: Date",return:"number"}),(0,b.Z)(v,"SERIESSUM",{definition:"计算幂级数的和",syntax:"SERIESSUM(x, n, m, coefficients)",parameters:"x: number, n: number, m: number, coefficients: Range",return:"number"}),(0,b.Z)(v,"SIGN",{definition:"返回数值的符号",syntax:"SIGN(number)",parameters:"number: number",return:"number"}),(0,b.Z)(v,"SIN",{definition:"返回给定角度的正弦值",syntax:"SIN(angle)",parameters:"angle: number",return:"number"}),(0,b.Z)(v,"SINH",{definition:"返回给定角度的双曲正弦值",syntax:"SINH(angle)",parameters:"angle: number",return:"number"}),(0,b.Z)(v,"SKEW",{definition:"计算一组数据的偏度",syntax:"SKEW(range)",parameters:"range: Range",return:"number"}),(0,b.Z)(v,"SLN",{definition:"计算固定资产的直线折旧",syntax:"SLN(cost, salvage, life)",parameters:"cost: number, salvage: number, life: number",return:"number"}),(0,b.Z)(v,"SLOPE",{definition:"计算线性回归线的斜率",syntax:"SLOPE(knownY, knownX)",parameters:"knownY: Range, knownX: Range",return:"number"}),(0,b.Z)(v,"SMALL",{definition:"返回一组数值中第 k 小的值",syntax:"SMALL(array, k)",parameters:"array: Range, k: number",return:"number"}),(0,b.Z)(v,"SQRT",{definition:"返回给定数值的平方根",syntax:"SQRT(number)",parameters:"number: number",return:"number"}),(0,b.Z)(v,"SQRTPI",{definition:"返回给定数值乘以 π 的平方根",syntax:"SQRTPI(number)",parameters:"number: number",return:"number"}),(0,b.Z)(v,"STANDARDIZE",{definition:"标准化给定数值",syntax:"STANDARDIZE(x, mean, standardDev)",parameters:"x: number, mean: number, standardDev: number",return:"number"}),(0,b.Z)(v,"STDEV.P",{definition:"计算总体的标准偏差",syntax:"STDEV.P(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"STDEV.S",{definition:"计算样本的标准偏差",syntax:"STDEV.S(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"STDEVA",{definition:"计算包含数值和逻辑值的样本的标准偏差",syntax:"STDEVA(value1, value2, ...)",parameters:"value1: number/logical, value2: number/logical, ...",return:"number"}),(0,b.Z)(v,"STDEVP",{definition:"计算总体的标准偏差",syntax:"STDEVP(value1, value2, ...)",parameters:"value1: number/logical, value2: number/logical, ...",return:"number"}),(0,b.Z)(v,"STDEVPA",{definition:"计算包含数值和逻辑值的总体的标准偏差",syntax:"STDEVPA(value1, value2, ...)",parameters:"value1: number/logical, value2: number/logical, ...",return:"number"}),(0,b.Z)(v,"STEYX",{definition:"计算与线性回归线的 Y 值的预测值之间的标准误差",syntax:"STEYX(knownY, knownX)",parameters:"knownY: Range, knownX: Range",return:"number"}),(0,b.Z)(v,"SUBSTITUTE",{definition:"在文本字符串中替换指定的文本",syntax:"SUBSTITUTE(text, oldText, newText, [instanceNum])",parameters:"text: string, oldText: string, newText: string, instanceNum: number (optional)",return:"string"}),(0,b.Z)(v,"SUBTOTAL",{definition:"使用指定的聚合函数计算指定范围的子总计",syntax:"SUBTOTAL(functionNum, range1, [range2], ...)",parameters:"functionNum: number, range1: Range, range2: Range (optional), ...",return:"number"}),(0,b.Z)(v,"SUM",{definition:"计算一组数值的和",syntax:"SUM(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"SUMIF",{definition:"根据指定的条件对一组数值进行求和",syntax:"SUMIF(range, criteria, [sumRange])",parameters:"range: Range, criteria: string/number/boolean, sumRange: Range (optional)",return:"number"}),(0,b.Z)(v,"SUMIFS",{definition:"根据多个条件对一组数值进行求和",syntax:"SUMIFS(sumRange, criteriaRange1, criteria1, [criteriaRange2, criteria2], ...)",parameters:"sumRange: Range, criteriaRange1: Range, criteria1: string/number/boolean, criteriaRange2: Range (optional), criteria2: string/number/boolean (optional), ...",return:"number"}),(0,b.Z)(v,"SUMPRODUCT",{definition:"计算一组数组的逐元素乘积的和",syntax:"SUMPRODUCT(array1, array2, ...)",parameters:"array1: Range, array2: Range, ...",return:"number"}),(0,b.Z)(v,"SUMSQ",{definition:"计算一组数值的平方和",syntax:"SUMSQ(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"SYD",{definition:"计算固定资产的年限总和折旧",syntax:"SYD(cost, salvage, life, period)",parameters:"cost: number, salvage: number, life: number, period: number",return:"number"}),(0,b.Z)(v,"T",{definition:"将数值或布尔值转换为文本",syntax:"T(value)",parameters:"value: number/boolean",return:"string"}),(0,b.Z)(v,"TAN",{definition:"返回给定角度的正切值",syntax:"TAN(angle)",parameters:"angle: number",return:"number"}),(0,b.Z)(v,"TANH",{definition:"返回给定角度的双曲正切值",syntax:"TANH(angle)",parameters:"angle: number",return:"number"}),(0,b.Z)(v,"TBILLEQ",{definition:"计算根据贴现率和到期日得到的国库券的当期收益率",syntax:"TBILLEQ(settlement, maturity, discount)",parameters:"settlement: Date, maturity: Date, discount: number",return:"number"}),(0,b.Z)(v,"TBILLPRICE",{definition:"计算给定贴现率的国库券的价格",syntax:"TBILLPRICE(settlement, maturity, discount)",parameters:"settlement: Date, maturity: Date, discount: number",return:"number"}),(0,b.Z)(v,"TBILLYIELD",{definition:"计算给定价格的国库券的收益率",syntax:"TBILLYIELD(settlement, maturity, price)",parameters:"settlement: Date, maturity: Date, price: number",return:"number"}),(0,b.Z)(v,"TEXT",{definition:"将数值或日期格式化为文本",syntax:"TEXT(value, formatText)",parameters:"value: number/Date, formatText: string",return:"string"}),(0,b.Z)(v,"TIME",{definition:"返回给定小时、分钟和秒数的时间值",syntax:"TIME(hour, minute, second)",parameters:"hour: number, minute: number, second: number",return:"Date"}),(0,b.Z)(v,"TIMEVALUE",{definition:"将文本时间转换为时间值",syntax:"TIMEVALUE(timeText)",parameters:"timeText: string",return:"Date"}),(0,b.Z)(v,"TODAY",{definition:"返回当前日期",syntax:"TODAY()",return:"Date"}),(0,b.Z)(v,"TRANSPOSE",{definition:"将行向量转置为列向量，或将列向量转置为行向量",syntax:"TRANSPOSE(array)",parameters:"array: Range",return:"array"}),(0,b.Z)(v,"TRIM",{definition:"删除文本字符串中多余的空格",syntax:"TRIM(text)",parameters:"text: string",return:"string"}),(0,b.Z)(v,"TRIMMEAN",{definition:"计算一组数据的修剪平均值",syntax:"TRIMMEAN(range, percent)",parameters:"range: Range, percent: number",return:"number"}),(0,b.Z)(v,"TRUE",{definition:"返回逻辑值 TRUE",syntax:"TRUE()",return:"boolean"}),(0,b.Z)(v,"TRUNC",{definition:"截断数值到指定的位数",syntax:"TRUNC(number, numDigits)",parameters:"number: number, numDigits: number",return:"number"}),(0,b.Z)(v,"TTEST",{definition:"计算两组数据之间的 t 检验结果",syntax:"TTEST(array1, array2, tails, type)",parameters:"array1: Range, array2: Range, tails: number, type: number (optional)",return:"number"}),(0,b.Z)(v,"TYPE",{definition:"返回值的类型",syntax:"TYPE(value)",parameters:"value: any",return:"number"}),(0,b.Z)(v,"UNICHAR",{definition:"根据 Unicode 值返回字符",syntax:"UNICHAR(number)",parameters:"number: number",return:"string"}),(0,b.Z)(v,"UNICODE",{definition:"返回指定字符的 Unicode 值",syntax:"UNICODE(text)",parameters:"text: string",return:"number"}),(0,b.Z)(v,"UPPER",{definition:"将文本字符串转换为大写",syntax:"UPPER(text)",parameters:"text: string",return:"string"}),(0,b.Z)(v,"VALUE",{definition:"将文本字符串转换为数值",syntax:"VALUE(text)",parameters:"text: string",return:"number"}),(0,b.Z)(v,"VAR.P",{definition:"计算总体的方差",syntax:"VAR.P(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"VAR.S",{definition:"计算样本的方差",syntax:"VAR.S(number1, number2, ...)",parameters:"number1: number, number2: number, ...",return:"number"}),(0,b.Z)(v,"VARA",{definition:"计算包含数值和逻辑值的样本的方差",syntax:"VARA(value1, value2, ...)",parameters:"value1: number/logical, value2: number/logical, ...",return:"number"}),(0,b.Z)(v,"VARP",{definition:"计算总体的方差",syntax:"VARP(value1, value2, ...)",parameters:"value1: number/logical, value2: number/logical, ...",return:"number"}),(0,b.Z)(v,"VARPA",{definition:"计算包含数值和逻辑值的总体的方差",syntax:"VARPA(value1, value2, ...)",parameters:"value1: number/logical, value2: number/logical, ...",return:"number"}),(0,b.Z)(v,"VDB",{definition:"计算指定期间内的折旧值",syntax:"VDB(cost, salvage, life, startPeriod, endPeriod, [factor], [noSwitch])",parameters:"cost: number, salvage: number, life: number, startPeriod: number, endPeriod: number, factor: number (optional), noSwitch: boolean (optional)",return:"number"}),(0,b.Z)(v,"VLOOKUP",{definition:"根据指定的值在某个范围内查找并返回相应的值",syntax:"VLOOKUP(lookupValue, range, index, [isSorted])",parameters:"lookupValue: any, range: Range, index: number, isSorted: boolean (optional)",return:"any"}),(0,b.Z)(v,"WEEKDAY",{definition:"返回给定日期的星期几",syntax:"WEEKDAY(date, [returnType])",parameters:"date: Date, returnType: number (optional)",return:"number"}),(0,b.Z)(v,"WEIBULL",{definition:"计算 Weibull 分布的密度函数值",syntax:"WEIBULL(x, alpha, beta, cumulative)",parameters:"x: number, alpha: number, beta: number, cumulative: boolean",return:"number"}),(0,b.Z)(v,"WORKDAY",{definition:"返回从指定日期开始经过指定工作日数量后的日期",syntax:"WORKDAY(startDate, numDays, [holidays])",parameters:"startDate: Date, numDays: number, holidays: Range (optional)",return:"Date"}),(0,b.Z)(v,"XIRR",{definition:"计算不规则现金流的内部收益率",syntax:"XIRR(cashFlow, dates, [guess])",parameters:"cashFlow: Range, dates: Range, guess: number (optional)",return:"number"}),(0,b.Z)(v,"XNPV",{definition:"计算不规则现金流的净现值",syntax:"XNPV(rate, cashFlow, dates)",parameters:"rate: number, cashFlow: Range, dates: Range",return:"number"}),(0,b.Z)(v,"YEAR",{definition:"返回给定日期的年份",syntax:"YEAR(date)",parameters:"date: Date",return:"number"}),(0,b.Z)(v,"YEARFRAC",{definition:"计算两个日期之间的年份差值",syntax:"YEARFRAC(startDate, endDate, [basis])",parameters:"startDate: Date, endDate: Date, basis: number (optional)",return:"number"}),(0,b.Z)(v,"YIELD",{definition:"计算固定利率证券的收益率",syntax:"YIELD(settlement, maturity, rate, pr, redemption, [frequency], [basis])",parameters:"settlement: Date, maturity: Date, rate: number, pr: number, redemption: number, frequency: number (optional), basis: number (optional)",return:"number"}),(0,b.Z)(v,"YIELDDISC",{definition:"计算贴现证券的收益率",syntax:"YIELDDISC(settlement, maturity, price, redemption, [basis])",parameters:"settlement: Date, maturity: Date, price: number, redemption: number, basis: number (optional)",return:"number"}),(0,b.Z)(v,"YIELDMAT",{definition:"计算到期付息证券的收益率",syntax:"YIELDMAT(settlement, maturity, issue, rate, price, [basis])",parameters:"settlement: Date, maturity: Date, issue: Date, rate: number, price: number, basis: number (optional)",return:"number"}),(0,b.Z)(v,"Z.TEST",{definition:"计算正态分布的 z 检验结果",syntax:"Z.TEST(range, [mu], [sigma])",parameters:"range: Range, mu: number (optional), sigma: number (optional)",return:"number"}),v),moment:{moment:{definition:"JavaScript 日期处理类库",syntax:"moment([date], [format], [strict])",parameters:"[date]: string/Date/moment/momentInput/undefined, [format]: string/boolean/undefined, [strict]: boolean/undefined",return:"Moment",demo:"const now = moment();<br/>const date = moment('2022-01-01', 'YYYY-MM-DD');<br/>console.log(now.format('YYYY-MM-DD')); // Output: current date<br/>console.log(date.format('YYYY-MM-DD')); // Output: 2022-01-01"}},SQL:(y={SELECT:{definition:"从数据库中检索数据。",demo:"SELECT * FROM employees;"},INSERT:{definition:"将新数据插入数据库表。",demo:"INSERT INTO customers (name, email) VALUES ('John Doe', 'john@example.com');"},UPDATE:{definition:"更新数据库表中的现有数据。",demo:"UPDATE products SET price = 20 WHERE category = 'Electronics';"},DELETE:{definition:"从数据库表中删除数据。",demo:"DELETE FROM orders WHERE order_date < '2023-01-01';"},CREATE:{definition:"创建新的数据库对象，如表、视图等。",demo:"CREATE TABLE users (id INT PRIMARY KEY, username VARCHAR(255));"},ALTER:{definition:"修改现有的数据库对象，如表结构。",demo:"ALTER TABLE products ADD COLUMN description TEXT;"},DROP:{definition:"删除数据库对象，如表、视图等。",demo:"DROP TABLE customers;"},JOIN:{definition:"在多个表之间根据关联条件联接数据。",demo:"SELECT * FROM orders JOIN customers ON orders.customer_id = customers.id;"},WHERE:{definition:"指定检索条件，过滤数据库中的数据。",demo:"SELECT * FROM products WHERE price > 50;"},"ORDER BY":{definition:"按指定的列对检索结果进行排序。",demo:"SELECT * FROM employees ORDER BY last_name, first_name;"},"GROUP BY":{definition:"将结果集按指定的列分组，通常与聚合函数一起使用。",demo:"SELECT department, AVG(salary) FROM employees GROUP BY department;"},HAVING:{definition:"在GROUP BY之后，过滤分组后的数据。",demo:"SELECT department, AVG(salary) FROM employees GROUP BY department HAVING AVG(salary) > 50000;"},COUNT:{definition:"统计满足条件的行数或非重复值的数量。",demo:"SELECT COUNT(*) FROM orders;"},SUM:{definition:"计算指定列的数值总和。",demo:"SELECT SUM(price) FROM products;"},AVG:{definition:"计算指定列的数值平均值。",demo:"SELECT AVG(age) FROM students;"},MAX:{definition:"找出指定列的最大值。",demo:"SELECT MAX(salary) FROM employees;"},MIN:{definition:"找出指定列的最小值。",demo:"SELECT MIN(population) FROM cities;"},BETWEEN:{definition:"判断某个值是否在指定的范围之间。",demo:"SELECT * FROM products WHERE price BETWEEN 10 AND 50;"},LIKE:{definition:"用于模糊匹配，通常与通配符一起使用。",demo:"SELECT * FROM customers WHERE name LIKE 'John%';"},IN:{definition:"判断某个值是否在一组值之中。",demo:"SELECT * FROM products WHERE category IN ('Electronics', 'Clothing');"},NOT:{definition:"否定一个条件。",demo:"SELECT * FROM students WHERE NOT grade = 'A';"},EXISTS:{definition:"判断子查询是否返回结果。",demo:"SELECT name FROM employees WHERE EXISTS (SELECT * FROM orders WHERE orders.employee_id = employees.id);"},UNION:{definition:"将多个查询结果集合并为一个结果集。",demo:"SELECT product_name FROM products_2022 UNION SELECT product_name FROM products_2023;"},DISTINCT:{definition:"去除查询结果中的重复行。",demo:"SELECT DISTINCT category FROM products;"},AS:{definition:"为列或表起别名，用于提高查询可读性。",demo:"SELECT first_name AS 'First Name', last_name AS 'Last Name' FROM employees;"},"INNER JOIN":{definition:"返回两个表中匹配的行。",demo:"SELECT * FROM customers INNER JOIN orders ON customers.id = orders.customer_id;"},"LEFT JOIN":{definition:"返回左侧表中的所有行和右侧表中匹配的行。",demo:"SELECT * FROM departments LEFT JOIN employees ON departments.id = employees.department_id;"},"RIGHT JOIN":{definition:"返回右侧表中的所有行和左侧表中匹配的行。",demo:"SELECT * FROM employees RIGHT JOIN orders ON employees.id = orders.employee_id;"},"FULL JOIN":{definition:"返回两个表中的所有行，并在不匹配时填充NULL值。",demo:"SELECT * FROM students FULL JOIN scores ON students.id = scores.student_id;"},ON:{definition:"指定联接条件。",demo:"SELECT * FROM orders JOIN customers ON orders.customer_id = customers.id;"}},(0,b.Z)(y,"AS",{definition:"为列或表起别名，用于提高查询可读性。",demo:"SELECT first_name AS 'First Name', last_name AS 'Last Name' FROM employees;"}),(0,b.Z)(y,"NULL",{definition:"表示未知值或缺失数据。",demo:"SELECT * FROM customers WHERE email IS NULL;"}),(0,b.Z)(y,"IS",{definition:"用于比较值是否是某种特定值，通常与NULL一起使用。",demo:"SELECT * FROM orders WHERE status IS NOT NULL;"}),(0,b.Z)(y,"LIMIT",{definition:"限制返回的结果行数。",demo:"SELECT * FROM products LIMIT 10;"}),(0,b.Z)(y,"OFFSET",{definition:"指定返回结果的起始行位置。",demo:"SELECT * FROM employees LIMIT 5 OFFSET 10;"}),(0,b.Z)(y,"TOP",{definition:"在某些数据库中，限制返回的结果行数。",demo:"SELECT TOP 5 * FROM orders;"}),(0,b.Z)(y,"DISTINCTROW",{definition:"仅在某些数据库中，去除查询结果中的重复行。",demo:"SELECT DISTINCTROW category FROM products;"}),(0,b.Z)(y,"AS",{definition:"为列或表起别名，用于提高查询可读性。",demo:"SELECT first_name AS 'First Name', last_name AS 'Last Name' FROM employees;"}),(0,b.Z)(y,"JOIN",{definition:"在多个表之间根据关联条件联接数据。",demo:"SELECT * FROM orders JOIN customers ON orders.customer_id = customers.id;"}),(0,b.Z)(y,"WHERE",{definition:"指定检索条件，过滤数据库中的数据。",demo:"SELECT * FROM products WHERE price > 50;"}),(0,b.Z)(y,"ORDER BY",{definition:"按指定的列对检索结果进行排序。",demo:"SELECT * FROM employees ORDER BY last_name, first_name;"}),(0,b.Z)(y,"GROUP BY",{definition:"将结果集按指定的列分组，通常与聚合函数一起使用。",demo:"SELECT department, AVG(salary) FROM employees GROUP BY department;"}),(0,b.Z)(y,"HAVING",{definition:"在GROUP BY之后，过滤分组后的数据。",demo:"SELECT department, AVG(salary) FROM employees GROUP BY department HAVING AVG(salary) > 50000;"}),y)},C=function(e,t,r){var n=e&&e[t]&&e[t][r];return n?React.createElement(React.Fragment,null,React.createElement("div",{className:"detail-item-title"},"定义"),React.createElement("div",{className:"detail-item"},n.definition),n.syntax?React.createElement(React.Fragment,null,React.createElement("div",{className:"detail-item-title"},"语法"),React.createElement("div",{className:"detail-item"},n.syntax)):null,n.syntax?React.createElement(React.Fragment,null,React.createElement("div",{className:"detail-item-title"},"参数"),React.createElement("div",{className:"detail-item"},n.parameters)):null,n.syntax?React.createElement(React.Fragment,null,React.createElement("div",{className:"detail-item-title"},"返回"),React.createElement("div",{className:"detail-item"},n.return)):null,n.demo?React.createElement(React.Fragment,null,React.createElement("div",{className:"detail-item-title"},"例子"),React.createElement("div",{className:"detail-item"},React.createElement("code",{dangerouslySetInnerHTML:{__html:n.demo}}))):null):null};const D=k;function E(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function S(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?E(Object(r),!0).forEach((function(t){(0,b.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):E(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function B(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return F(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?F(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,s=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){s=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(s)throw i}}}}function F(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var T=Object.keys(p()),O=Object.getOwnPropertyNames(Math),I=function(){var e=(0,l.Z)(u().mark((function e(t,r){var n,o,i,a,s,l,c,d,m,p,b,g,f,h,v;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=[],o=Object.keys(r),t&&-1!==t.indexOf("formulajs")){i={id:"formulajs",title:"公式函数",type:"object",insert:!1,properties:{},description:"JavaScript实现大多数Microsoft Excel公式函数。"},a=B(o);try{for(a.s();!(s=a.n()).done;)l=s.value,i.properties["formulajs.".concat(l)]={title:"formulajs.".concat(l),type:"string",nodeType:"function"}}catch(e){a.e(e)}finally{a.f()}n.push(i)}if(t&&-1!==t.indexOf("lodash")){for(c={id:"_",title:"工具函数",type:"object",insert:!1,properties:{},description:"Lodash 是一个一致性、模块化、高性能的 JavaScript 实用工具库。"},d=0,m=T;d<m.length;d++)p=m[d],c.properties[p]={title:"_.".concat(p),type:"string",nodeType:"function"};n.push(c)}if(t&&-1!==t.indexOf("Math")){b={id:"Math",title:"数学函数",type:"object",insert:!1,properties:{},description:"JavaScript内置数学函数"},g=B(O);try{for(g.s();!(f=g.n()).done;)h=f.value,b.properties["Math.".concat(h)]={title:"Math.".concat(h),type:"string",nodeType:"function"}}catch(e){g.e(e)}finally{g.f()}n.push(b)}return t&&-1!==t.indexOf("moment")&&((v={id:"moment",title:"日期函数",type:"object",insert:!1,properties:{},description:"JavaScript内置数学函数"}).properties.moment={title:"moment",type:"string",nodeType:"function"},n.push(v)),e.abrupt("return",n);case 7:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}();var _=r(6362),R=(0,a.atom)({key:"variable.key",default:(0,_.O1)(12)}),N=(0,a.atom)({key:"variable.schema",default:null}),P=(0,a.atom)({key:"variable.formula",default:null}),L=(0,a.atom)({key:"variable.data",default:null}),M=(0,a.atom)({key:"variable.varAndFun",default:{}}),j=(0,a.atom)({key:"variable.select",default:null}),W=(0,a.atom)({key:"variable.nodeType",default:null}),V=(0,a.atom)({key:"variable.limit",default:null}),U=(0,a.atom)({key:"variable.hasLoading",default:null}),H=(0,a.atom)({key:"variable.stringify",default:!1}),Z=(0,a.atom)({key:"variable.funcExt",default:[]}),q=(0,a.atom)({key:"variable.attrExt",default:[]}),z=(0,a.atom)({key:"variable.isFormulaAtom",default:!1}),G=((0,a.atom)({key:"variable.customStringify",default:null}),(0,a.atom)({key:"variable.isSelectFormula",default:!1})),J=(0,a.atom)({key:"variable.error",default:!1}),K=(0,a.atom)({key:"variable.formulajsAtom",default:null}),Y=(0,a.atom)({key:"variable.esprimaAtom",default:null}),Q=(0,a.selector)({key:"variable.finalSchema",get:function(e){var t=e.get,r=t(N),n=t(L),o=(t(Z),t(G)),i=t(z);return!r&&n?(0,_.Cy)(n):r?o||i?function(e,t){return S(S({},e),{},{properties:S(S({},(null==e?void 0:e.properties)||{}),{})})}(r):r:{type:"object",properties:{}}}}),X=(0,a.selector)({key:"variable.functionSchema",get:function(e){var t=e.get,r=t(G),n=t(z),o=t(Z),i=t(K);return(r||n)&&i?I(o,i):[]}}),$=(0,a.selector)({key:"variable.attrSchema",get:function(e){return function(e){var t=[];if(e&&-1!==e.indexOf("SQL")){var r,n={id:"SQL",title:"SQL",type:"object",insert:!1,properties:{},description:"SQL关键字"},o=B(p().keys(D.SQL));try{for(o.s();!(r=o.n()).done;){var i=r.value;n.properties[i]={title:i,type:"string",nodeType:"attr"}}}catch(e){o.e(e)}finally{o.f()}t.push(n)}return t}((0,e.get)(q))}}),ee=(0,a.selector)({key:"variable.expected",get:function(e){var t=e.get,r=t(N),n=t(P),o=t(L),i=o||(0,_.c8)(r),a=(0,x.Qx)(null==n?void 0:n.origin,i),s=p().isArray(a)?"array":(0,d.Z)(a),l=t(z),c=t(Y);return console.log(c,"esprima"),A((null==n?void 0:n.origin)||[],l,c),{error:null,result:a,type:s,reality:!!o}}});var te=r(885);function re(e){return"[object Object]"===Object.prototype.toString.call(e)}function ne(e){var t,r;return!1!==re(e)&&(void 0===(t=e.constructor)||!1!==re(r=t.prototype)&&!1!==r.hasOwnProperty("isPrototypeOf"))}function oe(e){for(var t=arguments.length,r=Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];throw Error("[Immer] minified error nr: "+e+(r.length?" "+r.map((function(e){return"'"+e+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function ie(e){return!!e&&!!e[Ze]}function ae(e){var t;return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var t=Object.getPrototypeOf(e);if(null===t)return!0;var r=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return r===Object||"function"==typeof r&&Function.toString.call(r)===qe}(e)||Array.isArray(e)||!!e[He]||!!(null===(t=e.constructor)||void 0===t?void 0:t[He])||de(e)||me(e))}function se(e,t,r){void 0===r&&(r=!1),0===le(e)?(r?Object.keys:ze)(e).forEach((function(n){r&&"symbol"==typeof n||t(n,e[n],e)})):e.forEach((function(r,n){return t(n,r,e)}))}function le(e){var t=e[Ze];return t?t.i>3?t.i-4:t.i:Array.isArray(e)?1:de(e)?2:me(e)?3:0}function ce(e,t){return 2===le(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function ue(e,t,r){var n=le(e);2===n?e.set(t,r):3===n?e.add(r):e[t]=r}function de(e){return je&&e instanceof Map}function me(e){return We&&e instanceof Set}function pe(e){return e.o||e.t}function be(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var t=Ge(e);delete t[Ze];for(var r=ze(t),n=0;n<r.length;n++){var o=r[n],i=t[o];!1===i.writable&&(i.writable=!0,i.configurable=!0),(i.get||i.set)&&(t[o]={configurable:!0,writable:!0,enumerable:i.enumerable,value:e[o]})}return Object.create(Object.getPrototypeOf(e),t)}function ge(e,t){return void 0===t&&(t=!1),he(e)||ie(e)||!ae(e)||(le(e)>1&&(e.set=e.add=e.clear=e.delete=fe),Object.freeze(e),t&&se(e,(function(e,t){return ge(t,!0)}),!0)),e}function fe(){oe(2)}function he(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function ve(e){var t=Je[e];return t||oe(18,e),t}function ye(){return Le}function we(e,t){t&&(ve("Patches"),e.u=[],e.s=[],e.v=t)}function Ae(e){xe(e),e.p.forEach(Ce),e.p=null}function xe(e){e===Le&&(Le=e.l)}function ke(e){return Le={p:[],l:Le,h:e,m:!0,_:0}}function Ce(e){var t=e[Ze];0===t.i||1===t.i?t.j():t.g=!0}function De(e,t){t._=t.p.length;var r=t.p[0],n=void 0!==e&&e!==r;return t.h.O||ve("ES5").S(t,e,n),n?(r[Ze].P&&(Ae(t),oe(4)),ae(e)&&(e=Ee(t,e),t.l||Be(t,e)),t.u&&ve("Patches").M(r[Ze].t,e,t.u,t.s)):e=Ee(t,r,[]),Ae(t),t.u&&t.v(t.u,t.s),e!==Ue?e:void 0}function Ee(e,t,r){if(he(t))return t;var n=t[Ze];if(!n)return se(t,(function(o,i){return Se(e,n,t,o,i,r)}),!0),t;if(n.A!==e)return t;if(!n.P)return Be(e,n.t,!0),n.t;if(!n.I){n.I=!0,n.A._--;var o=4===n.i||5===n.i?n.o=be(n.k):n.o,i=o,a=!1;3===n.i&&(i=new Set(o),o.clear(),a=!0),se(i,(function(t,i){return Se(e,n,o,t,i,r,a)})),Be(e,o,!1),r&&e.u&&ve("Patches").N(n,r,e.u,e.s)}return n.o}function Se(e,t,r,n,o,i,a){if(ie(o)){var s=Ee(e,o,i&&t&&3!==t.i&&!ce(t.R,n)?i.concat(n):void 0);if(ue(r,n,s),!ie(s))return;e.m=!1}else a&&r.add(o);if(ae(o)&&!he(o)){if(!e.h.D&&e._<1)return;Ee(e,o),t&&t.A.l||Be(e,o)}}function Be(e,t,r){void 0===r&&(r=!1),!e.l&&e.h.D&&e.m&&ge(t,r)}function Fe(e,t){var r=e[Ze];return(r?pe(r):e)[t]}function Te(e,t){if(t in e)for(var r=Object.getPrototypeOf(e);r;){var n=Object.getOwnPropertyDescriptor(r,t);if(n)return n;r=Object.getPrototypeOf(r)}}function Oe(e){e.P||(e.P=!0,e.l&&Oe(e.l))}function Ie(e){e.o||(e.o=be(e.t))}function _e(e,t,r){var n=de(t)?ve("MapSet").F(t,r):me(t)?ve("MapSet").T(t,r):e.O?function(e,t){var r=Array.isArray(e),n={i:r?1:0,A:t?t.A:ye(),P:!1,I:!1,R:{},l:t,t:e,k:null,o:null,j:null,C:!1},o=n,i=Ke;r&&(o=[n],i=Ye);var a=Proxy.revocable(o,i),s=a.revoke,l=a.proxy;return n.k=l,n.j=s,l}(t,r):ve("ES5").J(t,r);return(r?r.A:ye()).p.push(n),n}function Re(e){return ie(e)||oe(22,e),function e(t){if(!ae(t))return t;var r,n=t[Ze],o=le(t);if(n){if(!n.P&&(n.i<4||!ve("ES5").K(n)))return n.t;n.I=!0,r=Ne(t,o),n.I=!1}else r=Ne(t,o);return se(r,(function(t,o){n&&function(e,t){return 2===le(e)?e.get(t):e[t]}(n.t,t)===o||ue(r,t,e(o))})),3===o?new Set(r):r}(e)}function Ne(e,t){switch(t){case 2:return new Map(e);case 3:return Array.from(e)}return be(e)}var Pe,Le,Me="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),je="undefined"!=typeof Map,We="undefined"!=typeof Set,Ve="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,Ue=Me?Symbol.for("immer-nothing"):((Pe={})["immer-nothing"]=!0,Pe),He=Me?Symbol.for("immer-draftable"):"__$immer_draftable",Ze=Me?Symbol.for("immer-state"):"__$immer_state",qe=("undefined"!=typeof Symbol&&Symbol.iterator,""+Object.prototype.constructor),ze="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames,Ge=Object.getOwnPropertyDescriptors||function(e){var t={};return ze(e).forEach((function(r){t[r]=Object.getOwnPropertyDescriptor(e,r)})),t},Je={},Ke={get:function(e,t){if(t===Ze)return e;var r=pe(e);if(!ce(r,t))return function(e,t,r){var n,o=Te(t,r);return o?"value"in o?o.value:null===(n=o.get)||void 0===n?void 0:n.call(e.k):void 0}(e,r,t);var n=r[t];return e.I||!ae(n)?n:n===Fe(e.t,t)?(Ie(e),e.o[t]=_e(e.A.h,n,e)):n},has:function(e,t){return t in pe(e)},ownKeys:function(e){return Reflect.ownKeys(pe(e))},set:function(e,t,r){var n=Te(pe(e),t);if(null==n?void 0:n.set)return n.set.call(e.k,r),!0;if(!e.P){var o=Fe(pe(e),t),i=null==o?void 0:o[Ze];if(i&&i.t===r)return e.o[t]=r,e.R[t]=!1,!0;if(function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}(r,o)&&(void 0!==r||ce(e.t,t)))return!0;Ie(e),Oe(e)}return e.o[t]===r&&(void 0!==r||t in e.o)||Number.isNaN(r)&&Number.isNaN(e.o[t])||(e.o[t]=r,e.R[t]=!0),!0},deleteProperty:function(e,t){return void 0!==Fe(e.t,t)||t in e.t?(e.R[t]=!1,Ie(e),Oe(e)):delete e.R[t],e.o&&delete e.o[t],!0},getOwnPropertyDescriptor:function(e,t){var r=pe(e),n=Reflect.getOwnPropertyDescriptor(r,t);return n?{writable:!0,configurable:1!==e.i||"length"!==t,enumerable:n.enumerable,value:r[t]}:n},defineProperty:function(){oe(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){oe(12)}},Ye={};se(Ke,(function(e,t){Ye[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),Ye.deleteProperty=function(e,t){return Ye.set.call(this,e,t,void 0)},Ye.set=function(e,t,r){return Ke.set.call(this,e[0],t,r,e[0])};var Qe=function(){function e(e){var t=this;this.O=Ve,this.D=!0,this.produce=function(e,r,n){if("function"==typeof e&&"function"!=typeof r){var o=r;r=e;var i=t;return function(e){var t=this;void 0===e&&(e=o);for(var n=arguments.length,a=Array(n>1?n-1:0),s=1;s<n;s++)a[s-1]=arguments[s];return i.produce(e,(function(e){var n;return(n=r).call.apply(n,[t,e].concat(a))}))}}var a;if("function"!=typeof r&&oe(6),void 0!==n&&"function"!=typeof n&&oe(7),ae(e)){var s=ke(t),l=_e(t,e,void 0),c=!0;try{a=r(l),c=!1}finally{c?Ae(s):xe(s)}return"undefined"!=typeof Promise&&a instanceof Promise?a.then((function(e){return we(s,n),De(e,s)}),(function(e){throw Ae(s),e})):(we(s,n),De(a,s))}if(!e||"object"!=typeof e){if(void 0===(a=r(e))&&(a=e),a===Ue&&(a=void 0),t.D&&ge(a,!0),n){var u=[],d=[];ve("Patches").M(e,a,u,d),n(u,d)}return a}oe(21,e)},this.produceWithPatches=function(e,r){if("function"==typeof e)return function(r){for(var n=arguments.length,o=Array(n>1?n-1:0),i=1;i<n;i++)o[i-1]=arguments[i];return t.produceWithPatches(r,(function(t){return e.apply(void 0,[t].concat(o))}))};var n,o,i=t.produce(e,r,(function(e,t){n=e,o=t}));return"undefined"!=typeof Promise&&i instanceof Promise?i.then((function(e){return[e,n,o]})):[i,n,o]},"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze)}var t=e.prototype;return t.createDraft=function(e){ae(e)||oe(8),ie(e)&&(e=Re(e));var t=ke(this),r=_e(this,e,void 0);return r[Ze].C=!0,xe(t),r},t.finishDraft=function(e,t){var r=(e&&e[Ze]).A;return we(r,t),De(void 0,r)},t.setAutoFreeze=function(e){this.D=e},t.setUseProxies=function(e){e&&!Ve&&oe(20),this.O=e},t.applyPatches=function(e,t){var r;for(r=t.length-1;r>=0;r--){var n=t[r];if(0===n.path.length&&"replace"===n.op){e=n.value;break}}r>-1&&(t=t.slice(r+1));var o=ve("Patches").$;return ie(e)?o(e,t):this.produce(e,(function(e){return o(e,t)}))},e}(),Xe=new Qe,$e=Xe.produce,et=(Xe.produceWithPatches.bind(Xe),Xe.setAutoFreeze.bind(Xe),Xe.setUseProxies.bind(Xe),Xe.applyPatches.bind(Xe),Xe.createDraft.bind(Xe)),tt=Xe.finishDraft.bind(Xe);function rt(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var nt=new WeakMap,ot=new WeakMap,it=new WeakMap,at=new WeakMap,st=new WeakMap,lt=new WeakMap,ct=new WeakMap;function ut(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function dt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ut(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ut(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function mt(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var pt,bt=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=!t,n=t?wt(e):e,o=pt.None,i=pt.None,a=0,s=null;for(var l of n){var c=l.codePointAt(0);if(!c)break;var u=It(l,c);if([o,i]=r?[i,u]:[u,o],_t(o,pt.ZWJ)&&_t(i,pt.ExtPict)&&!Lt(r?e.substring(0,a):e.substring(0,e.length-a)))break;if(_t(o,pt.RI)&&_t(i,pt.RI)&&!(s=null!==s?!s:!!r||jt(e.substring(0,e.length-a))))break;if(o!==pt.None&&i!==pt.None&&Nt(o,i))break;a+=l.length}return a||1},gt=/\s/,ft=/[\u0021-\u0023\u0025-\u002A\u002C-\u002F\u003A\u003B\u003F\u0040\u005B-\u005D\u005F\u007B\u007D\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/,ht=/['\u2018\u2019]/,vt=(e,t,r)=>{if(r){var n=e.length-t;return[e.slice(n,e.length),e.slice(0,n)]}return[e.slice(0,t),e.slice(t)]},yt=function e(t,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(gt.test(t))return!1;if(ht.test(t)){var o=bt(r,n),[i,a]=vt(r,o,n);if(e(i,a,n))return!0}return!ft.test(t)},wt=function*(e){for(var t=e.length-1,r=0;r<e.length;r++){var n=e.charAt(t-r);if(xt(n.charCodeAt(0))){var o=e.charAt(t-r-1);if(At(o.charCodeAt(0))){yield o+n,r++;continue}}yield n}},At=e=>e>=55296&&e<=56319,xt=e=>e>=56320&&e<=57343;!function(e){e[e.None=0]="None",e[e.Extend=1]="Extend",e[e.ZWJ=2]="ZWJ",e[e.RI=4]="RI",e[e.Prepend=8]="Prepend",e[e.SpacingMark=16]="SpacingMark",e[e.L=32]="L",e[e.V=64]="V",e[e.T=128]="T",e[e.LV=256]="LV",e[e.LVT=512]="LVT",e[e.ExtPict=1024]="ExtPict",e[e.Any=2048]="Any"}(pt||(pt={}));var kt=/^(?:[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09BE\u09C1-\u09C4\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01\u0B3C\u0B3E\u0B3F\u0B41-\u0B44\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B82\u0BBE\u0BC0\u0BCD\u0BD7\u0C00\u0C04\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC2\u0CC6\u0CCC\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00\u0D01\u0D3B\u0D3C\u0D3E\u0D41-\u0D44\u0D4D\u0D57\u0D62\u0D63\u0D81\u0DCA\u0DCF\u0DD2-\u0DD4\u0DD6\u0DDF\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1AC0\u1B00-\u1B03\u1B34-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA82C\uA8C4\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9BD\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFF9E\uFF9F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDC9-\uDDCC\uDDCF\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3B\uDF3C\uDF3E\uDF40\uDF57\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDC5E\uDCB0\uDCB3-\uDCB8\uDCBA\uDCBD\uDCBF\uDCC0\uDCC2\uDCC3\uDDAF\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD806[\uDC2F-\uDC37\uDC39\uDC3A\uDD30\uDD3B\uDD3C\uDD3E\uDD43\uDDD4-\uDDD7\uDDDA\uDDDB\uDDE0\uDE01-\uDE0A\uDE33-\uDE38\uDE3B-\uDE3E\uDE47\uDE51-\uDE56\uDE59-\uDE5B\uDE8A-\uDE96\uDE98\uDE99]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD90\uDD91\uDD95\uDD97\uDEF3\uDEF4]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF8F-\uDF92\uDFE4]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65\uDD67-\uDD69\uDD6E-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uD83C[\uDFFB-\uDFFF]|\uDB40[\uDC20-\uDC7F\uDD00-\uDDEF])$/,Ct=/^(?:[\u0600-\u0605\u06DD\u070F\u0890\u0891\u08E2\u0D4E]|\uD804[\uDCBD\uDCCD\uDDC2\uDDC3]|\uD806[\uDD3F\uDD41\uDE3A\uDE84-\uDE89]|\uD807\uDD46)$/,Dt=/^(?:[\u0903\u093B\u093E-\u0940\u0949-\u094C\u094E\u094F\u0982\u0983\u09BF\u09C0\u09C7\u09C8\u09CB\u09CC\u0A03\u0A3E-\u0A40\u0A83\u0ABE-\u0AC0\u0AC9\u0ACB\u0ACC\u0B02\u0B03\u0B40\u0B47\u0B48\u0B4B\u0B4C\u0BBF\u0BC1\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCC\u0C01-\u0C03\u0C41-\u0C44\u0C82\u0C83\u0CBE\u0CC0\u0CC1\u0CC3\u0CC4\u0CC7\u0CC8\u0CCA\u0CCB\u0D02\u0D03\u0D3F\u0D40\u0D46-\u0D48\u0D4A-\u0D4C\u0D82\u0D83\u0DD0\u0DD1\u0DD8-\u0DDE\u0DF2\u0DF3\u0E33\u0EB3\u0F3E\u0F3F\u0F7F\u1031\u103B\u103C\u1056\u1057\u1084\u1715\u1734\u17B6\u17BE-\u17C5\u17C7\u17C8\u1923-\u1926\u1929-\u192B\u1930\u1931\u1933-\u1938\u1A19\u1A1A\u1A55\u1A57\u1A6D-\u1A72\u1B04\u1B3B\u1B3D-\u1B41\u1B43\u1B44\u1B82\u1BA1\u1BA6\u1BA7\u1BAA\u1BE7\u1BEA-\u1BEC\u1BEE\u1BF2\u1BF3\u1C24-\u1C2B\u1C34\u1C35\u1CE1\u1CF7\uA823\uA824\uA827\uA880\uA881\uA8B4-\uA8C3\uA952\uA953\uA983\uA9B4\uA9B5\uA9BA\uA9BB\uA9BE-\uA9C0\uAA2F\uAA30\uAA33\uAA34\uAA4D\uAAEB\uAAEE\uAAEF\uAAF5\uABE3\uABE4\uABE6\uABE7\uABE9\uABEA\uABEC]|\uD804[\uDC00\uDC02\uDC82\uDCB0-\uDCB2\uDCB7\uDCB8\uDD2C\uDD45\uDD46\uDD82\uDDB3-\uDDB5\uDDBF\uDDC0\uDDCE\uDE2C-\uDE2E\uDE32\uDE33\uDE35\uDEE0-\uDEE2\uDF02\uDF03\uDF3F\uDF41-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF62\uDF63]|\uD805[\uDC35-\uDC37\uDC40\uDC41\uDC45\uDCB1\uDCB2\uDCB9\uDCBB\uDCBC\uDCBE\uDCC1\uDDB0\uDDB1\uDDB8-\uDDBB\uDDBE\uDE30-\uDE32\uDE3B\uDE3C\uDE3E\uDEAC\uDEAE\uDEAF\uDEB6\uDF26]|\uD806[\uDC2C-\uDC2E\uDC38\uDD31-\uDD35\uDD37\uDD38\uDD3D\uDD40\uDD42\uDDD1-\uDDD3\uDDDC-\uDDDF\uDDE4\uDE39\uDE57\uDE58\uDE97]|\uD807[\uDC2F\uDC3E\uDCA9\uDCB1\uDCB4\uDD8A-\uDD8E\uDD93\uDD94\uDD96\uDEF5\uDEF6]|\uD81B[\uDF51-\uDF87\uDFF0\uDFF1]|\uD834[\uDD66\uDD6D])$/,Et=/^[\u1100-\u115F\uA960-\uA97C]$/,St=/^[\u1160-\u11A7\uD7B0-\uD7C6]$/,Bt=/^[\u11A8-\u11FF\uD7CB-\uD7FB]$/,Ft=/^[\uAC00\uAC1C\uAC38\uAC54\uAC70\uAC8C\uACA8\uACC4\uACE0\uACFC\uAD18\uAD34\uAD50\uAD6C\uAD88\uADA4\uADC0\uADDC\uADF8\uAE14\uAE30\uAE4C\uAE68\uAE84\uAEA0\uAEBC\uAED8\uAEF4\uAF10\uAF2C\uAF48\uAF64\uAF80\uAF9C\uAFB8\uAFD4\uAFF0\uB00C\uB028\uB044\uB060\uB07C\uB098\uB0B4\uB0D0\uB0EC\uB108\uB124\uB140\uB15C\uB178\uB194\uB1B0\uB1CC\uB1E8\uB204\uB220\uB23C\uB258\uB274\uB290\uB2AC\uB2C8\uB2E4\uB300\uB31C\uB338\uB354\uB370\uB38C\uB3A8\uB3C4\uB3E0\uB3FC\uB418\uB434\uB450\uB46C\uB488\uB4A4\uB4C0\uB4DC\uB4F8\uB514\uB530\uB54C\uB568\uB584\uB5A0\uB5BC\uB5D8\uB5F4\uB610\uB62C\uB648\uB664\uB680\uB69C\uB6B8\uB6D4\uB6F0\uB70C\uB728\uB744\uB760\uB77C\uB798\uB7B4\uB7D0\uB7EC\uB808\uB824\uB840\uB85C\uB878\uB894\uB8B0\uB8CC\uB8E8\uB904\uB920\uB93C\uB958\uB974\uB990\uB9AC\uB9C8\uB9E4\uBA00\uBA1C\uBA38\uBA54\uBA70\uBA8C\uBAA8\uBAC4\uBAE0\uBAFC\uBB18\uBB34\uBB50\uBB6C\uBB88\uBBA4\uBBC0\uBBDC\uBBF8\uBC14\uBC30\uBC4C\uBC68\uBC84\uBCA0\uBCBC\uBCD8\uBCF4\uBD10\uBD2C\uBD48\uBD64\uBD80\uBD9C\uBDB8\uBDD4\uBDF0\uBE0C\uBE28\uBE44\uBE60\uBE7C\uBE98\uBEB4\uBED0\uBEEC\uBF08\uBF24\uBF40\uBF5C\uBF78\uBF94\uBFB0\uBFCC\uBFE8\uC004\uC020\uC03C\uC058\uC074\uC090\uC0AC\uC0C8\uC0E4\uC100\uC11C\uC138\uC154\uC170\uC18C\uC1A8\uC1C4\uC1E0\uC1FC\uC218\uC234\uC250\uC26C\uC288\uC2A4\uC2C0\uC2DC\uC2F8\uC314\uC330\uC34C\uC368\uC384\uC3A0\uC3BC\uC3D8\uC3F4\uC410\uC42C\uC448\uC464\uC480\uC49C\uC4B8\uC4D4\uC4F0\uC50C\uC528\uC544\uC560\uC57C\uC598\uC5B4\uC5D0\uC5EC\uC608\uC624\uC640\uC65C\uC678\uC694\uC6B0\uC6CC\uC6E8\uC704\uC720\uC73C\uC758\uC774\uC790\uC7AC\uC7C8\uC7E4\uC800\uC81C\uC838\uC854\uC870\uC88C\uC8A8\uC8C4\uC8E0\uC8FC\uC918\uC934\uC950\uC96C\uC988\uC9A4\uC9C0\uC9DC\uC9F8\uCA14\uCA30\uCA4C\uCA68\uCA84\uCAA0\uCABC\uCAD8\uCAF4\uCB10\uCB2C\uCB48\uCB64\uCB80\uCB9C\uCBB8\uCBD4\uCBF0\uCC0C\uCC28\uCC44\uCC60\uCC7C\uCC98\uCCB4\uCCD0\uCCEC\uCD08\uCD24\uCD40\uCD5C\uCD78\uCD94\uCDB0\uCDCC\uCDE8\uCE04\uCE20\uCE3C\uCE58\uCE74\uCE90\uCEAC\uCEC8\uCEE4\uCF00\uCF1C\uCF38\uCF54\uCF70\uCF8C\uCFA8\uCFC4\uCFE0\uCFFC\uD018\uD034\uD050\uD06C\uD088\uD0A4\uD0C0\uD0DC\uD0F8\uD114\uD130\uD14C\uD168\uD184\uD1A0\uD1BC\uD1D8\uD1F4\uD210\uD22C\uD248\uD264\uD280\uD29C\uD2B8\uD2D4\uD2F0\uD30C\uD328\uD344\uD360\uD37C\uD398\uD3B4\uD3D0\uD3EC\uD408\uD424\uD440\uD45C\uD478\uD494\uD4B0\uD4CC\uD4E8\uD504\uD520\uD53C\uD558\uD574\uD590\uD5AC\uD5C8\uD5E4\uD600\uD61C\uD638\uD654\uD670\uD68C\uD6A8\uD6C4\uD6E0\uD6FC\uD718\uD734\uD750\uD76C\uD788]$/,Tt=/^[\uAC01-\uAC1B\uAC1D-\uAC37\uAC39-\uAC53\uAC55-\uAC6F\uAC71-\uAC8B\uAC8D-\uACA7\uACA9-\uACC3\uACC5-\uACDF\uACE1-\uACFB\uACFD-\uAD17\uAD19-\uAD33\uAD35-\uAD4F\uAD51-\uAD6B\uAD6D-\uAD87\uAD89-\uADA3\uADA5-\uADBF\uADC1-\uADDB\uADDD-\uADF7\uADF9-\uAE13\uAE15-\uAE2F\uAE31-\uAE4B\uAE4D-\uAE67\uAE69-\uAE83\uAE85-\uAE9F\uAEA1-\uAEBB\uAEBD-\uAED7\uAED9-\uAEF3\uAEF5-\uAF0F\uAF11-\uAF2B\uAF2D-\uAF47\uAF49-\uAF63\uAF65-\uAF7F\uAF81-\uAF9B\uAF9D-\uAFB7\uAFB9-\uAFD3\uAFD5-\uAFEF\uAFF1-\uB00B\uB00D-\uB027\uB029-\uB043\uB045-\uB05F\uB061-\uB07B\uB07D-\uB097\uB099-\uB0B3\uB0B5-\uB0CF\uB0D1-\uB0EB\uB0ED-\uB107\uB109-\uB123\uB125-\uB13F\uB141-\uB15B\uB15D-\uB177\uB179-\uB193\uB195-\uB1AF\uB1B1-\uB1CB\uB1CD-\uB1E7\uB1E9-\uB203\uB205-\uB21F\uB221-\uB23B\uB23D-\uB257\uB259-\uB273\uB275-\uB28F\uB291-\uB2AB\uB2AD-\uB2C7\uB2C9-\uB2E3\uB2E5-\uB2FF\uB301-\uB31B\uB31D-\uB337\uB339-\uB353\uB355-\uB36F\uB371-\uB38B\uB38D-\uB3A7\uB3A9-\uB3C3\uB3C5-\uB3DF\uB3E1-\uB3FB\uB3FD-\uB417\uB419-\uB433\uB435-\uB44F\uB451-\uB46B\uB46D-\uB487\uB489-\uB4A3\uB4A5-\uB4BF\uB4C1-\uB4DB\uB4DD-\uB4F7\uB4F9-\uB513\uB515-\uB52F\uB531-\uB54B\uB54D-\uB567\uB569-\uB583\uB585-\uB59F\uB5A1-\uB5BB\uB5BD-\uB5D7\uB5D9-\uB5F3\uB5F5-\uB60F\uB611-\uB62B\uB62D-\uB647\uB649-\uB663\uB665-\uB67F\uB681-\uB69B\uB69D-\uB6B7\uB6B9-\uB6D3\uB6D5-\uB6EF\uB6F1-\uB70B\uB70D-\uB727\uB729-\uB743\uB745-\uB75F\uB761-\uB77B\uB77D-\uB797\uB799-\uB7B3\uB7B5-\uB7CF\uB7D1-\uB7EB\uB7ED-\uB807\uB809-\uB823\uB825-\uB83F\uB841-\uB85B\uB85D-\uB877\uB879-\uB893\uB895-\uB8AF\uB8B1-\uB8CB\uB8CD-\uB8E7\uB8E9-\uB903\uB905-\uB91F\uB921-\uB93B\uB93D-\uB957\uB959-\uB973\uB975-\uB98F\uB991-\uB9AB\uB9AD-\uB9C7\uB9C9-\uB9E3\uB9E5-\uB9FF\uBA01-\uBA1B\uBA1D-\uBA37\uBA39-\uBA53\uBA55-\uBA6F\uBA71-\uBA8B\uBA8D-\uBAA7\uBAA9-\uBAC3\uBAC5-\uBADF\uBAE1-\uBAFB\uBAFD-\uBB17\uBB19-\uBB33\uBB35-\uBB4F\uBB51-\uBB6B\uBB6D-\uBB87\uBB89-\uBBA3\uBBA5-\uBBBF\uBBC1-\uBBDB\uBBDD-\uBBF7\uBBF9-\uBC13\uBC15-\uBC2F\uBC31-\uBC4B\uBC4D-\uBC67\uBC69-\uBC83\uBC85-\uBC9F\uBCA1-\uBCBB\uBCBD-\uBCD7\uBCD9-\uBCF3\uBCF5-\uBD0F\uBD11-\uBD2B\uBD2D-\uBD47\uBD49-\uBD63\uBD65-\uBD7F\uBD81-\uBD9B\uBD9D-\uBDB7\uBDB9-\uBDD3\uBDD5-\uBDEF\uBDF1-\uBE0B\uBE0D-\uBE27\uBE29-\uBE43\uBE45-\uBE5F\uBE61-\uBE7B\uBE7D-\uBE97\uBE99-\uBEB3\uBEB5-\uBECF\uBED1-\uBEEB\uBEED-\uBF07\uBF09-\uBF23\uBF25-\uBF3F\uBF41-\uBF5B\uBF5D-\uBF77\uBF79-\uBF93\uBF95-\uBFAF\uBFB1-\uBFCB\uBFCD-\uBFE7\uBFE9-\uC003\uC005-\uC01F\uC021-\uC03B\uC03D-\uC057\uC059-\uC073\uC075-\uC08F\uC091-\uC0AB\uC0AD-\uC0C7\uC0C9-\uC0E3\uC0E5-\uC0FF\uC101-\uC11B\uC11D-\uC137\uC139-\uC153\uC155-\uC16F\uC171-\uC18B\uC18D-\uC1A7\uC1A9-\uC1C3\uC1C5-\uC1DF\uC1E1-\uC1FB\uC1FD-\uC217\uC219-\uC233\uC235-\uC24F\uC251-\uC26B\uC26D-\uC287\uC289-\uC2A3\uC2A5-\uC2BF\uC2C1-\uC2DB\uC2DD-\uC2F7\uC2F9-\uC313\uC315-\uC32F\uC331-\uC34B\uC34D-\uC367\uC369-\uC383\uC385-\uC39F\uC3A1-\uC3BB\uC3BD-\uC3D7\uC3D9-\uC3F3\uC3F5-\uC40F\uC411-\uC42B\uC42D-\uC447\uC449-\uC463\uC465-\uC47F\uC481-\uC49B\uC49D-\uC4B7\uC4B9-\uC4D3\uC4D5-\uC4EF\uC4F1-\uC50B\uC50D-\uC527\uC529-\uC543\uC545-\uC55F\uC561-\uC57B\uC57D-\uC597\uC599-\uC5B3\uC5B5-\uC5CF\uC5D1-\uC5EB\uC5ED-\uC607\uC609-\uC623\uC625-\uC63F\uC641-\uC65B\uC65D-\uC677\uC679-\uC693\uC695-\uC6AF\uC6B1-\uC6CB\uC6CD-\uC6E7\uC6E9-\uC703\uC705-\uC71F\uC721-\uC73B\uC73D-\uC757\uC759-\uC773\uC775-\uC78F\uC791-\uC7AB\uC7AD-\uC7C7\uC7C9-\uC7E3\uC7E5-\uC7FF\uC801-\uC81B\uC81D-\uC837\uC839-\uC853\uC855-\uC86F\uC871-\uC88B\uC88D-\uC8A7\uC8A9-\uC8C3\uC8C5-\uC8DF\uC8E1-\uC8FB\uC8FD-\uC917\uC919-\uC933\uC935-\uC94F\uC951-\uC96B\uC96D-\uC987\uC989-\uC9A3\uC9A5-\uC9BF\uC9C1-\uC9DB\uC9DD-\uC9F7\uC9F9-\uCA13\uCA15-\uCA2F\uCA31-\uCA4B\uCA4D-\uCA67\uCA69-\uCA83\uCA85-\uCA9F\uCAA1-\uCABB\uCABD-\uCAD7\uCAD9-\uCAF3\uCAF5-\uCB0F\uCB11-\uCB2B\uCB2D-\uCB47\uCB49-\uCB63\uCB65-\uCB7F\uCB81-\uCB9B\uCB9D-\uCBB7\uCBB9-\uCBD3\uCBD5-\uCBEF\uCBF1-\uCC0B\uCC0D-\uCC27\uCC29-\uCC43\uCC45-\uCC5F\uCC61-\uCC7B\uCC7D-\uCC97\uCC99-\uCCB3\uCCB5-\uCCCF\uCCD1-\uCCEB\uCCED-\uCD07\uCD09-\uCD23\uCD25-\uCD3F\uCD41-\uCD5B\uCD5D-\uCD77\uCD79-\uCD93\uCD95-\uCDAF\uCDB1-\uCDCB\uCDCD-\uCDE7\uCDE9-\uCE03\uCE05-\uCE1F\uCE21-\uCE3B\uCE3D-\uCE57\uCE59-\uCE73\uCE75-\uCE8F\uCE91-\uCEAB\uCEAD-\uCEC7\uCEC9-\uCEE3\uCEE5-\uCEFF\uCF01-\uCF1B\uCF1D-\uCF37\uCF39-\uCF53\uCF55-\uCF6F\uCF71-\uCF8B\uCF8D-\uCFA7\uCFA9-\uCFC3\uCFC5-\uCFDF\uCFE1-\uCFFB\uCFFD-\uD017\uD019-\uD033\uD035-\uD04F\uD051-\uD06B\uD06D-\uD087\uD089-\uD0A3\uD0A5-\uD0BF\uD0C1-\uD0DB\uD0DD-\uD0F7\uD0F9-\uD113\uD115-\uD12F\uD131-\uD14B\uD14D-\uD167\uD169-\uD183\uD185-\uD19F\uD1A1-\uD1BB\uD1BD-\uD1D7\uD1D9-\uD1F3\uD1F5-\uD20F\uD211-\uD22B\uD22D-\uD247\uD249-\uD263\uD265-\uD27F\uD281-\uD29B\uD29D-\uD2B7\uD2B9-\uD2D3\uD2D5-\uD2EF\uD2F1-\uD30B\uD30D-\uD327\uD329-\uD343\uD345-\uD35F\uD361-\uD37B\uD37D-\uD397\uD399-\uD3B3\uD3B5-\uD3CF\uD3D1-\uD3EB\uD3ED-\uD407\uD409-\uD423\uD425-\uD43F\uD441-\uD45B\uD45D-\uD477\uD479-\uD493\uD495-\uD4AF\uD4B1-\uD4CB\uD4CD-\uD4E7\uD4E9-\uD503\uD505-\uD51F\uD521-\uD53B\uD53D-\uD557\uD559-\uD573\uD575-\uD58F\uD591-\uD5AB\uD5AD-\uD5C7\uD5C9-\uD5E3\uD5E5-\uD5FF\uD601-\uD61B\uD61D-\uD637\uD639-\uD653\uD655-\uD66F\uD671-\uD68B\uD68D-\uD6A7\uD6A9-\uD6C3\uD6C5-\uD6DF\uD6E1-\uD6FB\uD6FD-\uD717\uD719-\uD733\uD735-\uD74F\uD751-\uD76B\uD76D-\uD787\uD789-\uD7A3]$/,Ot=/^(?:[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u2388\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2605\u2607-\u2612\u2614-\u2685\u2690-\u2705\u2708-\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763-\u2767\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC00-\uDCFF\uDD0D-\uDD0F\uDD2F\uDD6C-\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDAD-\uDDE5\uDE01-\uDE0F\uDE1A\uDE2F\uDE32-\uDE3A\uDE3C-\uDE3F\uDE49-\uDFFA]|\uD83D[\uDC00-\uDD3D\uDD46-\uDE4F\uDE80-\uDEFF\uDF74-\uDF7F\uDFD5-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE-\uDCFF\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDEFF]|\uD83F[\uDC00-\uDFFD])$/,It=(e,t)=>{var r=pt.Any;return-1!==e.search(kt)&&(r|=pt.Extend),8205===t&&(r|=pt.ZWJ),t>=127462&&t<=127487&&(r|=pt.RI),-1!==e.search(Ct)&&(r|=pt.Prepend),-1!==e.search(Dt)&&(r|=pt.SpacingMark),-1!==e.search(Et)&&(r|=pt.L),-1!==e.search(St)&&(r|=pt.V),-1!==e.search(Bt)&&(r|=pt.T),-1!==e.search(Ft)&&(r|=pt.LV),-1!==e.search(Tt)&&(r|=pt.LVT),-1!==e.search(Ot)&&(r|=pt.ExtPict),r};function _t(e,t){return 0!=(e&t)}var Rt=[[pt.L,pt.L|pt.V|pt.LV|pt.LVT],[pt.LV|pt.V,pt.V|pt.T],[pt.LVT|pt.T,pt.T],[pt.Any,pt.Extend|pt.ZWJ],[pt.Any,pt.SpacingMark],[pt.Prepend,pt.Any],[pt.ZWJ,pt.ExtPict],[pt.RI,pt.RI]];function Nt(e,t){return-1===Rt.findIndex((r=>_t(e,r[0])&&_t(t,r[1])))}var Pt=/(?:[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u2388\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2605\u2607-\u2612\u2614-\u2685\u2690-\u2705\u2708-\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763-\u2767\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC00-\uDCFF\uDD0D-\uDD0F\uDD2F\uDD6C-\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDAD-\uDDE5\uDE01-\uDE0F\uDE1A\uDE2F\uDE32-\uDE3A\uDE3C-\uDE3F\uDE49-\uDFFA]|\uD83D[\uDC00-\uDD3D\uDD46-\uDE4F\uDE80-\uDEFF\uDF74-\uDF7F\uDFD5-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE-\uDCFF\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDEFF]|\uD83F[\uDC00-\uDFFD])(?:[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09BE\u09C1-\u09C4\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01\u0B3C\u0B3E\u0B3F\u0B41-\u0B44\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B82\u0BBE\u0BC0\u0BCD\u0BD7\u0C00\u0C04\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC2\u0CC6\u0CCC\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00\u0D01\u0D3B\u0D3C\u0D3E\u0D41-\u0D44\u0D4D\u0D57\u0D62\u0D63\u0D81\u0DCA\u0DCF\u0DD2-\u0DD4\u0DD6\u0DDF\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1AC0\u1B00-\u1B03\u1B34-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA82C\uA8C4\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9BD\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFF9E\uFF9F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDC9-\uDDCC\uDDCF\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3B\uDF3C\uDF3E\uDF40\uDF57\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDC5E\uDCB0\uDCB3-\uDCB8\uDCBA\uDCBD\uDCBF\uDCC0\uDCC2\uDCC3\uDDAF\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD806[\uDC2F-\uDC37\uDC39\uDC3A\uDD30\uDD3B\uDD3C\uDD3E\uDD43\uDDD4-\uDDD7\uDDDA\uDDDB\uDDE0\uDE01-\uDE0A\uDE33-\uDE38\uDE3B-\uDE3E\uDE47\uDE51-\uDE56\uDE59-\uDE5B\uDE8A-\uDE96\uDE98\uDE99]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD90\uDD91\uDD95\uDD97\uDEF3\uDEF4]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF8F-\uDF92\uDFE4]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65\uDD67-\uDD69\uDD6E-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uD83C[\uDFFB-\uDFFF]|\uDB40[\uDC20-\uDC7F\uDD00-\uDDEF])*\u200D$/,Lt=e=>-1!==e.search(Pt),Mt=/(?:\uD83C[\uDDE6-\uDDFF])+$/g,jt=e=>{var t=e.match(Mt);return null!==t&&t[0].length/2%2==1},Wt=e=>ne(e)&&Xt.isNodeList(e.children)&&!Gt.isEditor(e),Vt={isAncestor:e=>ne(e)&&Xt.isNodeList(e.children),isElement:Wt,isElementList:e=>Array.isArray(e)&&e.every((e=>Vt.isElement(e))),isElementProps:e=>void 0!==e.children,isElementType:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"type";return Wt(e)&&e[r]===t},matches(e,t){for(var r in t)if("children"!==r&&e[r]!==t[r])return!1;return!0}},Ut=["text"],Ht=["text"];function Zt(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function qt(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Zt(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Zt(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var zt=new WeakMap,Gt={above(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{voids:r=!1,mode:n="lowest",at:o=e.selection,match:i}=t;if(o){var a=Gt.path(e,o),s="lowest"===n;for(var[l,c]of Gt.levels(e,{at:a,voids:r,match:i,reverse:s}))if(!hr.isText(l)&&!rr.equals(a,c))return[l,c]}},addMark(e,t,r){e.addMark(t,r)},after(e,t){var r,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o={anchor:Gt.point(e,t,{edge:"end"}),focus:Gt.end(e,[])},{distance:i=1}=n,a=0;for(var s of Gt.positions(e,qt(qt({},n),{},{at:o}))){if(a>i)break;0!==a&&(r=s),a++}return r},before(e,t){var r,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o={anchor:Gt.start(e,[]),focus:Gt.point(e,t,{edge:"start"})},{distance:i=1}=n,a=0;for(var s of Gt.positions(e,qt(qt({},n),{},{at:o,reverse:!0}))){if(a>i)break;0!==a&&(r=s),a++}return r},deleteBackward(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{unit:r="character"}=t;e.deleteBackward(r)},deleteForward(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{unit:r="character"}=t;e.deleteForward(r)},deleteFragment(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{direction:r="forward"}=t;e.deleteFragment(r)},edges:(e,t)=>[Gt.start(e,t),Gt.end(e,t)],end:(e,t)=>Gt.point(e,t,{edge:"end"}),first(e,t){var r=Gt.path(e,t,{edge:"start"});return Gt.node(e,r)},fragment(e,t){var r=Gt.range(e,t);return Xt.fragment(e,r)},hasBlocks:(e,t)=>t.children.some((t=>Gt.isBlock(e,t))),hasInlines:(e,t)=>t.children.some((t=>hr.isText(t)||Gt.isInline(e,t))),hasTexts:(e,t)=>t.children.every((e=>hr.isText(e))),insertBreak(e){e.insertBreak()},insertFragment(e,t){e.insertFragment(t)},insertNode(e,t){e.insertNode(t)},insertText(e,t){e.insertText(t)},isBlock:(e,t)=>Vt.isElement(t)&&!e.isInline(t),isEditor(e){if(!ne(e))return!1;var t=zt.get(e);if(void 0!==t)return t;var r="function"==typeof e.addMark&&"function"==typeof e.apply&&"function"==typeof e.deleteBackward&&"function"==typeof e.deleteForward&&"function"==typeof e.deleteFragment&&"function"==typeof e.insertBreak&&"function"==typeof e.insertFragment&&"function"==typeof e.insertNode&&"function"==typeof e.insertText&&"function"==typeof e.isInline&&"function"==typeof e.isVoid&&"function"==typeof e.normalizeNode&&"function"==typeof e.onChange&&"function"==typeof e.removeMark&&(null===e.marks||ne(e.marks))&&(null===e.selection||ur.isRange(e.selection))&&Xt.isNodeList(e.children)&&tr.isOperationList(e.operations);return zt.set(e,r),r},isEnd(e,t,r){var n=Gt.end(e,r);return ar.equals(t,n)},isEdge:(e,t,r)=>Gt.isStart(e,t,r)||Gt.isEnd(e,t,r),isEmpty(e,t){var{children:r}=t,[n]=r;return 0===r.length||1===r.length&&hr.isText(n)&&""===n.text&&!e.isVoid(t)},isInline:(e,t)=>Vt.isElement(t)&&e.isInline(t),isNormalizing(e){var t=at.get(e);return void 0===t||t},isStart(e,t,r){if(0!==t.offset)return!1;var n=Gt.start(e,r);return ar.equals(t,n)},isVoid:(e,t)=>Vt.isElement(t)&&e.isVoid(t),last(e,t){var r=Gt.path(e,t,{edge:"end"});return Gt.node(e,r)},leaf(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=Gt.path(e,t,r);return[Xt.leaf(e,n),n]},*levels(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:r=e.selection,reverse:n=!1,voids:o=!1}=t,{match:i}=t;if(null==i&&(i=()=>!0),r){var a=[],s=Gt.path(e,r);for(var[l,c]of Xt.levels(e,s))if(i(l,c)&&(a.push([l,c]),!o&&Gt.isVoid(e,l)))break;n&&a.reverse(),yield*a}},marks(e){var{marks:t,selection:r}=e;if(!r)return null;if(t)return t;if(ur.isExpanded(r)){var[n]=Gt.nodes(e,{match:hr.isText});if(n){var[o]=n;return mt(o,Ut)}return{}}var{anchor:i}=r,{path:a}=i,[s]=Gt.leaf(e,a);if(0===i.offset){var l=Gt.previous(e,{at:a,match:hr.isText}),c=Gt.above(e,{match:t=>Gt.isBlock(e,t)});if(l&&c){var[u,d]=l,[,m]=c;rr.isAncestor(m,d)&&(s=u)}}return mt(s,Ht)},next(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{mode:r="lowest",voids:n=!1}=t,{match:o,at:i=e.selection}=t;if(i){var a=Gt.after(e,i,{voids:n});if(a){var[,s]=Gt.last(e,[]),l=[a.path,s];if(rr.isPath(i)&&0===i.length)throw new Error("Cannot get the next node from the root node!");if(null==o)if(rr.isPath(i)){var[c]=Gt.parent(e,i);o=e=>c.children.includes(e)}else o=()=>!0;var[u]=Gt.nodes(e,{at:l,match:o,mode:r,voids:n});return u}}},node(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=Gt.path(e,t,r);return[Xt.get(e,n),n]},*nodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:r=e.selection,mode:n="all",universal:o=!1,reverse:i=!1,voids:a=!1}=t,{match:s}=t;if(s||(s=()=>!0),r){var l,c;if(Jt.isSpan(r))l=r[0],c=r[1];else{var u=Gt.path(e,r,{edge:"start"}),d=Gt.path(e,r,{edge:"end"});l=i?d:u,c=i?u:d}var m,p=Xt.nodes(e,{reverse:i,from:l,to:c,pass:t=>{var[r]=t;return!a&&Gt.isVoid(e,r)}}),b=[];for(var[g,f]of p){var h=m&&0===rr.compare(f,m[1]);if("highest"!==n||!h)if(s(g,f))if("lowest"===n&&h)m=[g,f];else{var v="lowest"===n?m:[g,f];v&&(o?b.push(v):yield v),m=[g,f]}else if(o&&!h&&hr.isText(g))return}"lowest"===n&&m&&(o?b.push(m):yield m),o&&(yield*b)}},normalize(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{force:r=!1}=t,n=e=>nt.get(e)||[],o=e=>{var t=n(e).pop(),r=t.join(",");return(e=>ot.get(e)||new Set)(e).delete(r),t};if(Gt.isNormalizing(e)){if(r){var i=Array.from(Xt.nodes(e),(e=>{var[,t]=e;return t})),a=new Set(i.map((e=>e.join(","))));nt.set(e,i),ot.set(e,a)}0!==n(e).length&&Gt.withoutNormalizing(e,(()=>{for(var t of n(e))if(Xt.has(e,t)){var r=Gt.node(e,t),[i,a]=r;Vt.isElement(i)&&0===i.children.length&&e.normalizeNode(r)}for(var s=42*n(e).length,l=0;0!==n(e).length;){if(l>s)throw new Error("\n            Could not completely normalize the editor after ".concat(s," iterations! This is usually due to incorrect normalization logic that leaves a node in an invalid state.\n          "));var c=o(e);if(Xt.has(e,c)){var u=Gt.node(e,c);e.normalizeNode(u)}l++}}))}},parent(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=Gt.path(e,t,r),o=rr.parent(n);return Gt.node(e,o)},path(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{depth:n,edge:o}=r;if(rr.isPath(t))if("start"===o){var[,i]=Xt.first(e,t);t=i}else if("end"===o){var[,a]=Xt.last(e,t);t=a}return ur.isRange(t)&&(t="start"===o?ur.start(t):"end"===o?ur.end(t):rr.common(t.anchor.path,t.focus.path)),ar.isPoint(t)&&(t=t.path),null!=n&&(t=t.slice(0,n)),t},hasPath:(e,t)=>Xt.has(e,t),pathRef(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:n="forward"}=r,o={current:t,affinity:n,unref(){var{current:t}=o;return Gt.pathRefs(e).delete(o),o.current=null,t}};return Gt.pathRefs(e).add(o),o},pathRefs(e){var t=st.get(e);return t||(t=new Set,st.set(e,t)),t},point(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{edge:n="start"}=r;if(rr.isPath(t)){var o;if("end"===n){var[,i]=Xt.last(e,t);o=i}else{var[,a]=Xt.first(e,t);o=a}var s=Xt.get(e,o);if(!hr.isText(s))throw new Error("Cannot get the ".concat(n," point in the node at path [").concat(t,"] because it has no ").concat(n," text node."));return{path:o,offset:"end"===n?s.text.length:0}}if(ur.isRange(t)){var[l,c]=ur.edges(t);return"start"===n?l:c}return t},pointRef(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:n="forward"}=r,o={current:t,affinity:n,unref(){var{current:t}=o;return Gt.pointRefs(e).delete(o),o.current=null,t}};return Gt.pointRefs(e).add(o),o},pointRefs(e){var t=lt.get(e);return t||(t=new Set,lt.set(e,t)),t},*positions(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:r=e.selection,unit:n="offset",reverse:o=!1,voids:i=!1}=t;if(r){var a=Gt.range(e,r),[s,l]=ur.edges(a),c=o?l:s,u=!1,d="",m=0,p=0,b=0;for(var[g,f]of Gt.nodes(e,{at:r,reverse:o,voids:i})){if(Vt.isElement(g)){if(!i&&e.isVoid(g)){yield Gt.start(e,f);continue}if(e.isInline(g))continue;if(Gt.hasInlines(e,g)){var h=rr.isAncestor(f,l.path)?l:Gt.end(e,f),v=rr.isAncestor(f,s.path)?s:Gt.start(e,f);d=Gt.string(e,{anchor:v,focus:h},{voids:i}),u=!0}}if(hr.isText(g)){var y=rr.equals(f,c.path);for(y?(p=o?c.offset:g.text.length-c.offset,b=c.offset):(p=g.text.length,b=o?p:0),(y||u||"offset"===n)&&(yield{path:f,offset:b},u=!1);;){if(0===m){if(""===d)break;m=w(d,n,o),d=vt(d,m,o)[1]}if(b=o?b-m:b+m,(p-=m)<0){m=-p;break}m=0,yield{path:f,offset:b}}}}}function w(e,t,r){return"character"===t?bt(e,r):"word"===t?function(e){for(var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=0,n=!1;e.length>0;){var o=bt(e,t),[i,a]=vt(e,o,t);if(yt(i,a,t))n=!0,r+=o;else{if(n)break;r+=o}e=a}return r}(e,r):"line"===t||"block"===t?e.length:1}},previous(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{mode:r="lowest",voids:n=!1}=t,{match:o,at:i=e.selection}=t;if(i){var a=Gt.before(e,i,{voids:n});if(a){var[,s]=Gt.first(e,[]),l=[a.path,s];if(rr.isPath(i)&&0===i.length)throw new Error("Cannot get the previous node from the root node!");if(null==o)if(rr.isPath(i)){var[c]=Gt.parent(e,i);o=e=>c.children.includes(e)}else o=()=>!0;var[u]=Gt.nodes(e,{reverse:!0,at:l,match:o,mode:r,voids:n});return u}}},range:(e,t,r)=>ur.isRange(t)&&!r?t:{anchor:Gt.start(e,t),focus:Gt.end(e,r||t)},rangeRef(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:n="forward"}=r,o={current:t,affinity:n,unref(){var{current:t}=o;return Gt.rangeRefs(e).delete(o),o.current=null,t}};return Gt.rangeRefs(e).add(o),o},rangeRefs(e){var t=ct.get(e);return t||(t=new Set,ct.set(e,t)),t},removeMark(e,t){e.removeMark(t)},setNormalizing(e,t){at.set(e,t)},start:(e,t)=>Gt.point(e,t,{edge:"start"}),string(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{voids:n=!1}=r,o=Gt.range(e,t),[i,a]=ur.edges(o),s="";for(var[l,c]of Gt.nodes(e,{at:o,match:hr.isText,voids:n})){var u=l.text;rr.equals(c,a.path)&&(u=u.slice(0,a.offset)),rr.equals(c,i.path)&&(u=u.slice(i.offset)),s+=u}return s},unhangRange(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{voids:n=!1}=r,[o,i]=ur.edges(t);if(0!==o.offset||0!==i.offset||ur.isCollapsed(t))return t;var a=Gt.above(e,{at:i,match:t=>Gt.isBlock(e,t)}),s=a?a[1]:[],l={anchor:Gt.start(e,o),focus:i},c=!0;for(var[u,d]of Gt.nodes(e,{at:l,match:hr.isText,reverse:!0,voids:n}))if(c)c=!1;else if(""!==u.text||rr.isBefore(d,s)){i={path:d,offset:u.text.length};break}return{anchor:o,focus:i}},void(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return Gt.above(e,qt(qt({},t),{},{match:t=>Gt.isVoid(e,t)}))},withoutNormalizing(e,t){var r=Gt.isNormalizing(e);Gt.setNormalizing(e,!1);try{t()}finally{Gt.setNormalizing(e,r)}Gt.normalize(e)}},Jt={isSpan:e=>Array.isArray(e)&&2===e.length&&e.every(rr.isPath)},Kt=["children"],Yt=["text"],Qt=new WeakMap,Xt={ancestor(e,t){var r=Xt.get(e,t);if(hr.isText(r))throw new Error("Cannot get the ancestor node at path [".concat(t,"] because it refers to a text node instead: ").concat(r));return r},*ancestors(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(var n of rr.ancestors(t,r)){var o=[Xt.ancestor(e,n),n];yield o}},child(e,t){if(hr.isText(e))throw new Error("Cannot get the child of a text node: ".concat(JSON.stringify(e)));var r=e.children[t];if(null==r)throw new Error("Cannot get child at index `".concat(t,"` in node: ").concat(JSON.stringify(e)));return r},*children(e,t){for(var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{reverse:n=!1}=r,o=Xt.ancestor(e,t),{children:i}=o,a=n?i.length-1:0;n?a>=0:a<i.length;){var s=Xt.child(o,a),l=t.concat(a);yield[s,l],a=n?a-1:a+1}},common(e,t,r){var n=rr.common(t,r);return[Xt.get(e,n),n]},descendant(e,t){var r=Xt.get(e,t);if(Gt.isEditor(r))throw new Error("Cannot get the descendant node at path [".concat(t,"] because it refers to the root editor node instead: ").concat(r));return r},*descendants(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[r,n]of Xt.nodes(e,t))0!==n.length&&(yield[r,n])},*elements(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[r,n]of Xt.nodes(e,t))Vt.isElement(r)&&(yield[r,n])},extractProps:e=>Vt.isAncestor(e)?mt(e,Kt):mt(e,Yt),first(e,t){for(var r=t.slice(),n=Xt.get(e,r);n&&!hr.isText(n)&&0!==n.children.length;)n=n.children[0],r.push(0);return[n,r]},fragment(e,t){if(hr.isText(e))throw new Error("Cannot get a fragment starting from a root text node: ".concat(JSON.stringify(e)));var r=$e({children:e.children},(e=>{var[r,n]=ur.edges(t),o=Xt.nodes(e,{reverse:!0,pass:e=>{var[,r]=e;return!ur.includes(t,r)}});for(var[,i]of o){if(!ur.includes(t,i)){var a=Xt.parent(e,i),s=i[i.length-1];a.children.splice(s,1)}if(rr.equals(i,n.path)){var l=Xt.leaf(e,i);l.text=l.text.slice(0,n.offset)}if(rr.equals(i,r.path)){var c=Xt.leaf(e,i);c.text=c.text.slice(r.offset)}}Gt.isEditor(e)&&(e.selection=null)}));return r.children},get(e,t){for(var r=e,n=0;n<t.length;n++){var o=t[n];if(hr.isText(r)||!r.children[o])throw new Error("Cannot find a descendant at path [".concat(t,"] in node: ").concat(JSON.stringify(e)));r=r.children[o]}return r},has(e,t){for(var r=e,n=0;n<t.length;n++){var o=t[n];if(hr.isText(r)||!r.children[o])return!1;r=r.children[o]}return!0},isNode:e=>hr.isText(e)||Vt.isElement(e)||Gt.isEditor(e),isNodeList(e){if(!Array.isArray(e))return!1;var t=Qt.get(e);if(void 0!==t)return t;var r=e.every((e=>Xt.isNode(e)));return Qt.set(e,r),r},last(e,t){for(var r=t.slice(),n=Xt.get(e,r);n&&!hr.isText(n)&&0!==n.children.length;){var o=n.children.length-1;n=n.children[o],r.push(o)}return[n,r]},leaf(e,t){var r=Xt.get(e,t);if(!hr.isText(r))throw new Error("Cannot get the leaf node at path [".concat(t,"] because it refers to a non-leaf node: ").concat(r));return r},*levels(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(var n of rr.levels(t,r)){var o=Xt.get(e,n);yield[o,n]}},matches:(e,t)=>Vt.isElement(e)&&Vt.isElementProps(t)&&Vt.matches(e,t)||hr.isText(e)&&hr.isTextProps(t)&&hr.matches(e,t),*nodes(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{pass:r,reverse:n=!1}=t,{from:o=[],to:i}=t,a=new Set,s=[],l=e;!i||!(n?rr.isBefore(s,i):rr.isAfter(s,i));)if(a.has(l)||(yield[l,s]),a.has(l)||hr.isText(l)||0===l.children.length||null!=r&&!1!==r([l,s])){if(0===s.length)break;if(!n){var c=rr.next(s);if(Xt.has(e,c)){s=c,l=Xt.get(e,s);continue}}n&&0!==s[s.length-1]?(s=rr.previous(s),l=Xt.get(e,s)):(s=rr.parent(s),l=Xt.get(e,s),a.add(l))}else{a.add(l);var u=n?l.children.length-1:0;rr.isAncestor(s,o)&&(u=o[s.length]),s=s.concat(u),l=Xt.get(e,s)}},parent(e,t){var r=rr.parent(t),n=Xt.get(e,r);if(hr.isText(n))throw new Error("Cannot get the parent of path [".concat(t,"] because it does not exist in the root."));return n},string:e=>hr.isText(e)?e.text:e.children.map(Xt.string).join(""),*texts(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[r,n]of Xt.nodes(e,t))hr.isText(r)&&(yield[r,n])}};function $t(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function er(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?$t(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):$t(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var tr={isNodeOperation:e=>tr.isOperation(e)&&e.type.endsWith("_node"),isOperation(e){if(!ne(e))return!1;switch(e.type){case"insert_node":case"remove_node":return rr.isPath(e.path)&&Xt.isNode(e.node);case"insert_text":case"remove_text":return"number"==typeof e.offset&&"string"==typeof e.text&&rr.isPath(e.path);case"merge_node":return"number"==typeof e.position&&rr.isPath(e.path)&&ne(e.properties);case"move_node":return rr.isPath(e.path)&&rr.isPath(e.newPath);case"set_node":return rr.isPath(e.path)&&ne(e.properties)&&ne(e.newProperties);case"set_selection":return null===e.properties&&ur.isRange(e.newProperties)||null===e.newProperties&&ur.isRange(e.properties)||ne(e.properties)&&ne(e.newProperties);case"split_node":return rr.isPath(e.path)&&"number"==typeof e.position&&ne(e.properties);default:return!1}},isOperationList:e=>Array.isArray(e)&&e.every((e=>tr.isOperation(e))),isSelectionOperation:e=>tr.isOperation(e)&&e.type.endsWith("_selection"),isTextOperation:e=>tr.isOperation(e)&&e.type.endsWith("_text"),inverse(e){switch(e.type){case"insert_node":return er(er({},e),{},{type:"remove_node"});case"insert_text":return er(er({},e),{},{type:"remove_text"});case"merge_node":return er(er({},e),{},{type:"split_node",path:rr.previous(e.path)});case"move_node":var{newPath:t,path:r}=e;if(rr.equals(t,r))return e;if(rr.isSibling(r,t))return er(er({},e),{},{path:t,newPath:r});var n=rr.transform(r,e),o=rr.transform(rr.next(r),e);return er(er({},e),{},{path:n,newPath:o});case"remove_node":return er(er({},e),{},{type:"insert_node"});case"remove_text":return er(er({},e),{},{type:"insert_text"});case"set_node":var{properties:i,newProperties:a}=e;return er(er({},e),{},{properties:a,newProperties:i});case"set_selection":var{properties:s,newProperties:l}=e;return er(er({},e),{},null==s?{properties:l,newProperties:null}:null==l?{properties:null,newProperties:s}:{properties:l,newProperties:s});case"split_node":return er(er({},e),{},{type:"merge_node",path:rr.next(e.path)})}}},rr={ancestors(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:r=!1}=t,n=rr.levels(e,t);return r?n.slice(1):n.slice(0,-1)},common(e,t){for(var r=[],n=0;n<e.length&&n<t.length;n++){var o=e[n];if(o!==t[n])break;r.push(o)}return r},compare(e,t){for(var r=Math.min(e.length,t.length),n=0;n<r;n++){if(e[n]<t[n])return-1;if(e[n]>t[n])return 1}return 0},endsAfter(e,t){var r=e.length-1,n=e.slice(0,r),o=t.slice(0,r),i=e[r],a=t[r];return rr.equals(n,o)&&i>a},endsAt(e,t){var r=e.length,n=e.slice(0,r),o=t.slice(0,r);return rr.equals(n,o)},endsBefore(e,t){var r=e.length-1,n=e.slice(0,r),o=t.slice(0,r),i=e[r],a=t[r];return rr.equals(n,o)&&i<a},equals:(e,t)=>e.length===t.length&&e.every(((e,r)=>e===t[r])),hasPrevious:e=>e[e.length-1]>0,isAfter:(e,t)=>1===rr.compare(e,t),isAncestor:(e,t)=>e.length<t.length&&0===rr.compare(e,t),isBefore:(e,t)=>-1===rr.compare(e,t),isChild:(e,t)=>e.length===t.length+1&&0===rr.compare(e,t),isCommon:(e,t)=>e.length<=t.length&&0===rr.compare(e,t),isDescendant:(e,t)=>e.length>t.length&&0===rr.compare(e,t),isParent:(e,t)=>e.length+1===t.length&&0===rr.compare(e,t),isPath:e=>Array.isArray(e)&&(0===e.length||"number"==typeof e[0]),isSibling(e,t){if(e.length!==t.length)return!1;var r=e.slice(0,-1),n=t.slice(0,-1);return e[e.length-1]!==t[t.length-1]&&rr.equals(r,n)},levels(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:r=!1}=t,n=[],o=0;o<=e.length;o++)n.push(e.slice(0,o));return r&&n.reverse(),n},next(e){if(0===e.length)throw new Error("Cannot get the next path of a root path [".concat(e,"], because it has no next index."));var t=e[e.length-1];return e.slice(0,-1).concat(t+1)},operationCanTransformPath(e){switch(e.type){case"insert_node":case"remove_node":case"merge_node":case"split_node":case"move_node":return!0;default:return!1}},parent(e){if(0===e.length)throw new Error("Cannot get the parent path of the root path [".concat(e,"]."));return e.slice(0,-1)},previous(e){if(0===e.length)throw new Error("Cannot get the previous path of a root path [".concat(e,"], because it has no previous index."));var t=e[e.length-1];if(t<=0)throw new Error("Cannot get the previous path of a first child path [".concat(e,"] because it would result in a negative index."));return e.slice(0,-1).concat(t-1)},relative(e,t){if(!rr.isAncestor(t,e)&&!rr.equals(e,t))throw new Error("Cannot get the relative path of [".concat(e,"] inside ancestor [").concat(t,"], because it is not above or equal to the path."));return e.slice(t.length)},transform(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return $e(e,(n=>{var{affinity:o="forward"}=r;if(e&&0!==(null==e?void 0:e.length)){if(null===n)return null;switch(t.type){case"insert_node":var{path:i}=t;(rr.equals(i,n)||rr.endsBefore(i,n)||rr.isAncestor(i,n))&&(n[i.length-1]+=1);break;case"remove_node":var{path:a}=t;if(rr.equals(a,n)||rr.isAncestor(a,n))return null;rr.endsBefore(a,n)&&(n[a.length-1]-=1);break;case"merge_node":var{path:s,position:l}=t;rr.equals(s,n)||rr.endsBefore(s,n)?n[s.length-1]-=1:rr.isAncestor(s,n)&&(n[s.length-1]-=1,n[s.length]+=l);break;case"split_node":var{path:c,position:u}=t;if(rr.equals(c,n)){if("forward"===o)n[n.length-1]+=1;else if("backward"!==o)return null}else rr.endsBefore(c,n)?n[c.length-1]+=1:rr.isAncestor(c,n)&&e[c.length]>=u&&(n[c.length-1]+=1,n[c.length]-=u);break;case"move_node":var{path:d,newPath:m}=t;if(rr.equals(d,m))return;if(rr.isAncestor(d,n)||rr.equals(d,n)){var p=m.slice();return rr.endsBefore(d,m)&&d.length<m.length&&(p[d.length-1]-=1),p.concat(n.slice(d.length))}rr.isSibling(d,m)&&(rr.isAncestor(m,n)||rr.equals(m,n))?rr.endsBefore(d,n)?n[d.length-1]-=1:n[d.length-1]+=1:rr.endsBefore(m,n)||rr.equals(m,n)||rr.isAncestor(m,n)?(rr.endsBefore(d,n)&&(n[d.length-1]-=1),n[m.length-1]+=1):rr.endsBefore(d,n)&&(rr.equals(m,n)&&(n[m.length-1]+=1),n[d.length-1]-=1)}}}))}},nr={transform(e,t){var{current:r,affinity:n}=e;if(null!=r){var o=rr.transform(r,t,{affinity:n});e.current=o,null==o&&e.unref()}}};function or(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function ir(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?or(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):or(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var ar={compare(e,t){var r=rr.compare(e.path,t.path);return 0===r?e.offset<t.offset?-1:e.offset>t.offset?1:0:r},isAfter:(e,t)=>1===ar.compare(e,t),isBefore:(e,t)=>-1===ar.compare(e,t),equals:(e,t)=>e.offset===t.offset&&rr.equals(e.path,t.path),isPoint:e=>ne(e)&&"number"==typeof e.offset&&rr.isPath(e.path),transform(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return $e(e,(e=>{if(null===e)return null;var{affinity:n="forward"}=r,{path:o,offset:i}=e;switch(t.type){case"insert_node":case"move_node":e.path=rr.transform(o,t,r);break;case"insert_text":rr.equals(t.path,o)&&t.offset<=i&&(e.offset+=t.text.length);break;case"merge_node":rr.equals(t.path,o)&&(e.offset+=t.position),e.path=rr.transform(o,t,r);break;case"remove_text":rr.equals(t.path,o)&&t.offset<=i&&(e.offset-=Math.min(i-t.offset,t.text.length));break;case"remove_node":if(rr.equals(t.path,o)||rr.isAncestor(t.path,o))return null;e.path=rr.transform(o,t,r);break;case"split_node":if(rr.equals(t.path,o)){if(t.position===i&&null==n)return null;(t.position<i||t.position===i&&"forward"===n)&&(e.offset-=t.position,e.path=rr.transform(o,t,ir(ir({},r),{},{affinity:"forward"})))}else e.path=rr.transform(o,t,r)}}))}},sr={transform(e,t){var{current:r,affinity:n}=e;if(null!=r){var o=ar.transform(r,t,{affinity:n});e.current=o,null==o&&e.unref()}}},lr=["anchor","focus"];function cr(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}var ur={edges(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:r=!1}=t,{anchor:n,focus:o}=e;return ur.isBackward(e)===r?[n,o]:[o,n]},end(e){var[,t]=ur.edges(e);return t},equals:(e,t)=>ar.equals(e.anchor,t.anchor)&&ar.equals(e.focus,t.focus),includes(e,t){if(ur.isRange(t)){if(ur.includes(e,t.anchor)||ur.includes(e,t.focus))return!0;var[r,n]=ur.edges(e),[o,i]=ur.edges(t);return ar.isBefore(r,o)&&ar.isAfter(n,i)}var[a,s]=ur.edges(e),l=!1,c=!1;return ar.isPoint(t)?(l=ar.compare(t,a)>=0,c=ar.compare(t,s)<=0):(l=rr.compare(t,a.path)>=0,c=rr.compare(t,s.path)<=0),l&&c},intersection(e,t){var r=mt(e,lr),[n,o]=ur.edges(e),[i,a]=ur.edges(t),s=ar.isBefore(n,i)?i:n,l=ar.isBefore(o,a)?o:a;return ar.isBefore(l,s)?null:function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?cr(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):cr(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({anchor:s,focus:l},r)},isBackward(e){var{anchor:t,focus:r}=e;return ar.isAfter(t,r)},isCollapsed(e){var{anchor:t,focus:r}=e;return ar.equals(t,r)},isExpanded:e=>!ur.isCollapsed(e),isForward:e=>!ur.isBackward(e),isRange:e=>ne(e)&&ar.isPoint(e.anchor)&&ar.isPoint(e.focus),*points(e){yield[e.anchor,"anchor"],yield[e.focus,"focus"]},start(e){var[t]=ur.edges(e);return t},transform(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return $e(e,(e=>{if(null===e)return null;var n,o,{affinity:i="inward"}=r;if("inward"===i){var a=ur.isCollapsed(e);ur.isForward(e)?(n="forward",o=a?n:"backward"):(n="backward",o=a?n:"forward")}else"outward"===i?ur.isForward(e)?(n="backward",o="forward"):(n="forward",o="backward"):(n=i,o=i);var s=ar.transform(e.anchor,t,{affinity:n}),l=ar.transform(e.focus,t,{affinity:o});if(!s||!l)return null;e.anchor=s,e.focus=l}))}},dr={transform(e,t){var{current:r,affinity:n}=e;if(null!=r){var o=ur.transform(r,t,{affinity:n});e.current=o,null==o&&e.unref()}}},mr=(e,t)=>{for(var r in e){var n=e[r],o=t[r];if(ne(n)&&ne(o)){if(!mr(n,o))return!1}else if(Array.isArray(n)&&Array.isArray(o)){if(n.length!==o.length)return!1;for(var i=0;i<n.length;i++)if(n[i]!==o[i])return!1}else if(n!==o)return!1}for(var a in t)if(void 0===e[a]&&void 0!==t[a])return!1;return!0},pr=["text"],br=["anchor","focus"];function gr(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function fr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?gr(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):gr(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var hr={equals(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{loose:n=!1}=r;function o(e){return mt(e,pr)}return mr(n?o(e):e,n?o(t):t)},isText:e=>ne(e)&&"string"==typeof e.text,isTextList:e=>Array.isArray(e)&&e.every((e=>hr.isText(e))),isTextProps:e=>void 0!==e.text,matches(e,t){for(var r in t)if("text"!==r&&(!e.hasOwnProperty(r)||e[r]!==t[r]))return!1;return!0},decorations(e,t){var r=[fr({},e)];for(var n of t){var o=mt(n,br),[i,a]=ur.edges(n),s=[],l=0;for(var c of r){var{length:u}=c.text,d=l;if(l+=u,i.offset<=d&&a.offset>=l)Object.assign(c,o),s.push(c);else if(i.offset!==a.offset&&(i.offset===l||a.offset===d)||i.offset>l||a.offset<d||a.offset===d&&0!==d)s.push(c);else{var m=c,p=void 0,b=void 0;if(a.offset<l){var g=a.offset-d;b=fr(fr({},m),{},{text:m.text.slice(g)}),m=fr(fr({},m),{},{text:m.text.slice(0,g)})}if(i.offset>d){var f=i.offset-d;p=fr(fr({},m),{},{text:m.text.slice(0,f)}),m=fr(fr({},m),{},{text:m.text.slice(f)})}Object.assign(m,o),p&&s.push(p),s.push(m),b&&s.push(b)}}r=s}return r}};function vr(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function yr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?vr(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):vr(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var wr={transform(e,t){e.children=et(e.children);var r=e.selection&&et(e.selection);try{r=((e,t,r)=>{switch(r.type){case"insert_node":var{path:n,node:o}=r,i=Xt.parent(e,n),a=n[n.length-1];if(a>i.children.length)throw new Error('Cannot apply an "insert_node" operation at path ['.concat(n,"] because the destination is past the end of the node."));if(i.children.splice(a,0,o),t)for(var[s,l]of ur.points(t))t[l]=ar.transform(s,r);break;case"insert_text":var{path:c,offset:u,text:d}=r;if(0===d.length)break;var m=Xt.leaf(e,c),p=m.text.slice(0,u),b=m.text.slice(u);if(m.text=p+d+b,t)for(var[g,f]of ur.points(t))t[f]=ar.transform(g,r);break;case"merge_node":var{path:h}=r,v=Xt.get(e,h),y=rr.previous(h),w=Xt.get(e,y),A=Xt.parent(e,h),x=h[h.length-1];if(hr.isText(v)&&hr.isText(w))w.text+=v.text;else{if(hr.isText(v)||hr.isText(w))throw new Error('Cannot apply a "merge_node" operation at path ['.concat(h,"] to nodes of different interfaces: ").concat(v," ").concat(w));w.children.push(...v.children)}if(A.children.splice(x,1),t)for(var[k,C]of ur.points(t))t[C]=ar.transform(k,r);break;case"move_node":var{path:D,newPath:E}=r;if(rr.isAncestor(D,E))throw new Error("Cannot move a path [".concat(D,"] to new path [").concat(E,"] because the destination is inside itself."));var S=Xt.get(e,D),B=Xt.parent(e,D),F=D[D.length-1];B.children.splice(F,1);var T=rr.transform(D,r),O=Xt.get(e,rr.parent(T)),I=T[T.length-1];if(O.children.splice(I,0,S),t)for(var[_,R]of ur.points(t))t[R]=ar.transform(_,r);break;case"remove_node":var{path:N}=r,P=N[N.length-1];if(Xt.parent(e,N).children.splice(P,1),t)for(var[L,M]of ur.points(t)){var j=ar.transform(L,r);if(null!=t&&null!=j)t[M]=j;else{var W=void 0,V=void 0;for(var[U,H]of Xt.texts(e)){if(-1!==rr.compare(H,N)){V=[U,H];break}W=[U,H]}var Z=!1;W&&V&&(Z=rr.equals(V[1],N)?!rr.hasPrevious(V[1]):rr.common(W[1],N).length<rr.common(V[1],N).length),W&&!Z?(L.path=W[1],L.offset=W[0].text.length):V?(L.path=V[1],L.offset=0):t=null}}break;case"remove_text":var{path:q,offset:z,text:G}=r;if(0===G.length)break;var J=Xt.leaf(e,q),K=J.text.slice(0,z),Y=J.text.slice(z+G.length);if(J.text=K+Y,t)for(var[Q,X]of ur.points(t))t[X]=ar.transform(Q,r);break;case"set_node":var{path:$,properties:ee,newProperties:te}=r;if(0===$.length)throw new Error("Cannot set properties on the root node!");var re=Xt.get(e,$);for(var ne in te){if("children"===ne||"text"===ne)throw new Error('Cannot set the "'.concat(ne,'" property of nodes!'));var oe=te[ne];null==oe?delete re[ne]:re[ne]=oe}for(var ie in ee)te.hasOwnProperty(ie)||delete re[ie];break;case"set_selection":var{newProperties:ae}=r;if(null==ae)t=ae;else{if(null==t){if(!ur.isRange(ae))throw new Error('Cannot apply an incomplete "set_selection" operation properties '.concat(JSON.stringify(ae)," when there is no current selection."));t=yr({},ae)}for(var se in ae){var le=ae[se];if(null==le){if("anchor"===se||"focus"===se)throw new Error('Cannot remove the "'.concat(se,'" selection property'));delete t[se]}else t[se]=le}}break;case"split_node":var{path:ce,position:ue,properties:de}=r;if(0===ce.length)throw new Error('Cannot apply a "split_node" operation at path ['.concat(ce,"] because the root node cannot be split."));var me,pe=Xt.get(e,ce),be=Xt.parent(e,ce),ge=ce[ce.length-1];if(hr.isText(pe)){var fe=pe.text.slice(0,ue),he=pe.text.slice(ue);pe.text=fe,me=yr(yr({},de),{},{text:he})}else{var ve=pe.children.slice(0,ue),ye=pe.children.slice(ue);pe.children=ve,me=yr(yr({},de),{},{children:ye})}if(be.children.splice(ge+1,0,me),t)for(var[we,Ae]of ur.points(t))t[Ae]=ar.transform(we,r)}return t})(e,r,t)}finally{e.children=tt(e.children),e.selection=r?ie(r)?tt(r):r:null}}},Ar=["text"],xr=["children"];function kr(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Cr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?kr(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):kr(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Dr={insertNodes(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Gt.withoutNormalizing(e,(()=>{var{hanging:n=!1,voids:o=!1,mode:i="lowest"}=r,{at:a,match:s,select:l}=r;if(Xt.isNode(t)&&(t=[t]),0!==t.length){var[c]=t;if(a||(a=e.selection?e.selection:e.children.length>0?Gt.end(e,[]):[0],l=!0),null==l&&(l=!1),ur.isRange(a))if(n||(a=Gt.unhangRange(e,a)),ur.isCollapsed(a))a=a.anchor;else{var[,u]=ur.edges(a),d=Gt.pointRef(e,u);Pr.delete(e,{at:a}),a=d.unref()}if(ar.isPoint(a)){null==s&&(s=hr.isText(c)?e=>hr.isText(e):e.isInline(c)?t=>hr.isText(t)||Gt.isInline(e,t):t=>Gt.isBlock(e,t));var[m]=Gt.nodes(e,{at:a.path,match:s,mode:i,voids:o});if(!m)return;var[,p]=m,b=Gt.pathRef(e,p),g=Gt.isEnd(e,a,p);Pr.splitNodes(e,{at:a,match:s,mode:i,voids:o});var f=b.unref();a=g?rr.next(f):f}var h=rr.parent(a),v=a[a.length-1];if(o||!Gt.void(e,{at:h})){for(var y of t){var w=h.concat(v);v++,e.apply({type:"insert_node",path:w,node:y}),a=rr.next(a)}if(a=rr.previous(a),l){var A=Gt.end(e,a);A&&Pr.select(e,A)}}}}))},liftNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Gt.withoutNormalizing(e,(()=>{var{at:r=e.selection,mode:n="lowest",voids:o=!1}=t,{match:i}=t;if(null==i&&(i=rr.isPath(r)?Br(e,r):t=>Gt.isBlock(e,t)),r){var a=Gt.nodes(e,{at:r,match:i,mode:n,voids:o}),s=Array.from(a,(t=>{var[,r]=t;return Gt.pathRef(e,r)}));for(var l of s){var c=l.unref();if(c.length<2)throw new Error("Cannot lift node at a path [".concat(c,"] because it has a depth of less than `2`."));var u=Gt.node(e,rr.parent(c)),[d,m]=u,p=c[c.length-1],{length:b}=d.children;if(1===b){var g=rr.next(m);Pr.moveNodes(e,{at:c,to:g,voids:o}),Pr.removeNodes(e,{at:m,voids:o})}else if(0===p)Pr.moveNodes(e,{at:c,to:m,voids:o});else if(p===b-1){var f=rr.next(m);Pr.moveNodes(e,{at:c,to:f,voids:o})}else{var h=rr.next(c),v=rr.next(m);Pr.splitNodes(e,{at:h,voids:o}),Pr.moveNodes(e,{at:c,to:v,voids:o})}}}}))},mergeNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Gt.withoutNormalizing(e,(()=>{var{match:r,at:n=e.selection}=t,{hanging:o=!1,voids:i=!1,mode:a="lowest"}=t;if(n){if(null==r)if(rr.isPath(n)){var[s]=Gt.parent(e,n);r=e=>s.children.includes(e)}else r=t=>Gt.isBlock(e,t);if(!o&&ur.isRange(n)&&(n=Gt.unhangRange(e,n)),ur.isRange(n))if(ur.isCollapsed(n))n=n.anchor;else{var[,l]=ur.edges(n),c=Gt.pointRef(e,l);Pr.delete(e,{at:n}),n=c.unref(),null==t.at&&Pr.select(e,n)}var[u]=Gt.nodes(e,{at:n,match:r,voids:i,mode:a}),d=Gt.previous(e,{at:n,match:r,voids:i,mode:a});if(u&&d){var[m,p]=u,[b,g]=d;if(0!==p.length&&0!==g.length){var f,h,v=rr.next(g),y=rr.common(p,g),w=rr.isSibling(p,g),A=Array.from(Gt.levels(e,{at:p}),(e=>{var[t]=e;return t})).slice(y.length).slice(0,-1),x=Gt.above(e,{at:p,mode:"highest",match:t=>A.includes(t)&&Er(e,t)}),k=x&&Gt.pathRef(e,x[1]);if(hr.isText(m)&&hr.isText(b)){var C=mt(m,Ar);h=b.text.length,f=C}else{if(!Vt.isElement(m)||!Vt.isElement(b))throw new Error("Cannot merge the node at path [".concat(p,"] with the previous sibling because it is not the same kind: ").concat(JSON.stringify(m)," ").concat(JSON.stringify(b)));C=mt(m,xr),h=b.children.length,f=C}w||Pr.moveNodes(e,{at:p,to:v,voids:i}),k&&Pr.removeNodes(e,{at:k.current,voids:i}),Vt.isElement(b)&&Gt.isEmpty(e,b)||hr.isText(b)&&""===b.text&&0!==g[g.length-1]?Pr.removeNodes(e,{at:g,voids:i}):e.apply({type:"merge_node",path:v,position:h,properties:f}),k&&k.unref()}}}}))},moveNodes(e,t){Gt.withoutNormalizing(e,(()=>{var{to:r,at:n=e.selection,mode:o="lowest",voids:i=!1}=t,{match:a}=t;if(n){null==a&&(a=rr.isPath(n)?Br(e,n):t=>Gt.isBlock(e,t));var s=Gt.pathRef(e,r),l=Gt.nodes(e,{at:n,match:a,mode:o,voids:i}),c=Array.from(l,(t=>{var[,r]=t;return Gt.pathRef(e,r)}));for(var u of c){var d=u.unref(),m=s.current;0!==d.length&&e.apply({type:"move_node",path:d,newPath:m}),s.current&&rr.isSibling(m,d)&&rr.isAfter(m,d)&&(s.current=rr.next(s.current))}s.unref()}}))},removeNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Gt.withoutNormalizing(e,(()=>{var{hanging:r=!1,voids:n=!1,mode:o="lowest"}=t,{at:i=e.selection,match:a}=t;if(i){null==a&&(a=rr.isPath(i)?Br(e,i):t=>Gt.isBlock(e,t)),!r&&ur.isRange(i)&&(i=Gt.unhangRange(e,i));var s=Gt.nodes(e,{at:i,match:a,mode:o,voids:n}),l=Array.from(s,(t=>{var[,r]=t;return Gt.pathRef(e,r)}));for(var c of l){var u=c.unref();if(u){var[d]=Gt.node(e,u);e.apply({type:"remove_node",path:u,node:d})}}}}))},setNodes(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Gt.withoutNormalizing(e,(()=>{var{match:n,at:o=e.selection}=r,{hanging:i=!1,mode:a="lowest",split:s=!1,voids:l=!1}=r;if(o){if(null==n&&(n=rr.isPath(o)?Br(e,o):t=>Gt.isBlock(e,t)),!i&&ur.isRange(o)&&(o=Gt.unhangRange(e,o)),s&&ur.isRange(o)){if(ur.isCollapsed(o)&&Gt.leaf(e,o.anchor)[0].text.length>0)return;var c=Gt.rangeRef(e,o,{affinity:"inward"}),[u,d]=ur.edges(o),m="lowest"===a?"lowest":"highest",p=Gt.isEnd(e,d,d.path);Pr.splitNodes(e,{at:d,match:n,mode:m,voids:l,always:!p});var b=Gt.isStart(e,u,u.path);Pr.splitNodes(e,{at:u,match:n,mode:m,voids:l,always:!b}),o=c.unref(),null==r.at&&Pr.select(e,o)}for(var[g,f]of Gt.nodes(e,{at:o,match:n,mode:a,voids:l})){var h={},v={};if(0!==f.length){var y=!1;for(var w in t)"children"!==w&&"text"!==w&&t[w]!==g[w]&&(y=!0,g.hasOwnProperty(w)&&(h[w]=g[w]),null!=t[w]&&(v[w]=t[w]));y&&e.apply({type:"set_node",path:f,properties:h,newProperties:v})}}}}))},splitNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Gt.withoutNormalizing(e,(()=>{var{mode:r="lowest",voids:n=!1}=t,{match:o,at:i=e.selection,height:a=0,always:s=!1}=t;if(null==o&&(o=t=>Gt.isBlock(e,t)),ur.isRange(i)&&(i=Sr(e,i)),rr.isPath(i)){var l=i,c=Gt.point(e,l),[u]=Gt.parent(e,l);o=e=>e===u,a=c.path.length-l.length+1,i=c,s=!0}if(i){var d=Gt.pointRef(e,i,{affinity:"backward"}),[m]=Gt.nodes(e,{at:i,match:o,mode:r,voids:n});if(m){var p=Gt.void(e,{at:i,mode:"highest"});if(!n&&p){var[b,g]=p;if(Vt.isElement(b)&&e.isInline(b)){var f=Gt.after(e,g);if(!f){var h=rr.next(g);Pr.insertNodes(e,{text:""},{at:h,voids:n}),f=Gt.point(e,h)}i=f,s=!0}a=i.path.length-g.length+1,s=!0}var v=Gt.pointRef(e,i),y=i.path.length-a,[,w]=m,A=i.path.slice(0,y),x=0===a?i.offset:i.path[y]+0;for(var[k,C]of Gt.levels(e,{at:A,reverse:!0,voids:n})){var D=!1;if(C.length<w.length||0===C.length||!n&&Gt.isVoid(e,k))break;var E=d.current,S=Gt.isEnd(e,E,C);if(s||!d||!Gt.isEdge(e,E,C)){D=!0;var B=Xt.extractProps(k);e.apply({type:"split_node",path:C,position:x,properties:B})}x=C[C.length-1]+(D||S?1:0)}if(null==t.at){var F=v.current||Gt.end(e,[]);Pr.select(e,F)}d.unref(),v.unref()}}}))},unsetNodes(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Array.isArray(t)||(t=[t]);var n={};for(var o of t)n[o]=null;Pr.setNodes(e,n,r)},unwrapNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Gt.withoutNormalizing(e,(()=>{var{mode:r="lowest",split:n=!1,voids:o=!1}=t,{at:i=e.selection,match:a}=t;if(i){null==a&&(a=rr.isPath(i)?Br(e,i):t=>Gt.isBlock(e,t)),rr.isPath(i)&&(i=Gt.range(e,i));var s=ur.isRange(i)?Gt.rangeRef(e,i):null,l=Gt.nodes(e,{at:i,match:a,mode:r,voids:o}),c=Array.from(l,(t=>{var[,r]=t;return Gt.pathRef(e,r)})).reverse(),u=function(t){var r=t.unref(),[i]=Gt.node(e,r),a=Gt.range(e,r);n&&s&&(a=ur.intersection(s.current,a)),Pr.liftNodes(e,{at:a,match:e=>Vt.isAncestor(i)&&i.children.includes(e),voids:o})};for(var d of c)u(d);s&&s.unref()}}))},wrapNodes(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Gt.withoutNormalizing(e,(()=>{var{mode:n="lowest",split:o=!1,voids:i=!1}=r,{match:a,at:s=e.selection}=r;if(s){if(null==a&&(a=rr.isPath(s)?Br(e,s):e.isInline(t)?t=>Gt.isInline(e,t)||hr.isText(t):t=>Gt.isBlock(e,t)),o&&ur.isRange(s)){var[l,c]=ur.edges(s),u=Gt.rangeRef(e,s,{affinity:"inward"});Pr.splitNodes(e,{at:c,match:a,voids:i}),Pr.splitNodes(e,{at:l,match:a,voids:i}),s=u.unref(),null==r.at&&Pr.select(e,s)}var d=Array.from(Gt.nodes(e,{at:s,match:e.isInline(t)?t=>Gt.isBlock(e,t):e=>Gt.isEditor(e),mode:"lowest",voids:i}));for(var[,m]of d){var p=ur.isRange(s)?ur.intersection(s,Gt.range(e,m)):s;if(p){var b=Array.from(Gt.nodes(e,{at:p,match:a,mode:n,voids:i}));if(b.length>0){var g=function(){var[r]=b,n=b[b.length-1],[,o]=r,[,a]=n;if(0===o.length&&0===a.length)return"continue";var s=rr.equals(o,a)?rr.parent(o):rr.common(o,a),l=Gt.range(e,o,a),c=Gt.node(e,s),[u]=c,d=s.length+1,m=rr.next(a.slice(0,d)),p=Cr(Cr({},t),{},{children:[]});Pr.insertNodes(e,p,{at:m,voids:i}),Pr.moveNodes(e,{at:l,match:e=>Vt.isAncestor(u)&&u.children.includes(e),to:m.concat(0),voids:i})}();if("continue"===g)continue}}}}}))}},Er=(e,t)=>{if(Vt.isElement(t)){var r=t;return!!Gt.isVoid(e,t)||1===r.children.length&&Er(e,r.children[0])}return!Gt.isEditor(t)},Sr=(e,t)=>{if(ur.isCollapsed(t))return t.anchor;var[,r]=ur.edges(t),n=Gt.pointRef(e,r);return Pr.delete(e,{at:t}),n.unref()},Br=(e,t)=>{var[r]=Gt.node(e,t);return e=>e===r};function Fr(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Tr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Fr(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Fr(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Or={collapse(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{edge:r="anchor"}=t,{selection:n}=e;if(n)if("anchor"===r)Pr.select(e,n.anchor);else if("focus"===r)Pr.select(e,n.focus);else if("start"===r){var[o]=ur.edges(n);Pr.select(e,o)}else if("end"===r){var[,i]=ur.edges(n);Pr.select(e,i)}},deselect(e){var{selection:t}=e;t&&e.apply({type:"set_selection",properties:t,newProperties:null})},move(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{selection:r}=e,{distance:n=1,unit:o="character",reverse:i=!1}=t,{edge:a=null}=t;if(r){"start"===a&&(a=ur.isBackward(r)?"focus":"anchor"),"end"===a&&(a=ur.isBackward(r)?"anchor":"focus");var{anchor:s,focus:l}=r,c={distance:n,unit:o},u={};if(null==a||"anchor"===a){var d=i?Gt.before(e,s,c):Gt.after(e,s,c);d&&(u.anchor=d)}if(null==a||"focus"===a){var m=i?Gt.before(e,l,c):Gt.after(e,l,c);m&&(u.focus=m)}Pr.setSelection(e,u)}},select(e,t){var{selection:r}=e;if(t=Gt.range(e,t),r)Pr.setSelection(e,t);else{if(!ur.isRange(t))throw new Error("When setting the selection and the current selection is `null` you must provide at least an `anchor` and `focus`, but you passed: ".concat(JSON.stringify(t)));e.apply({type:"set_selection",properties:r,newProperties:t})}},setPoint(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{selection:n}=e,{edge:o="both"}=r;if(n){"start"===o&&(o=ur.isBackward(n)?"focus":"anchor"),"end"===o&&(o=ur.isBackward(n)?"anchor":"focus");var{anchor:i,focus:a}=n,s="anchor"===o?i:a;Pr.setSelection(e,{["anchor"===o?"anchor":"focus"]:Tr(Tr({},s),t)})}},setSelection(e,t){var{selection:r}=e,n={},o={};if(r){for(var i in t)("anchor"===i&&null!=t.anchor&&!ar.equals(t.anchor,r.anchor)||"focus"===i&&null!=t.focus&&!ar.equals(t.focus,r.focus)||"anchor"!==i&&"focus"!==i&&t[i]!==r[i])&&(n[i]=r[i],o[i]=t[i]);Object.keys(n).length>0&&e.apply({type:"set_selection",properties:n,newProperties:o})}}},Ir={delete(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Gt.withoutNormalizing(e,(()=>{var{reverse:r=!1,unit:n="character",distance:o=1,voids:i=!1}=t,{at:a=e.selection,hanging:s=!1}=t;if(a){if(ur.isRange(a)&&ur.isCollapsed(a)&&(a=a.anchor),ar.isPoint(a)){var l=Gt.void(e,{at:a,mode:"highest"});if(!i&&l){var[,c]=l;a=c}else{var u={unit:n,distance:o};a={anchor:a,focus:r?Gt.before(e,a,u)||Gt.start(e,[]):Gt.after(e,a,u)||Gt.end(e,[])},s=!0}}if(rr.isPath(a))Pr.removeNodes(e,{at:a,voids:i});else if(!ur.isCollapsed(a)){if(!s){var[,d]=ur.edges(a),m=Gt.end(e,[]);ar.equals(d,m)||(a=Gt.unhangRange(e,a,{voids:i}))}var[p,b]=ur.edges(a),g=Gt.above(e,{match:t=>Gt.isBlock(e,t),at:p,voids:i}),f=Gt.above(e,{match:t=>Gt.isBlock(e,t),at:b,voids:i}),h=g&&f&&!rr.equals(g[1],f[1]),v=rr.equals(p.path,b.path),y=i?null:Gt.void(e,{at:p,mode:"highest"}),w=i?null:Gt.void(e,{at:b,mode:"highest"});if(y){var A=Gt.before(e,p);A&&g&&rr.isAncestor(g[1],A.path)&&(p=A)}if(w){var x=Gt.after(e,b);x&&f&&rr.isAncestor(f[1],x.path)&&(b=x)}var k,C=[];for(var D of Gt.nodes(e,{at:a,voids:i})){var[E,S]=D;k&&0===rr.compare(S,k)||(!i&&Gt.isVoid(e,E)||!rr.isCommon(S,p.path)&&!rr.isCommon(S,b.path))&&(C.push(D),k=S)}var B=Array.from(C,(t=>{var[,r]=t;return Gt.pathRef(e,r)})),F=Gt.pointRef(e,p),T=Gt.pointRef(e,b);if(!v&&!y){var O=F.current,[I]=Gt.leaf(e,O),{path:_}=O,{offset:R}=p,N=I.text.slice(R);N.length>0&&e.apply({type:"remove_text",path:_,offset:R,text:N})}for(var P of B){var L=P.unref();Pr.removeNodes(e,{at:L,voids:i})}if(!w){var M=T.current,[j]=Gt.leaf(e,M),{path:W}=M,V=v?p.offset:0,U=j.text.slice(V,b.offset);U.length>0&&e.apply({type:"remove_text",path:W,offset:V,text:U})}!v&&h&&T.current&&F.current&&Pr.mergeNodes(e,{at:T.current,hanging:!0,voids:i});var H=r?F.unref()||T.unref():T.unref()||F.unref();null==t.at&&H&&Pr.select(e,H)}}}))},insertFragment(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Gt.withoutNormalizing(e,(()=>{var{hanging:n=!1,voids:o=!1}=r,{at:i=e.selection}=r;if(t.length&&i){if(ur.isRange(i))if(n||(i=Gt.unhangRange(e,i)),ur.isCollapsed(i))i=i.anchor;else{var[,a]=ur.edges(i);if(!o&&Gt.void(e,{at:a}))return;var s=Gt.pointRef(e,a);Pr.delete(e,{at:i}),i=s.unref()}else rr.isPath(i)&&(i=Gt.start(e,i));if(o||!Gt.void(e,{at:i})){var l=Gt.above(e,{at:i,match:t=>Gt.isInline(e,t),mode:"highest",voids:o});if(l){var[,c]=l;Gt.isEnd(e,i,c)?i=Gt.after(e,c):Gt.isStart(e,i,c)&&(i=Gt.before(e,c))}var u=Gt.above(e,{match:t=>Gt.isBlock(e,t),at:i,voids:o}),[,d]=u,m=Gt.isStart(e,i,d),p=Gt.isEnd(e,i,d),b=m&&p,g=!m||m&&p,f=!p,[,h]=Xt.first({children:t},[]),[,v]=Xt.last({children:t},[]),y=[],w=t=>{var[r,n]=t;return!(0===n.length||!b&&(g&&rr.isAncestor(n,h)&&Vt.isElement(r)&&!e.isVoid(r)&&!e.isInline(r)||f&&rr.isAncestor(n,v)&&Vt.isElement(r)&&!e.isVoid(r)&&!e.isInline(r)))};for(var A of Xt.nodes({children:t},{pass:w}))w(A)&&y.push(A);var x=[],k=[],C=[],D=!0,E=!1;for(var[S]of y)Vt.isElement(S)&&!e.isInline(S)?(D=!1,E=!0,k.push(S)):D?x.push(S):C.push(S);var[B]=Gt.nodes(e,{at:i,match:t=>hr.isText(t)||Gt.isInline(e,t),mode:"highest",voids:o}),[,F]=B,T=Gt.isStart(e,i,F),O=Gt.isEnd(e,i,F),I=Gt.pathRef(e,p?rr.next(d):d),_=Gt.pathRef(e,O?rr.next(F):F),R=Gt.pathRef(e,d);Pr.splitNodes(e,{at:i,match:t=>E?Gt.isBlock(e,t):hr.isText(t)||Gt.isInline(e,t),mode:E?"lowest":"highest",voids:o});var N=Gt.pathRef(e,!T||T&&O?rr.next(F):F);if(Pr.insertNodes(e,x,{at:N.current,match:t=>hr.isText(t)||Gt.isInline(e,t),mode:"highest",voids:o}),b&&k.length&&Pr.delete(e,{at:R.unref(),voids:o}),Pr.insertNodes(e,k,{at:I.current,match:t=>Gt.isBlock(e,t),mode:"lowest",voids:o}),Pr.insertNodes(e,C,{at:_.current,match:t=>hr.isText(t)||Gt.isInline(e,t),mode:"highest",voids:o}),!r.at){var P;P=C.length>0?rr.previous(_.current):k.length>0?rr.previous(I.current):rr.previous(N.current);var L=Gt.end(e,P);Pr.select(e,L)}N.unref(),I.unref(),_.unref()}}}))},insertText(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Gt.withoutNormalizing(e,(()=>{var{voids:n=!1}=r,{at:o=e.selection}=r;if(o){if(rr.isPath(o)&&(o=Gt.range(e,o)),ur.isRange(o))if(ur.isCollapsed(o))o=o.anchor;else{var i=ur.end(o);if(!n&&Gt.void(e,{at:i}))return;var a=ur.start(o),s=Gt.pointRef(e,a);Pr.delete(e,{at:o,voids:n}),o=s.unref(),Pr.setSelection(e,{anchor:o,focus:o})}if(n||!Gt.void(e,{at:o})){var{path:l,offset:c}=o;t.length>0&&e.apply({type:"insert_text",path:l,offset:c,text:t})}}}))}};function Rr(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Nr(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Rr(Object(r),!0).forEach((function(t){rt(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Rr(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Pr=Nr(Nr(Nr(Nr({},wr),Dr),Or),Ir),Lr=r(6907),Mr=r.n(Lr),jr=r(3279),Wr=r.n(jr),Vr=r(3493),Ur=r.n(Vr);function Hr(e){return"object"==typeof e&&null!=e&&1===e.nodeType}function Zr(e,t){return(!t||"hidden"!==e)&&"visible"!==e&&"clip"!==e}function qr(e,t){if(e.clientHeight<e.scrollHeight||e.clientWidth<e.scrollWidth){var r=getComputedStyle(e,null);return Zr(r.overflowY,t)||Zr(r.overflowX,t)||function(e){var t=function(e){if(!e.ownerDocument||!e.ownerDocument.defaultView)return null;try{return e.ownerDocument.defaultView.frameElement}catch(e){return null}}(e);return!!t&&(t.clientHeight<e.scrollHeight||t.clientWidth<e.scrollWidth)}(e)}return!1}function zr(e,t,r,n,o,i,a,s){return i<e&&a>t||i>e&&a<t?0:i<=e&&s<=r||a>=t&&s>=r?i-e-n:a>t&&s<r||i<e&&s>r?a-t+o:0}var Gr=function(e,t){var r=window,n=t.scrollMode,o=t.block,i=t.inline,a=t.boundary,s=t.skipOverflowHiddenElements,l="function"==typeof a?a:function(e){return e!==a};if(!Hr(e))throw new TypeError("Invalid target");for(var c,u,d=document.scrollingElement||document.documentElement,m=[],p=e;Hr(p)&&l(p);){if((p=null==(u=(c=p).parentElement)?c.getRootNode().host||null:u)===d){m.push(p);break}null!=p&&p===document.body&&qr(p)&&!qr(document.documentElement)||null!=p&&qr(p,s)&&m.push(p)}for(var b=r.visualViewport?r.visualViewport.width:innerWidth,g=r.visualViewport?r.visualViewport.height:innerHeight,f=window.scrollX||pageXOffset,h=window.scrollY||pageYOffset,v=e.getBoundingClientRect(),y=v.height,w=v.width,A=v.top,x=v.right,k=v.bottom,C=v.left,D="start"===o||"nearest"===o?A:"end"===o?k:A+y/2,E="center"===i?C+w/2:"end"===i?x:C,S=[],B=0;B<m.length;B++){var F=m[B],T=F.getBoundingClientRect(),O=T.height,I=T.width,_=T.top,R=T.right,N=T.bottom,P=T.left;if("if-needed"===n&&A>=0&&C>=0&&k<=g&&x<=b&&A>=_&&k<=N&&C>=P&&x<=R)return S;var L=getComputedStyle(F),M=parseInt(L.borderLeftWidth,10),j=parseInt(L.borderTopWidth,10),W=parseInt(L.borderRightWidth,10),V=parseInt(L.borderBottomWidth,10),U=0,H=0,Z="offsetWidth"in F?F.offsetWidth-F.clientWidth-M-W:0,q="offsetHeight"in F?F.offsetHeight-F.clientHeight-j-V:0,z="offsetWidth"in F?0===F.offsetWidth?0:I/F.offsetWidth:0,G="offsetHeight"in F?0===F.offsetHeight?0:O/F.offsetHeight:0;if(d===F)U="start"===o?D:"end"===o?D-g:"nearest"===o?zr(h,h+g,g,j,V,h+D,h+D+y,y):D-g/2,H="start"===i?E:"center"===i?E-b/2:"end"===i?E-b:zr(f,f+b,b,M,W,f+E,f+E+w,w),U=Math.max(0,U+h),H=Math.max(0,H+f);else{U="start"===o?D-_-j:"end"===o?D-N+V+q:"nearest"===o?zr(_,N,O,j,V+q,D,D+y,y):D-(_+O/2)+q/2,H="start"===i?E-P-M:"center"===i?E-(P+I/2)+Z/2:"end"===i?E-R+W+Z:zr(P,R,I,M,W+Z,E,E+w,w);var J=F.scrollLeft,K=F.scrollTop;D+=K-(U=Math.max(0,Math.min(K+U/G,F.scrollHeight-O/G+q))),E+=J-(H=Math.max(0,Math.min(J+H/z,F.scrollWidth-I/z+Z)))}S.push({el:F,top:U,left:H})}return S};function Jr(e){return e===Object(e)&&0!==Object.keys(e).length}const Kr=function(e,t){var r=e.isConnected||e.ownerDocument.documentElement.contains(e);if(Jr(t)&&"function"==typeof t.behavior)return t.behavior(r?Gr(e,t):[]);if(r){var n=function(e){return!1===e?{block:"end",inline:"nearest"}:Jr(e)?e:{block:"start",inline:"nearest"}}(t);return function(e,t){void 0===t&&(t="auto");var r="scrollBehavior"in document.body.style;e.forEach((function(e){var n=e.el,o=e.top,i=e.left;n.scroll&&r?n.scroll({top:o,left:i,behavior:t}):(n.scrollTop=o,n.scrollLeft=i)}))}(Gr(e,n),n.behavior)}};var Yr=r(8156),Qr=r(1533),Xr=r.n(Qr);function $r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function en(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var tn="undefined"!=typeof navigator&&"undefined"!=typeof window&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream,rn="undefined"!=typeof navigator&&/Mac OS X/.test(navigator.userAgent),nn="undefined"!=typeof navigator&&/Android/.test(navigator.userAgent),on="undefined"!=typeof navigator&&/^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent),an="undefined"!=typeof navigator&&/Version\/[\d\.]+.*Safari/.test(navigator.userAgent),sn="undefined"!=typeof navigator&&/Edge?\/(?:[0-6][0-9]|[0-7][0-8])/i.test(navigator.userAgent),ln="undefined"!=typeof navigator&&/Chrome/i.test(navigator.userAgent),cn="undefined"!=typeof navigator&&/Chrome?\/(?:[0-7][0-5]|[0-6][0-9])/i.test(navigator.userAgent),un="undefined"!=typeof navigator&&/^(?!.*Seamonkey)(?=.*Firefox\/(?:[0-7][0-9]|[0-8][0-6])).*/i.test(navigator.userAgent),dn="undefined"!=typeof navigator&&/.*QQBrowser/.test(navigator.userAgent),mn="undefined"!=typeof navigator&&/.*UCBrowser/.test(navigator.userAgent),pn="undefined"!=typeof navigator&&/.*Wechat/.test(navigator.userAgent),bn=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),gn=!cn&&!sn&&"undefined"!=typeof globalThis&&globalThis.InputEvent&&"function"==typeof globalThis.InputEvent.prototype.getTargetRanges,fn=bn?o.useLayoutEffect:o.useEffect,hn=e=>{var{isLast:t,leaf:r,parent:n,text:o}=e,a=Yn(),s=Mo.findPath(a,o),l=rr.parent(s);return a.isVoid(n)?i().createElement(yn,{length:Xt.string(n).length}):""!==r.text||n.children[n.children.length-1]!==o||a.isInline(n)||""!==Gt.string(a,l)?""===r.text?i().createElement(yn,null):t&&"\n"===r.text.slice(-1)?i().createElement(vn,{isTrailing:!0,text:r.text}):i().createElement(vn,{text:r.text}):i().createElement(yn,{isLineBreak:!0})},vn=e=>{var{text:t,isTrailing:r=!1}=e,n=(0,o.useRef)(null),a=()=>"".concat(null!=t?t:"").concat(r?"\n":"");return fn((()=>{var e=a();n.current&&n.current.textContent!==e&&(n.current.textContent=e)})),n.current?i().createElement("span",{"data-slate-string":!0,ref:n}):i().createElement("span",{"data-slate-string":!0,ref:n},a())},yn=e=>{var{length:t=0,isLineBreak:r=!1}=e;return i().createElement("span",{"data-slate-zero-width":r?"n":"z","data-slate-length":t},"\ufeff",r?i().createElement("br",null):null)},wn=new WeakMap,An=new WeakMap,xn=new WeakMap,kn=new WeakMap,Cn=new WeakMap,Dn=new WeakMap,En=new WeakMap,Sn=new WeakMap,Bn=new WeakMap,Fn=new WeakMap,Tn=new WeakMap,On=new WeakMap,In=new WeakMap,_n=new WeakMap,Rn=new WeakMap,Nn=Symbol("placeholder"),Pn=e=>{var{leaf:t,isLast:r,text:n,parent:a,renderPlaceholder:s,renderLeaf:l=(e=>i().createElement(Mn,Object.assign({},e)))}=e,c=(0,o.useRef)(null);(0,o.useEffect)((()=>{var e=null==c?void 0:c.current,t=document.querySelector('[data-slate-editor="true"]');if(e&&t)return t.style.minHeight="".concat(e.clientHeight,"px"),()=>{t.style.minHeight="auto"}}),[c,t]);var u=i().createElement(hn,{isLast:r,leaf:t,parent:a,text:n});if(t[Nn]){var d={children:t.placeholder,attributes:{"data-slate-placeholder":!0,style:{position:"absolute",pointerEvents:"none",width:"100%",maxWidth:"100%",display:"block",opacity:"0.333",userSelect:"none",textDecoration:"none"},contentEditable:!1,ref:c}};u=i().createElement(i().Fragment,null,s(d),u)}return l({attributes:{"data-slate-leaf":!0},children:u,leaf:t,text:n})},Ln=i().memo(Pn,((e,t)=>t.parent===e.parent&&t.isLast===e.isLast&&t.renderLeaf===e.renderLeaf&&t.renderPlaceholder===e.renderPlaceholder&&t.text===e.text&&hr.equals(t.leaf,e.leaf)&&t.leaf[Nn]===e.leaf[Nn])),Mn=e=>{var{attributes:t,children:r}=e;return i().createElement("span",Object.assign({},t),r)},jn=["anchor","focus"],Wn=["anchor","focus"],Vn=(e,t)=>Object.keys(e).length===Object.keys(t).length&&Object.keys(e).every((r=>t.hasOwnProperty(r)&&e[r]===t[r])),Un=(e,t)=>{if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++){var n=e[r],o=t[r],i=en(n,jn),a=en(o,Wn);if(!ur.equals(n,o)||n[Nn]!==o[Nn]||!Vn(i,a))return!1}return!0};function Hn(e){var t=(0,o.useRef)(0),r=(0,o.useRef)(null),[,n]=(0,o.useState)(0);return(0,o.useEffect)((()=>(Rn.set(e,(()=>{r.current||(r.current=requestAnimationFrame((()=>{n((e=>e+1)),r.current=null})),t.current++)})),()=>{Rn.delete(e)})),[e]),r.current&&(cancelAnimationFrame(r.current),r.current=null),t.current}var Zn=e=>{for(var{decorations:t,isLast:r,parent:n,renderPlaceholder:a,renderLeaf:s,text:l}=e,c=Yn(),u=(0,o.useRef)(null),d=hr.decorations(l,t),m=Mo.findKey(c,l),p=[],b=0;b<d.length;b++){var g=d[b];p.push(i().createElement(Ln,{isLast:r&&b===d.length-1,key:"".concat(m.id,"-").concat(b),renderPlaceholder:a,leaf:g,text:l,parent:n,renderLeaf:s}))}fn((()=>{var e=Sn.get(c);u.current?(null==e||e.set(m,u.current),Dn.set(l,u.current),Cn.set(u.current,l)):(null==e||e.delete(m),Dn.delete(l))}));var f=nn?Hn(l):void 0;return i().createElement("span",{"data-slate-node":"text",ref:u,key:f},p)},qn=i().memo(Zn,((e,t)=>t.parent===e.parent&&t.isLast===e.isLast&&t.renderLeaf===e.renderLeaf&&t.text===e.text&&Un(t.decorations,e.decorations))),zn=e=>{var{decorations:t,element:r,renderElement:n=(e=>i().createElement(Jn,Object.assign({},e))),renderPlaceholder:a,renderLeaf:s,selection:l}=e,c=(0,o.useRef)(null),u=Yn(),d=so(),m=u.isInline(r),p=Mo.findKey(u,r),b=eo({decorations:t,node:r,renderElement:n,renderPlaceholder:a,renderLeaf:s,selection:l}),g={"data-slate-node":"element",ref:c};if(m&&(g["data-slate-inline"]=!0),!m&&Gt.hasInlines(u,r)){var f=Xt.string(r),h=Mr()(f);"rtl"===h&&(g.dir=h)}if(Gt.isVoid(u,r)){g["data-slate-void"]=!0,!d&&m&&(g.contentEditable=!1);var v=m?"span":"div",[[y]]=Xt.texts(r);b=d?null:i().createElement(v,{"data-slate-spacer":!0,style:{height:"0",color:"transparent",outline:"none",position:"absolute"}},i().createElement(qn,{renderPlaceholder:a,decorations:[],isLast:!1,parent:r,text:y})),wn.set(y,0),An.set(y,r)}fn((()=>{var e=Sn.get(u);c.current?(null==e||e.set(p,c.current),Dn.set(r,c.current),Cn.set(c.current,r)):(null==e||e.delete(p),Dn.delete(r))}));var w=n({attributes:g,children:b,element:r});if(nn){var A=Hn(r);return i().createElement(o.Fragment,{key:A},w)}return w},Gn=i().memo(zn,((e,t)=>e.element===t.element&&e.renderElement===t.renderElement&&e.renderLeaf===t.renderLeaf&&Un(e.decorations,t.decorations)&&(e.selection===t.selection||!!e.selection&&!!t.selection&&ur.equals(e.selection,t.selection)))),Jn=e=>{var{attributes:t,children:r,element:n}=e,o=Yn().isInline(n)?"span":"div";return i().createElement(o,Object.assign({},t,{style:{position:"relative"}}),r)},Kn=(0,o.createContext)(null),Yn=()=>{var e=(0,o.useContext)(Kn);if(!e)throw new Error("The `useSlateStatic` hook must be used inside the <Slate> component's context.");return e},Qn=(0,o.createContext)((()=>[])),Xn=(0,o.createContext)(!1),$n=()=>(0,o.useContext)(Xn),eo=e=>{for(var{decorations:t,node:r,renderElement:n,renderPlaceholder:a,renderLeaf:s,selection:l}=e,c=(0,o.useContext)(Qn),u=Yn(),d=Mo.findPath(u,r),m=[],p=Vt.isElement(r)&&!u.isInline(r)&&Gt.hasInlines(u,r),b=0;b<r.children.length;b++){var g=d.concat(b),f=r.children[b],h=Mo.findKey(u,f),v=Gt.range(u,g),y=l&&ur.intersection(v,l),w=c([f,g]);for(var A of t){var x=ur.intersection(A,v);x&&w.push(x)}Vt.isElement(f)?m.push(i().createElement(Xn.Provider,{key:"provider-".concat(h.id),value:!!y},i().createElement(Gn,{decorations:w,element:f,key:h.id,renderElement:n,renderPlaceholder:a,renderLeaf:s,selection:y}))):m.push(i().createElement(qn,{decorations:w,key:h.id,isLast:p&&b===r.children.length-1,parent:r,renderPlaceholder:a,renderLeaf:s,text:f})),wn.set(f,b),An.set(f,r)}return m},to={bold:"mod+b",compose:["down","left","right","up","backspace","enter"],moveBackward:"left",moveForward:"right",moveWordBackward:"ctrl+left",moveWordForward:"ctrl+right",deleteBackward:"shift?+backspace",deleteForward:"shift?+delete",extendBackward:"shift+left",extendForward:"shift+right",italic:"mod+i",splitBlock:"shift?+enter",undo:"mod+z"},ro={moveLineBackward:"opt+up",moveLineForward:"opt+down",moveWordBackward:"opt+left",moveWordForward:"opt+right",deleteBackward:["ctrl+backspace","ctrl+h"],deleteForward:["ctrl+delete","ctrl+d"],deleteLineBackward:"cmd+shift?+backspace",deleteLineForward:["cmd+shift?+delete","ctrl+k"],deleteWordBackward:"opt+shift?+backspace",deleteWordForward:"opt+shift?+delete",extendLineBackward:"opt+shift+up",extendLineForward:"opt+shift+down",redo:"cmd+shift+z",transposeCharacter:"ctrl+t"},no={deleteWordBackward:"ctrl+shift?+backspace",deleteWordForward:"ctrl+shift?+delete",redo:["ctrl+y","ctrl+shift+z"]},oo=e=>{var t=to[e],r=ro[e],n=no[e],o=t&&(0,Yr.TB)(t),i=r&&(0,Yr.TB)(r),a=n&&(0,Yr.TB)(n);return e=>!(!o||!o(e))||!!(rn&&i&&i(e))||!(rn||!a||!a(e))},io={isBold:oo("bold"),isCompose:oo("compose"),isMoveBackward:oo("moveBackward"),isMoveForward:oo("moveForward"),isDeleteBackward:oo("deleteBackward"),isDeleteForward:oo("deleteForward"),isDeleteLineBackward:oo("deleteLineBackward"),isDeleteLineForward:oo("deleteLineForward"),isDeleteWordBackward:oo("deleteWordBackward"),isDeleteWordForward:oo("deleteWordForward"),isExtendBackward:oo("extendBackward"),isExtendForward:oo("extendForward"),isExtendLineBackward:oo("extendLineBackward"),isExtendLineForward:oo("extendLineForward"),isItalic:oo("italic"),isMoveLineBackward:oo("moveLineBackward"),isMoveLineForward:oo("moveLineForward"),isMoveWordBackward:oo("moveWordBackward"),isMoveWordForward:oo("moveWordForward"),isRedo:oo("redo"),isSplitBlock:oo("splitBlock"),isTransposeCharacter:oo("transposeCharacter"),isUndo:oo("undo")},ao=(0,o.createContext)(!1),so=()=>(0,o.useContext)(ao),lo=(0,o.createContext)(null),co=()=>{var e=(0,o.useContext)(lo);if(!e)throw new Error("The `useSlate` hook must be used inside the <Slate> component's context.");var[t]=e;return t},uo=e=>e&&e.ownerDocument&&e.ownerDocument.defaultView||null,mo=e=>po(e)&&1===e.nodeType,po=e=>{var t=uo(e);return!!t&&e instanceof t.Node},bo=e=>{var t=e&&e.anchorNode&&uo(e.anchorNode);return!!t&&e instanceof t.Selection},go=e=>po(e)&&3===e.nodeType,fo=(e,t,r)=>{for(var n,{childNodes:o}=e,i=o[t],a=t,s=!1,l=!1;(po(n=i)&&8===n.nodeType||mo(i)&&0===i.childNodes.length||mo(i)&&"false"===i.getAttribute("contenteditable"))&&(!s||!l);)a>=o.length?(s=!0,a=t-1,r="backward"):a<0?(l=!0,a=t+1,r="forward"):(i=o[a],t=a,a+="forward"===r?1:-1);return[i,t]},ho=(e,t,r)=>{var[n]=fo(e,t,r);return n},vo=e=>{var t="";if(go(e)&&e.nodeValue)return e.nodeValue;if(mo(e)){for(var r of Array.from(e.childNodes))t+=vo(r);var n=getComputedStyle(e).getPropertyValue("display");"block"!==n&&"list"!==n&&"BR"!==e.tagName||(t+="\n")}return t},yo=/data-slate-fragment="(.+?)"/m,wo=e=>{var t=e.getData("text/html"),[,r]=t.match(yo)||[];return r},Ao=["autoFocus","decorate","onDOMBeforeInput","placeholder","readOnly","renderElement","renderLeaf","renderPlaceholder","scrollSelectionIntoView","style","as"];function xo(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function ko(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?xo(Object(r),!0).forEach((function(t){$r(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):xo(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Co=e=>i().createElement(i().Fragment,null,eo(e)),Do=e=>{var{attributes:t,children:r}=e;return i().createElement("span",Object.assign({},t),r)},Eo=()=>[],So=(e,t)=>{if(!e.selection||e.selection&&ur.isCollapsed(e.selection)){var r=t.startContainer.parentElement;r.getBoundingClientRect=t.getBoundingClientRect.bind(t),Kr(r,{scrollMode:"if-needed"}),delete r.getBoundingClientRect}},Bo=(e,t)=>po(t)&&Mo.hasDOMNode(e,t),Fo=(e,t)=>po(t)&&Mo.hasDOMNode(e,t,{editable:!0}),To=(e,t)=>{if(Bn.get(e))return!1;var r=Bo(e,t)&&Mo.toSlateNode(e,t);return Gt.isVoid(e,r)},Oo=(e,t)=>{if(!t)return!1;var r=t(e);return null!=r?r:e.isDefaultPrevented()||e.isPropagationStopped()},Io=(e,t)=>{if(!t)return!1;var r=t(e);return null!=r?r:e.defaultPrevented};function _o(e,t){return e.slice(t.start,e.length-t.end)}function Ro(e,t){var r=Mo.toSlateNode(e,t);if(hr.isText(r)){var n=r.text,o=t.textContent;if(o.endsWith("\n")&&(o=o.slice(0,o.length-1)),o!==n){var i=function(e,t){if(void 0===e||void 0===t)return null;var r=function(e,t){if(e===t)return null;var r=function(e,t){for(var r=Math.min(e.length,t.length),n=0;n<r;n++)if(e.charAt(n)!==t.charAt(n))return n;return e.length!==t.length?r:null}(e,t);if(null===r)return null;var n=function(e,t,r){for(var n=e.length,o=t.length,i=Math.min(n,o,r),a=0;a<i;a++)if(e.charAt(n-a-1)!==t.charAt(o-a-1))return a;return e.length!==t.length?i:null}(e,t,Math.min(e.length-r,t.length-r));return null===n?null:{start:r,end:n}}(e,t);if(null==r)return null;var n=_o(t,r),o=_o(e,r);return{start:r.start,end:e.length-r.end,insertText:n,removeText:o}}(n,o);if(null!==i)return{text:i,path:Mo.findPath(e,r)}}}}function No(e,t,r){var{path:n,text:o}=r,i={anchor:{path:n,offset:o.start},focus:{path:n,offset:o.end}};if(!t||!ur.isCollapsed(t))return i;var{insertText:a,removeText:s}=o;if((1===a.length||1===s.length)&&rr.equals(t.anchor.path,n)){var[l]=Array.from(Gt.nodes(e,{at:t,match:hr.isText}));if(l){var[c]=l,{anchor:u}=t,d=c.text[u.offset-1],m=c.text[u.offset];if(1===a.length&&a===m)return t;if(1===s.length&&s===d)return{anchor:{path:n,offset:u.offset-1},focus:{path:n,offset:u.offset}}}}return i}var Po=0;class Lo{constructor(){this.id="".concat(Po++)}}var Mo={getWindow(e){var t=xn.get(e);if(!t)throw new Error("Unable to find a host window element for this editor");return t},findKey(e,t){var r=En.get(t);return r||(r=new Lo,En.set(t,r)),r},findPath(e,t){for(var r=[],n=t;;){var o=An.get(n);if(null==o){if(Gt.isEditor(n))return r;break}var i=wn.get(n);if(null==i)break;r.unshift(i),n=o}throw new Error("Unable to find the path for Slate node: ".concat(JSON.stringify(t)))},findDocumentOrShadowRoot(e){var t=Mo.toDOMNode(e,e),r=t.getRootNode();return(r instanceof Document||r instanceof ShadowRoot)&&null!=r.getSelection?r:t.ownerDocument},isFocused:e=>!!Fn.get(e),isReadOnly:e=>!!Bn.get(e),blur(e){var t=Mo.toDOMNode(e,e),r=Mo.findDocumentOrShadowRoot(e);Fn.set(e,!1),r.activeElement===t&&t.blur()},focus(e){var t=Mo.toDOMNode(e,e),r=Mo.findDocumentOrShadowRoot(e);Fn.set(e,!0),r.activeElement!==t&&t.focus({preventScroll:!0})},deselect(e){Mo.toDOMNode(e,e);var{selection:t}=e,r=Mo.findDocumentOrShadowRoot(e).getSelection();r&&r.rangeCount>0&&r.removeAllRanges(),t&&Pr.deselect(e)},hasDOMNode(e,t){var r,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{editable:o=!1}=n,i=Mo.toDOMNode(e,e);try{r=mo(t)?t:t.parentElement}catch(e){if(!e.message.includes('Permission denied to access property "nodeType"'))throw e}return!!r&&!(r.closest("[data-slate-editor]")!==i||o&&!r.isContentEditable&&("boolean"!=typeof r.isContentEditable||r.closest('[contenteditable="false"]')!==i)&&!r.getAttribute("data-slate-zero-width"))},insertData(e,t){e.insertData(t)},insertFragmentData:(e,t)=>e.insertFragmentData(t),insertTextData:(e,t)=>e.insertTextData(t),setFragmentData(e,t,r){e.setFragmentData(t,r)},toDOMNode(e,t){var r=Sn.get(e),n=Gt.isEditor(t)?kn.get(e):null==r?void 0:r.get(Mo.findKey(e,t));if(!n)throw new Error("Cannot resolve a DOM node from Slate node: ".concat(JSON.stringify(t)));return n},toDOMPoint(e,t){var r,[n]=Gt.node(e,t.path),o=Mo.toDOMNode(e,n);Gt.void(e,{at:t})&&(t={path:t.path,offset:0});var i=Array.from(o.querySelectorAll("[data-slate-string], [data-slate-zero-width]")),a=0;for(var s of i){var l=s.childNodes[0];if(null!=l&&null!=l.textContent){var{length:c}=l.textContent,u=s.getAttribute("data-slate-length"),d=a+(null==u?c:parseInt(u,10));if(t.offset<=d){r=[l,Math.min(c,Math.max(0,t.offset-a))];break}a=d}}if(!r)throw new Error("Cannot resolve a DOM point from Slate point: ".concat(JSON.stringify(t)));return r},toDOMRange(e,t){var{anchor:r,focus:n}=t,o=ur.isBackward(t),i=Mo.toDOMPoint(e,r),a=ur.isCollapsed(t)?i:Mo.toDOMPoint(e,n),s=Mo.getWindow(e).document.createRange(),[l,c]=o?a:i,[u,d]=o?i:a,m=!!(mo(l)?l:l.parentElement).getAttribute("data-slate-zero-width"),p=!!(mo(u)?u:u.parentElement).getAttribute("data-slate-zero-width");return s.setStart(l,m?1:c),s.setEnd(u,p?1:d),s},toSlateNode(e,t){var r=mo(t)?t:t.parentElement;r&&!r.hasAttribute("data-slate-node")&&(r=r.closest("[data-slate-node]"));var n=r?Cn.get(r):null;if(!n)throw new Error("Cannot resolve a Slate node from DOM node: ".concat(r));return n},findEventRange(e,t){"nativeEvent"in t&&(t=t.nativeEvent);var{clientX:r,clientY:n,target:o}=t;if(null==r||null==n)throw new Error("Cannot resolve a Slate range from a DOM event: ".concat(t));var i,a=Mo.toSlateNode(e,t.target),s=Mo.findPath(e,a);if(Gt.isVoid(e,a)){var l=o.getBoundingClientRect(),c=e.isInline(a)?r-l.left<l.left+l.width-r:n-l.top<l.top+l.height-n,u=Gt.point(e,s,{edge:c?"start":"end"}),d=c?Gt.before(e,u):Gt.after(e,u);if(d)return Gt.range(e,d)}var{document:m}=Mo.getWindow(e);if(m.caretRangeFromPoint)i=m.caretRangeFromPoint(r,n);else{var p=m.caretPositionFromPoint(r,n);p&&((i=m.createRange()).setStart(p.offsetNode,p.offset),i.setEnd(p.offsetNode,p.offset))}if(!i)throw new Error("Cannot resolve a Slate range from a DOM event: ".concat(t));return Mo.toSlateRange(e,i,{exactMatch:!1,suppressThrow:!1})},toSlatePoint(e,t,r){var{exactMatch:n,suppressThrow:o}=r,[i,a]=n?t:(e=>{var[t,r]=e;if(mo(t)&&t.childNodes.length){var n=r===t.childNodes.length,o=n?r-1:r;for([t,o]=fo(t,o,n?"backward":"forward"),n=o<r;mo(t)&&t.childNodes.length;){var i=n?t.childNodes.length-1:0;t=ho(t,i,n?"backward":"forward")}r=n&&null!=t.textContent?t.textContent.length:0}return[t,r]})(t),s=i.parentNode,l=null,c=0;if(s){var u,d=s.closest('[data-slate-void="true"]'),m=s.closest("[data-slate-leaf]"),p=null;if(m){if(l=m.closest('[data-slate-node="text"]')){var b=Mo.getWindow(e).document.createRange();b.setStart(l,0),b.setEnd(i,a);var g=b.cloneContents();[...Array.prototype.slice.call(g.querySelectorAll("[data-slate-zero-width]")),...Array.prototype.slice.call(g.querySelectorAll("[contenteditable=false]"))].forEach((e=>{e.parentNode.removeChild(e)})),c=g.textContent.length,p=l}}else d&&((m=d.querySelector("[data-slate-leaf]"))?(l=m.closest('[data-slate-node="text"]'),c=(p=m).textContent.length,p.querySelectorAll("[data-slate-zero-width]").forEach((e=>{c-=e.textContent.length}))):c=1);p&&c===p.textContent.length&&(s.hasAttribute("data-slate-zero-width")||on&&null!==(u=p.textContent)&&void 0!==u&&u.endsWith("\n\n"))&&c--}if(!l){if(o)return null;throw new Error("Cannot resolve a Slate point from DOM point: ".concat(t))}var f=Mo.toSlateNode(e,l);return{path:Mo.findPath(e,f),offset:c}},toSlateRange(e,t,r){var n,o,i,a,s,{exactMatch:l,suppressThrow:c}=r;if((bo(t)?t.anchorNode:t.startContainer)&&(bo(t)?(n=t.anchorNode,o=t.anchorOffset,i=t.focusNode,a=t.focusOffset,s=ln&&window.document.activeElement&&window.document.activeElement.shadowRoot?t.anchorNode===t.focusNode&&t.anchorOffset===t.focusOffset:t.isCollapsed):(n=t.startContainer,o=t.startOffset,i=t.endContainer,a=t.endOffset,s=t.collapsed)),null==n||null==i||null==o||null==a)throw new Error("Cannot resolve a Slate range from DOM range: ".concat(t));var u=Mo.toSlatePoint(e,[n,o],{exactMatch:l,suppressThrow:c});if(!u)return null;var d=s?u:Mo.toSlatePoint(e,[i,a],{exactMatch:l,suppressThrow:c});if(!d)return null;var m={anchor:u,focus:d};return ur.isExpanded(m)&&ur.isForward(m)&&mo(i)&&Gt.void(e,{at:m.focus,mode:"highest"})&&(m=Gt.unhangRange(e,m,{voids:!0})),m},hasRange(e,t){var{anchor:r,focus:n}=t;return Gt.hasPath(e,r.path)&&Gt.hasPath(e,n.path)}};class jo{constructor(e,t){this.editor=e,this.restoreDOM=t,this.flush=e=>{try{this.reconcileMutations(e)}catch(e){console.error(e),this.restoreDOM()}},this.reconcileMutations=e=>{var t=function(e,t){var r=[],n=[],o=[],i=[];return t.forEach((t=>{switch(t.type){case"childList":t.addedNodes.length&&t.addedNodes.forEach((e=>{r.push(e)})),t.removedNodes.forEach((e=>{n.push(e)}));break;case"characterData":i.push(t);var{parentNode:a}=t.target;if(!a)return;var s=Ro(e,a);if(!s)return;if(o.some((e=>{var{path:t}=e;return rr.equals(t,s.path)})))return;o.push(s)}})),{addedNodes:r,removedNodes:n,insertedText:o,characterDataMutations:i}}(this.editor,e),{insertedText:r,removedNodes:n}=t;if(((e,t)=>{var{selection:r}=e,{removedNodes:n}=t;return!!r&&ur.isExpanded(r)&&n.length>0})(this.editor,t)){var o=function(e){return e.reduce(((e,t)=>{var{text:r}=t;return"".concat(e).concat(r.insertText)}),"")}(r);this.replaceExpandedSelection(o)}else((e,t)=>{var{addedNodes:r}=t,{selection:n}=e,o=n?Xt.parent(e,n.anchor.path):null,i=o?Mo.toDOMNode(e,o):null;return!!i&&r.some((e=>e instanceof HTMLElement&&e.tagName===(null==i?void 0:i.tagName)))})(this.editor,t)?this.insertBreak():((e,t)=>{var{addedNodes:r,characterDataMutations:n,removedNodes:o}=t;return o.length>0&&0===r.length&&n.length>0})(this.editor,t)?this.removeLeafNodes(n):((e,t)=>{var{removedNodes:r}=t;return r.length>0})(this.editor,t)?this.deleteBackward():((e,t)=>{var{insertedText:r}=t;return r.length>0})(this.editor,t)&&this.insertText(r)},this.insertText=e=>{var{selection:t}=this.editor;if(Tn.get(this.editor)||On.get(this.editor))return In.set(this.editor,e),void On.set(this.editor,!1);e.forEach((e=>{var r=e.text.insertText,n=No(this.editor,t,e);Pr.setSelection(this.editor,n),Gt.insertText(this.editor,r)}))},this.insertBreak=()=>{var{selection:e}=this.editor;Gt.insertBreak(this.editor),this.restoreDOM(),e&&setTimeout((()=>{this.editor.selection&&ur.equals(e,this.editor.selection)&&Pr.move(this.editor)}),100)},this.replaceExpandedSelection=e=>{Gt.deleteFragment(this.editor),e.length&&Gt.insertText(this.editor,e),this.restoreDOM()},this.deleteBackward=()=>{Gt.deleteBackward(this.editor),Mo.focus(this.editor),this.restoreDOM()},this.removeLeafNodes=e=>{for(var t of e){var r=Mo.toSlateNode(this.editor,t);if(r){var n=Mo.findPath(this.editor,r);Pr.delete(this.editor,{at:n}),this.restoreDOM()}}},this.editor=e,this.restoreDOM=t}}function Wo(e,t,r){var[n]=(0,o.useState)((()=>new MutationObserver(t)));fn((()=>{n.disconnect()})),(0,o.useEffect)((()=>{if(!e.current)throw new Error("Failed to attach MutationObserver, `node` is undefined");return n.observe(e.current,r),n.disconnect.bind(n)}))}var Vo={childList:!0,characterData:!0,subtree:!0};function Uo(e){var t,r=mo(e)?e:e.parentElement;return r&&!r.hasAttribute("data-slate-node")&&(r=r.closest("[data-slate-node]")),r&&Cn.get(r)||(null!==(t=r)&&void 0!==t&&t.parentElement?Uo(r.parentElement):null)}function Ho(e,t){var r=Yn(),n=(0,o.useRef)(new Set);Wo(e,(0,o.useCallback)((e=>{t.current&&e.forEach((e=>{var{target:t}=e,r=Uo(t);if(r)return n.current.add(r)}))}),[]),Vo),n.current.clear();var i=(0,o.useCallback)((()=>{var e=Array.from(n.current.values()),t=e.filter((t=>!e.some((e=>rr.isParent(Mo.findPath(r,e),Mo.findPath(r,t))))));t.forEach((e=>{var t;null===(t=Rn.get(e))||void 0===t||t()})),n.current.clear()}),[]);return i}var Zo={childList:!0,characterData:!0,characterDataOldValue:!0,subtree:!0};var qo=["autoFocus","decorate","onDOMBeforeInput","placeholder","readOnly","renderElement","renderLeaf","renderPlaceholder","style","as"];function zo(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Go(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?zo(Object(r),!0).forEach((function(t){$r(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):zo(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var Jo=(0,o.createContext)(!1),Ko=["editor","children","onChange","value"],Yo=e=>{var{editor:t,children:r,onChange:n,value:a}=e,s=en(e,Ko),l=(0,o.useRef)(!1),[c,u]=i().useState((()=>{if(!Xt.isNodeList(a))throw new Error("[Slate] value is invalid! Expected a list of elements"+"but got: ".concat(JSON.stringify(a)));if(!Gt.isEditor(t))throw new Error("[Slate] editor is invalid! you passed:"+"".concat(JSON.stringify(t)));return t.children=a,Object.assign(t,s),[t]})),d=(0,o.useCallback)((()=>{n(t.children),u([t])}),[n]);_n.set(t,d),(0,o.useEffect)((()=>()=>{_n.set(t,(()=>{})),l.current=!0}),[]);var[m,p]=(0,o.useState)(Mo.isFocused(t));return(0,o.useEffect)((()=>{p(Mo.isFocused(t))})),fn((()=>{var e=()=>{setTimeout((()=>{l.current||p(Mo.isFocused(t))}),0)};return document.addEventListener("focus",e,!0),document.addEventListener("blur",e,!0),()=>{document.removeEventListener("focus",e,!0),document.removeEventListener("blur",e,!0)}}),[]),i().createElement(lo.Provider,{value:c},i().createElement(Kn.Provider,{value:t},i().createElement(Jo.Provider,{value:m},r)))},Qo=(e,t)=>{var r=(t.top+t.bottom)/2;return e.top<=r&&e.bottom>=r},Xo=(e,t,r)=>{var n=Mo.toDOMRange(e,t).getBoundingClientRect(),o=Mo.toDOMRange(e,r).getBoundingClientRect();return Qo(n,o)&&Qo(o,n)},$o=nn?e=>{var{autoFocus:t,decorate:r=Eo,onDOMBeforeInput:n,placeholder:a,readOnly:s=!1,renderElement:l,renderLeaf:c,renderPlaceholder:u=(e=>i().createElement(Do,Object.assign({},e))),style:d={},as:m="div"}=e,p=en(e,qo),b=co(),[g,f]=(0,o.useState)(!1),h=(0,o.useRef)(null),v=function(e){var t=Yn(),{receivedUserInput:r,onUserInput:n}=function(){var e=Yn(),t=(0,o.useRef)(!1),r=(0,o.useRef)(null),n=(0,o.useCallback)((()=>{if(!1===t.current){var n=Mo.getWindow(e);t.current=!0,r.current&&n.cancelAnimationFrame(r.current),r.current=n.requestAnimationFrame((()=>{t.current=!1,r.current=null}))}}),[]);return(0,o.useEffect)((()=>{t.current&&(t.current=!1)})),{receivedUserInput:t,onUserInput:n}}(),i=Ho(e,r),a=(0,o.useMemo)((()=>new jo(t,i)),[i,t]),s=(0,o.useRef)(null),l=(0,o.useRef)(!1);return Wo(e,(0,o.useCallback)((e=>{r.current&&(l.current=!0,a.flush(e),s.current&&clearTimeout(s.current),s.current=setTimeout((()=>{l.current=!1,s.current=null}),250))}),[]),Zo),{isReconciling:l,onUserInput:n}}(h);Bn.set(b,s);var y=(0,o.useMemo)((()=>({isComposing:!1,isUpdatingSelection:!1,latestElement:null})),[]),w=Hn(b);fn((()=>{var e;h.current&&(e=uo(h.current))?(xn.set(b,e),kn.set(b,h.current),Dn.set(b,h.current),Cn.set(h.current,b)):Dn.delete(b);try{var{selection:t}=b,r=Mo.findDocumentOrShadowRoot(b).getSelection();if(y.isComposing||!r||!Mo.isFocused(b))return;var n="None"!==r.type;if(!t&&!n)return;var o=kn.get(b),i=!1;if(o.contains(r.anchorNode)&&o.contains(r.focusNode)&&(i=!0),n&&i&&t){var a=Mo.toSlateRange(b,r,{exactMatch:!0,suppressThrow:!0});if(a&&ur.equals(a,t))return}if(t&&!Mo.hasRange(b,t))return void(b.selection=Mo.toSlateRange(b,r,{exactMatch:!1,suppressThrow:!1}));var s=Mo.toDOMNode(b,b);y.isUpdatingSelection=!0;var l=t&&Mo.toDOMRange(b,t);if(l){ur.isBackward(t)?r.setBaseAndExtent(l.endContainer,l.endOffset,l.startContainer,l.startOffset):r.setBaseAndExtent(l.startContainer,l.startOffset,l.endContainer,l.endOffset);var c=l.startContainer.parentElement;c.getBoundingClientRect=l.getBoundingClientRect.bind(l),Kr(c,{scrollMode:"if-needed",boundary:s}),delete c.getBoundingClientRect}else r.removeAllRanges();setTimeout((()=>{y.isUpdatingSelection=!1}))}catch(e){y.isUpdatingSelection=!1}})),(0,o.useEffect)((()=>{h.current&&t&&h.current.focus()}),[t]);var A=(0,o.useCallback)(Ur()((()=>{try{if(!y.isComposing&&!y.isUpdatingSelection&&!v.isReconciling.current){var e=Mo.findDocumentOrShadowRoot(b),{activeElement:t}=e,r=Mo.toDOMNode(b,b),n=e.getSelection();if(t===r?(y.latestElement=t,Fn.set(b,!0)):Fn.delete(b),!n)return Pr.deselect(b);var{anchorNode:o,focusNode:i}=n,a=Fo(b,o)||To(b,o),s=Fo(b,i)||To(b,i);if(a&&s){var l=Mo.toSlateRange(b,n,{exactMatch:!1,suppressThrow:!1});Pr.select(b,l)}else Pr.deselect(b)}}catch(e){}}),100),[s]),x=(0,o.useMemo)((()=>Wr()(A,0)),[A]),k=(0,o.useCallback)((e=>{s||!Fo(b,e.target)||Io(e,n)||(x.flush(),v.onUserInput())}),[s,n]);fn((()=>{var e=h.current;return null==e||e.addEventListener("beforeinput",k),()=>null==e?void 0:e.removeEventListener("beforeinput",k)}),[w,n]),fn((()=>{var e=Mo.getWindow(b);return e.document.addEventListener("selectionchange",x),()=>{e.document.removeEventListener("selectionchange",x)}}),[x]);var C=r([b,[]]);if(a&&1===b.children.length&&1===Array.from(Xt.texts(b)).length&&""===Xt.string(b)&&!g){var D=Gt.start(b,[]);C.push({[Nn]:!0,placeholder:a,anchor:D,focus:D})}return i().createElement(ao.Provider,{value:s},i().createElement(Qn.Provider,{value:r},i().createElement(m,Object.assign({key:w,role:s?void 0:"textbox"},p,{spellCheck:p.spellCheck,autoCorrect:p.autoCorrect,autoCapitalize:p.autoCapitalize,"data-slate-editor":!0,"data-slate-node":"value",contentEditable:!s||void 0,suppressContentEditableWarning:!0,ref:h,style:Go({position:"relative",outline:"none",whiteSpace:"pre-wrap",wordWrap:"break-word"},d),onCopy:(0,o.useCallback)((e=>{Fo(b,e.target)&&!Oo(e,p.onCopy)&&(e.preventDefault(),Mo.setFragmentData(b,e.clipboardData,"copy"))}),[p.onCopy]),onCut:(0,o.useCallback)((e=>{if(!s&&Fo(b,e.target)&&!Oo(e,p.onCut)){e.preventDefault(),Mo.setFragmentData(b,e.clipboardData,"cut");var{selection:t}=b;if(t)if(ur.isExpanded(t))Gt.deleteFragment(b);else{var r=Xt.parent(b,t.anchor.path);Gt.isVoid(b,r)&&Pr.delete(b)}}}),[s,p.onCut]),onFocus:(0,o.useCallback)((e=>{if(!s&&!y.isUpdatingSelection&&Fo(b,e.target)&&!Oo(e,p.onFocus)){var t=Mo.findDocumentOrShadowRoot(b);y.latestElement=t.activeElement,Fn.set(b,!0)}}),[s,p.onFocus]),onBlur:(0,o.useCallback)((e=>{if(!s&&!y.isUpdatingSelection&&Fo(b,e.target)&&!Oo(e,p.onBlur)){var t=Mo.findDocumentOrShadowRoot(b);if(y.latestElement!==t.activeElement){var{relatedTarget:r}=e;if(!(r===Mo.toDOMNode(b,b)||mo(r)&&r.hasAttribute("data-slate-spacer"))){if(null!=r&&po(r)&&Mo.hasDOMNode(b,r)){var n=Mo.toSlateNode(b,r);if(Vt.isElement(n)&&!b.isVoid(n))return}Fn.delete(b)}}}}),[s,p.onBlur]),onClick:(0,o.useCallback)((e=>{if(!s&&Bo(b,e.target)&&!Oo(e,p.onClick)&&po(e.target)){var t=Mo.toSlateNode(b,e.target),r=Mo.findPath(b,t);if(Gt.hasPath(b,r)&&Xt.get(b,r)===t){var n=Gt.start(b,r),o=Gt.end(b,r),i=Gt.void(b,{at:n}),a=Gt.void(b,{at:o});if(i&&a&&rr.equals(i[1],a[1])){var l=Gt.range(b,n);Pr.select(b,l)}}}}),[s,p.onClick]),onCompositionEnd:(0,o.useCallback)((e=>{Fo(b,e.target)&&!Oo(e,p.onCompositionEnd)&&(x.flush(),setTimeout((()=>{y.isComposing&&f(!1),y.isComposing=!1,Tn.set(b,!1),On.set(b,!0);var e=In.get(b)||[];if(e.length){In.set(b,[]);var{selection:t}=b;e.forEach((e=>{var r=e.text.insertText,n=No(b,t,e);Pr.setSelection(b,n),Gt.insertText(b,r)}))}}),20))}),[p.onCompositionEnd]),onCompositionUpdate:(0,o.useCallback)((e=>{Fo(b,e.target)&&!Oo(e,p.onCompositionUpdate)&&(!y.isComposing&&f(!0),y.isComposing=!0,Tn.set(b,!0))}),[p.onCompositionUpdate]),onCompositionStart:(0,o.useCallback)((e=>{Fo(b,e.target)&&!Oo(e,p.onCompositionStart)&&(!y.isComposing&&f(!0),y.isComposing=!0,Tn.set(b,!0))}),[p.onCompositionStart]),onPaste:(0,o.useCallback)((e=>{e.clipboardData=(e=>{if(!e.getData("application/x-slate-fragment")){var t=wo(e);if(t){var r=new DataTransfer;return e.types.forEach((t=>{r.setData(t,e.getData(t))})),r.setData("application/x-slate-fragment",t),r}}return e})(e.clipboardData),!Fo(b,e.target)||Oo(e,p.onPaste)||s||(e.preventDefault(),Mo.insertData(b,e.clipboardData))}),[s,p.onPaste])}),eo({decorations:C,node:b,renderElement:l,renderPlaceholder:u,renderLeaf:c,selection:b.selection}))))}:e=>{var{autoFocus:t,decorate:r=Eo,onDOMBeforeInput:n,placeholder:a,readOnly:s=!1,renderElement:l,renderLeaf:c,renderPlaceholder:u=(e=>i().createElement(Do,Object.assign({},e))),scrollSelectionIntoView:d=So,style:m={},as:p="div"}=e,b=en(e,Ao),g=co(),[f,h]=(0,o.useState)(!1),v=(0,o.useRef)(null),y=(0,o.useRef)([]);Bn.set(g,s);var w=(0,o.useMemo)((()=>({isComposing:!1,hasInsertPrefixInCompositon:!1,isDraggingInternally:!1,isUpdatingSelection:!1,latestElement:null})),[]);fn((()=>{var e;v.current&&(e=uo(v.current))?(xn.set(g,e),kn.set(g,v.current),Dn.set(g,v.current),Cn.set(v.current,g)):Dn.delete(g);var{selection:t}=g,r=Mo.findDocumentOrShadowRoot(g).getSelection();if(!w.isComposing&&r&&Mo.isFocused(g)){var n="None"!==r.type;if(t||n){var o=kn.get(g),i=!1;if(o.contains(r.anchorNode)&&o.contains(r.focusNode)&&(i=!0),n&&i&&t){var a=Mo.toSlateRange(g,r,{exactMatch:!0,suppressThrow:!0});if(a&&ur.equals(a,t))return}if(!t||Mo.hasRange(g,t)){w.isUpdatingSelection=!0;var s=t&&Mo.toDOMRange(g,t);s?(ur.isBackward(t)?r.setBaseAndExtent(s.endContainer,s.endOffset,s.startContainer,s.startOffset):r.setBaseAndExtent(s.startContainer,s.startOffset,s.endContainer,s.endOffset),d(g,s)):r.removeAllRanges(),setTimeout((()=>{s&&on&&Mo.toDOMNode(g,g).focus(),w.isUpdatingSelection=!1}))}else g.selection=Mo.toSlateRange(g,r,{exactMatch:!1,suppressThrow:!1})}}})),(0,o.useEffect)((()=>{v.current&&t&&v.current.focus()}),[t]);var A=(0,o.useCallback)(Ur()((()=>{if(!w.isComposing&&!w.isUpdatingSelection&&!w.isDraggingInternally){var e=Mo.findDocumentOrShadowRoot(g),{activeElement:t}=e,r=Mo.toDOMNode(g,g),n=e.getSelection();if(t===r?(w.latestElement=t,Fn.set(g,!0)):Fn.delete(g),!n)return Pr.deselect(g);var{anchorNode:o,focusNode:i}=n,a=Fo(g,o)||To(g,o),s=Fo(g,i)||To(g,i);if(a&&s){var l=Mo.toSlateRange(g,n,{exactMatch:!1,suppressThrow:!1});Pr.select(g,l)}}}),100),[s]),x=(0,o.useMemo)((()=>Wr()(A,0)),[A]),k=(0,o.useCallback)((e=>{if(!s&&Fo(g,e.target)&&!Io(e,n)){x.flush(),A.flush();var{selection:t}=g,{inputType:r}=e,o=e.dataTransfer||e.data||void 0;if("insertCompositionText"===r||"deleteCompositionText"===r)return;var i=!1;if("insertText"===r&&t&&ur.isCollapsed(t)&&e.data&&1===e.data.length&&/[a-z ]/i.test(e.data)&&0!==t.anchor.offset){i=!0,g.marks&&(i=!1);var{anchor:a}=t,l=Gt.above(g,{at:a,match:e=>Gt.isInline(g,e),mode:"highest"});if(l){var[,c]=l;Gt.isEnd(g,t.anchor,c)&&(i=!1)}}if(i||e.preventDefault(),!r.startsWith("delete")||r.startsWith("deleteBy")){var[u]=e.getTargetRanges();if(u){var d=Mo.toSlateRange(g,u,{exactMatch:!1,suppressThrow:!1});t&&ur.equals(t,d)||Pr.select(g,d)}}if(t&&ur.isExpanded(t)&&r.startsWith("delete")){var m=r.endsWith("Backward")?"backward":"forward";return void Gt.deleteFragment(g,{direction:m})}switch(r){case"deleteByComposition":case"deleteByCut":case"deleteByDrag":Gt.deleteFragment(g);break;case"deleteContent":case"deleteContentForward":Gt.deleteForward(g);break;case"deleteContentBackward":Gt.deleteBackward(g);break;case"deleteEntireSoftLine":Gt.deleteBackward(g,{unit:"line"}),Gt.deleteForward(g,{unit:"line"});break;case"deleteHardLineBackward":Gt.deleteBackward(g,{unit:"block"});break;case"deleteSoftLineBackward":Gt.deleteBackward(g,{unit:"line"});break;case"deleteHardLineForward":Gt.deleteForward(g,{unit:"block"});break;case"deleteSoftLineForward":Gt.deleteForward(g,{unit:"line"});break;case"deleteWordBackward":Gt.deleteBackward(g,{unit:"word"});break;case"deleteWordForward":Gt.deleteForward(g,{unit:"word"});break;case"insertLineBreak":case"insertParagraph":Gt.insertBreak(g);break;case"insertFromComposition":case"insertFromDrop":case"insertFromPaste":case"insertFromYank":case"insertReplacementText":case"insertText":"insertFromComposition"===r&&(w.isComposing&&h(!1),w.isComposing=!1),"DataTransfer"===(null==o?void 0:o.constructor.name)?Mo.insertData(g,o):"string"==typeof o&&(i?y.current.push((()=>Gt.insertText(g,o))):Gt.insertText(g,o))}}}),[s,n]);fn((()=>(v.current&&gn&&v.current.addEventListener("beforeinput",k),()=>{v.current&&gn&&v.current.removeEventListener("beforeinput",k)})),[k]),fn((()=>{var e=Mo.getWindow(g);return e.document.addEventListener("selectionchange",x),()=>{e.document.removeEventListener("selectionchange",x)}}),[x]);var C=r([g,[]]);if(a&&1===g.children.length&&1===Array.from(Xt.texts(g)).length&&""===Xt.string(g)&&!f){var D=Gt.start(g,[]);C.push({[Nn]:!0,placeholder:a,anchor:D,focus:D})}return i().createElement(ao.Provider,{value:s},i().createElement(Qn.Provider,{value:r},i().createElement(p,Object.assign({role:s?void 0:"textbox"},b,{spellCheck:!(!gn&&bn)&&b.spellCheck,autoCorrect:gn||!bn?b.autoCorrect:"false",autoCapitalize:gn||!bn?b.autoCapitalize:"false","data-slate-editor":!0,"data-slate-node":"value",contentEditable:!s,zindex:-1,suppressContentEditableWarning:!0,ref:v,style:ko({position:"relative",outline:"none",whiteSpace:"pre-wrap",wordWrap:"break-word"},m),onBeforeInput:(0,o.useCallback)((e=>{if(!gn&&!s&&!Oo(e,b.onBeforeInput)&&Fo(g,e.target)&&(e.preventDefault(),!w.isComposing)){var t=e.data;Gt.insertText(g,t)}}),[s]),onInput:(0,o.useCallback)((e=>{for(var t of y.current)t();y.current=[]}),[]),onBlur:(0,o.useCallback)((e=>{if(!s&&!w.isUpdatingSelection&&Fo(g,e.target)&&!Oo(e,b.onBlur)){var t=Mo.findDocumentOrShadowRoot(g);if(w.latestElement!==t.activeElement){var{relatedTarget:r}=e;if(!(r===Mo.toDOMNode(g,g)||mo(r)&&r.hasAttribute("data-slate-spacer"))){if(null!=r&&po(r)&&Mo.hasDOMNode(g,r)){var n=Mo.toSlateNode(g,r);if(Vt.isElement(n)&&!g.isVoid(n))return}if(an){var o=t.getSelection();null==o||o.removeAllRanges()}Fn.delete(g)}}}}),[s,b.onBlur]),onClick:(0,o.useCallback)((e=>{if(!s&&Bo(g,e.target)&&!Oo(e,b.onClick)&&po(e.target)){var t=Mo.toSlateNode(g,e.target),r=Mo.findPath(g,t);if(Gt.hasPath(g,r)&&Xt.get(g,r)===t){var n=Gt.start(g,r),o=Gt.end(g,r),i=Gt.void(g,{at:n}),a=Gt.void(g,{at:o});if(i&&a&&rr.equals(i[1],a[1])){var l=Gt.range(g,n);Pr.select(g,l)}}}}),[s,b.onClick]),onCompositionEnd:(0,o.useCallback)((e=>{if(Fo(g,e.target)&&!Oo(e,b.onCompositionEnd)&&(w.isComposing&&h(!1),w.isComposing=!1,an||un||tn||dn||pn||mn||!e.data||Gt.insertText(g,e.data),g.selection&&ur.isCollapsed(g.selection))){var t=g.selection.anchor.path,r=Xt.leaf(g,t);w.hasInsertPrefixInCompositon&&(w.hasInsertPrefixInCompositon=!1,Gt.withoutNormalizing(g,(()=>{var e=r.text.replace(/^\uFEFF/,"");Pr.delete(g,{distance:r.text.length,reverse:!0}),Gt.insertText(g,e)})))}}),[b.onCompositionEnd]),onCompositionUpdate:(0,o.useCallback)((e=>{Fo(g,e.target)&&!Oo(e,b.onCompositionUpdate)&&(!w.isComposing&&h(!0),w.isComposing=!0)}),[b.onCompositionUpdate]),onCompositionStart:(0,o.useCallback)((e=>{if(Fo(g,e.target)&&!Oo(e,b.onCompositionStart)){var{selection:t,marks:r}=g;if(t){if(ur.isExpanded(t))return void Gt.deleteFragment(g);var n=Gt.above(g,{match:e=>Gt.isInline(g,e),mode:"highest"});if(n){var[,o]=n;if(Gt.isEnd(g,t.anchor,o)){var i=Gt.after(g,o);Pr.setSelection(g,{anchor:i,focus:i})}}r&&(w.hasInsertPrefixInCompositon=!0,Pr.insertNodes(g,ko({text:"\ufeff"},r),{select:!0}))}}}),[b.onCompositionStart]),onCopy:(0,o.useCallback)((e=>{Fo(g,e.target)&&!Oo(e,b.onCopy)&&(e.preventDefault(),Mo.setFragmentData(g,e.clipboardData,"copy"))}),[b.onCopy]),onCut:(0,o.useCallback)((e=>{if(!s&&Fo(g,e.target)&&!Oo(e,b.onCut)){e.preventDefault(),Mo.setFragmentData(g,e.clipboardData,"cut");var{selection:t}=g;if(t)if(ur.isExpanded(t))Gt.deleteFragment(g);else{var r=Xt.parent(g,t.anchor.path);Gt.isVoid(g,r)&&Pr.delete(g)}}}),[s,b.onCut]),onDragOver:(0,o.useCallback)((e=>{if(Bo(g,e.target)&&!Oo(e,b.onDragOver)){var t=Mo.toSlateNode(g,e.target);Gt.isVoid(g,t)&&e.preventDefault()}}),[b.onDragOver]),onDragStart:(0,o.useCallback)((e=>{if(!s&&Bo(g,e.target)&&!Oo(e,b.onDragStart)){var t=Mo.toSlateNode(g,e.target),r=Mo.findPath(g,t);if(Gt.isVoid(g,t)||Gt.void(g,{at:r,voids:!0})){var n=Gt.range(g,r);Pr.select(g,n)}w.isDraggingInternally=!0,Mo.setFragmentData(g,e.dataTransfer,"drag")}}),[s,b.onDragStart]),onDrop:(0,o.useCallback)((e=>{if(!s&&Bo(g,e.target)&&!Oo(e,b.onDrop)){e.preventDefault();var t=g.selection,r=Mo.findEventRange(g,e),n=e.dataTransfer;Pr.select(g,r),w.isDraggingInternally&&(!t||ur.equals(t,r)||Gt.void(g,{at:r,voids:!0})||Pr.delete(g,{at:t})),Mo.insertData(g,n),Mo.isFocused(g)||Mo.focus(g)}w.isDraggingInternally=!1}),[s,b.onDrop]),onDragEnd:(0,o.useCallback)((e=>{!s&&w.isDraggingInternally&&b.onDragEnd&&Bo(g,e.target)&&b.onDragEnd(e),w.isDraggingInternally=!1}),[s,b.onDragEnd]),onFocus:(0,o.useCallback)((e=>{if(!s&&!w.isUpdatingSelection&&Fo(g,e.target)&&!Oo(e,b.onFocus)){var t=Mo.toDOMNode(g,g),r=Mo.findDocumentOrShadowRoot(g);if(w.latestElement=r.activeElement,on&&e.target!==t)return void t.focus();Fn.set(g,!0)}}),[s,b.onFocus]),onKeyDown:(0,o.useCallback)((e=>{if(!s&&!w.isComposing&&Fo(g,e.target)&&!Oo(e,b.onKeyDown)){var{nativeEvent:t}=e,{selection:r}=g,n=g.children[null!==r?r.focus.path[0]:0],o="rtl"===Mr()(Xt.string(n));if(io.isRedo(t)){e.preventDefault();var i=g;return void("function"==typeof i.redo&&i.redo())}if(io.isUndo(t)){e.preventDefault();var a=g;return void("function"==typeof a.undo&&a.undo())}if(io.isMoveLineBackward(t))return e.preventDefault(),void Pr.move(g,{unit:"line",reverse:!0});if(io.isMoveLineForward(t))return e.preventDefault(),void Pr.move(g,{unit:"line"});if(io.isExtendLineBackward(t))return e.preventDefault(),void Pr.move(g,{unit:"line",edge:"focus",reverse:!0});if(io.isExtendLineForward(t))return e.preventDefault(),void Pr.move(g,{unit:"line",edge:"focus"});if(io.isMoveBackward(t))return e.preventDefault(),void(r&&ur.isCollapsed(r)?Pr.move(g,{reverse:!o}):Pr.collapse(g,{edge:"start"}));if(io.isMoveForward(t))return e.preventDefault(),void(r&&ur.isCollapsed(r)?Pr.move(g,{reverse:o}):Pr.collapse(g,{edge:"end"}));if(io.isMoveWordBackward(t))return e.preventDefault(),r&&ur.isExpanded(r)&&Pr.collapse(g,{edge:"focus"}),void Pr.move(g,{unit:"word",reverse:!o});if(io.isMoveWordForward(t))return e.preventDefault(),r&&ur.isExpanded(r)&&Pr.collapse(g,{edge:"focus"}),void Pr.move(g,{unit:"word",reverse:o});if(gn){if((ln||an)&&r&&(io.isDeleteBackward(t)||io.isDeleteForward(t))&&ur.isCollapsed(r)){var l=Xt.parent(g,r.anchor.path);if(Vt.isElement(l)&&Gt.isVoid(g,l)&&Gt.isInline(g,l))return e.preventDefault(),void Gt.deleteBackward(g,{unit:"block"})}}else{if(io.isBold(t)||io.isItalic(t)||io.isTransposeCharacter(t))return void e.preventDefault();if(io.isSplitBlock(t))return e.preventDefault(),void Gt.insertBreak(g);if(io.isDeleteBackward(t))return e.preventDefault(),void(r&&ur.isExpanded(r)?Gt.deleteFragment(g,{direction:"backward"}):Gt.deleteBackward(g));if(io.isDeleteForward(t))return e.preventDefault(),void(r&&ur.isExpanded(r)?Gt.deleteFragment(g,{direction:"forward"}):Gt.deleteForward(g));if(io.isDeleteLineBackward(t))return e.preventDefault(),void(r&&ur.isExpanded(r)?Gt.deleteFragment(g,{direction:"backward"}):Gt.deleteBackward(g,{unit:"line"}));if(io.isDeleteLineForward(t))return e.preventDefault(),void(r&&ur.isExpanded(r)?Gt.deleteFragment(g,{direction:"forward"}):Gt.deleteForward(g,{unit:"line"}));if(io.isDeleteWordBackward(t))return e.preventDefault(),void(r&&ur.isExpanded(r)?Gt.deleteFragment(g,{direction:"backward"}):Gt.deleteBackward(g,{unit:"word"}));if(io.isDeleteWordForward(t))return e.preventDefault(),void(r&&ur.isExpanded(r)?Gt.deleteFragment(g,{direction:"forward"}):Gt.deleteForward(g,{unit:"word"}))}}}),[s,b.onKeyDown]),onPaste:(0,o.useCallback)((e=>{s||!Fo(g,e.target)||Oo(e,b.onPaste)||gn&&!(e=>e.clipboardData&&""!==e.clipboardData.getData("text/plain")&&1===e.clipboardData.types.length)(e.nativeEvent)||(e.preventDefault(),Mo.insertData(g,e.clipboardData))}),[s,b.onPaste])}),i().createElement(Co,{decorations:C,node:g,renderElement:l,renderPlaceholder:u,renderLeaf:c,selection:g.selection}))))};function ei(e){return"[object Object]"===Object.prototype.toString.call(e)}var ti=e=>function(e){var t,r;return!1!==ei(e)&&(void 0===(t=e.constructor)||!1!==ei(r=t.prototype)&&!1!==r.hasOwnProperty("isPrototypeOf"))}(e)&&Array.isArray(e.redos)&&Array.isArray(e.undos)&&(0===e.redos.length||tr.isOperationList(e.redos[0]))&&(0===e.undos.length||tr.isOperationList(e.undos[0])),ri=(new WeakMap,new WeakMap),ni=new WeakMap,oi={isHistoryEditor:e=>ti(e.history)&&Gt.isEditor(e),isMerging:e=>ni.get(e),isSaving:e=>ri.get(e),redo(e){e.redo()},undo(e){e.undo()},withoutMerging(e,t){var r=oi.isMerging(e);ni.set(e,!1),t(),ni.set(e,r)},withoutSaving(e,t){var r=oi.isSaving(e);ri.set(e,!1),t(),ri.set(e,r)}},ii=function(e,t){var r=/\{\{(.+?)\}\}/g,n=/^\{\{(.+?)\}\}$/g,o=[];return e.replace(/\{#|#\}/g,"").split("+").forEach((function(e){if(e.match(r))if(e.match(n)){var i=e.replace(/\{\{|\}\}/g,""),a=(0,_.ab)(t,i),s=i.split("."),l=s[s.length-1];o.push({type:"variable",children:[{text:""}],variable:{defineSchema:a||{title:l,type:"string"},key:l,path:i,title:(null==a?void 0:a.title)||l,type:(null==a?void 0:a.type)||"string"}}),o.push({text:""})}else e.split(r).forEach((function(e,r){var n=e,i=(0,_.ab)(t,n),a=n.split("."),s=a[a.length-1];r%2?(o.push({type:"variable",children:[{text:""}],variable:{defineSchema:i||{title:s,type:"string"},key:s,path:n,title:(null==i?void 0:i.title)||s,type:(null==i?void 0:i.type)||"string"}}),o.push({text:""})):o.push({text:e.replace(/\'/g,"")})}));else o.push({text:e.replace(/\'/g,"")})})),o},ai=function(e,t,r){return[{type:"paragraph",children:t?ii(e,r):(null==e?void 0:e.origin)||[{text:""}]}]};const si=function(e){var t=e.children,r=e.value,n=e.onChange,o=e.onForceChange,s=e.customStringify,l=i().useMemo((function(){return function(e,t){var r=e.isInline,n=e.isVoid;return e.isInline=function(e){return"variable"===e.type||"formula"===e.type||r(e)},e.isVoid=function(e){return"variable"===e.type||n(e)},e.options=void 0,e}((e=>{var t=e,{apply:r,onChange:n,deleteBackward:o}=t;return Sn.set(t,new WeakMap),t.deleteBackward=r=>{if("line"!==r)return o(r);if(e.selection&&ur.isCollapsed(e.selection)){var n=Gt.above(e,{match:t=>Gt.isBlock(e,t),at:e.selection});if(n){var[,i]=n,a=Gt.range(e,i,e.selection.anchor),s=((e,t)=>{var r=Gt.range(e,ur.end(t)),n=Array.from(Gt.positions(e,{at:t})),o=0,i=n.length,a=Math.floor(i/2);if(Xo(e,Gt.range(e,n[o]),r))return Gt.range(e,n[o],r);if(n.length<2)return Gt.range(e,n[n.length-1],r);for(;a!==n.length&&a!==o;)Xo(e,Gt.range(e,n[a]),r)?i=a:o=a,a=Math.floor((o+i)/2);return Gt.range(e,n[i],r)})(t,a);ur.isCollapsed(s)||Pr.delete(e,{at:s})}}},t.apply=e=>{var n=[];switch(e.type){case"insert_text":case"remove_text":case"set_node":for(var[o,i]of Gt.levels(t,{at:e.path})){var a=Mo.findKey(t,o);n.push([i,a])}break;case"insert_node":case"remove_node":case"merge_node":case"split_node":for(var[s,l]of Gt.levels(t,{at:rr.parent(e.path)})){var c=Mo.findKey(t,s);n.push([l,c])}break;case"move_node":for(var[u,d]of Gt.levels(t,{at:rr.common(rr.parent(e.path),rr.parent(e.newPath))})){var m=Mo.findKey(t,u);n.push([d,m])}}for(var[p,b]of(r(e),n)){var[g]=Gt.node(t,p);En.set(g,b)}},t.setFragmentData=e=>{var{selection:r}=t;if(r){var[n,o]=ur.edges(r),i=Gt.void(t,{at:n.path}),a=Gt.void(t,{at:o.path});if(!ur.isCollapsed(r)||i){var s=Mo.toDOMRange(t,r),l=s.cloneContents(),c=l.childNodes[0];if(l.childNodes.forEach((e=>{e.textContent&&""!==e.textContent.trim()&&(c=e)})),a){var[u]=a,d=s.cloneRange(),m=Mo.toDOMNode(t,u);d.setEndAfter(m),l=d.cloneContents()}if(i&&(c=l.querySelector("[data-slate-spacer]")),Array.from(l.querySelectorAll("[data-slate-zero-width]")).forEach((e=>{var t="n"===e.getAttribute("data-slate-zero-width");e.textContent=t?"\n":""})),go(c)){var p=c.ownerDocument.createElement("span");p.style.whiteSpace="pre",p.appendChild(c),l.appendChild(p),c=p}var b=t.getFragment(),g=JSON.stringify(b),f=window.btoa(encodeURIComponent(g));c.setAttribute("data-slate-fragment",f),e.setData("application/x-slate-fragment",f);var h=l.ownerDocument.createElement("div");return h.appendChild(l),h.setAttribute("hidden","true"),l.ownerDocument.body.appendChild(h),e.setData("text/html",h.innerHTML),e.setData("text/plain",vo(h)),l.ownerDocument.body.removeChild(h),e}}},t.insertData=e=>{t.insertFragmentData(e)||t.insertTextData(e)},t.insertFragmentData=e=>{var r=e.getData("application/x-slate-fragment")||wo(e);if(r){var n=decodeURIComponent(window.atob(r)),o=JSON.parse(n);return t.insertFragment(o),!0}return!1},t.insertTextData=e=>{var r=e.getData("text/plain");if(r){var n=r.split(/\r\n|\r|\n/),o=!1;for(var i of n)o&&Pr.splitNodes(t,{always:!0}),t.insertText(i),o=!0;return!0}return!1},t.onChange=()=>{Xr().unstable_batchedUpdates((()=>{var e=_n.get(t);e&&e(),n()}))},t})((e=>{var t=e,{apply:r}=t;return t.history={undos:[],redos:[]},t.redo=()=>{var{history:e}=t,{redos:r}=e;if(r.length>0){var n=r[r.length-1];oi.withoutSaving(t,(()=>{Gt.withoutNormalizing(t,(()=>{for(var e of n)t.apply(e)}))})),e.redos.pop(),e.undos.push(n)}},t.undo=()=>{var{history:e}=t,{undos:r}=e;if(r.length>0){var n=r[r.length-1];oi.withoutSaving(t,(()=>{Gt.withoutNormalizing(t,(()=>{var e=n.map(tr.inverse).reverse();for(var r of e)t.apply(r)}))})),e.redos.push(n),e.undos.pop()}},t.apply=e=>{var{operations:n,history:o}=t,{undos:i}=o,a=i[i.length-1],s=a&&a[a.length-1],l=((e,t)=>!(!t||"set_selection"!==e.type||"set_selection"!==t.type))(e,s),c=oi.isSaving(t),u=oi.isMerging(t);if(null==c&&(c=((e,t)=>"set_selection"!==e.type||null!=e.properties&&null!=e.newProperties)(e)),c){if(null==u&&(u=null!=a&&(0!==n.length||((e,t)=>"set_selection"===e.type||!(!t||"insert_text"!==e.type||"insert_text"!==t.type||e.offset!==t.offset+t.text.length||!rr.equals(e.path,t.path))||!(!t||"remove_text"!==e.type||"remove_text"!==t.type||e.offset+e.text.length!==t.offset||!rr.equals(e.path,t.path)))(e,s)||l)),a&&u)l&&a.pop(),a.push(e);else{var d=[e];i.push(d)}for(;i.length>100;)i.shift();(e=>"set_selection"!==e.type)(e)&&(o.redos=[])}r(e)},t})((()=>{var e={children:[],operations:[],selection:null,marks:null,isInline:()=>!1,isVoid:()=>!1,onChange:()=>{},apply:t=>{for(var r of Gt.pathRefs(e))nr.transform(r,t);for(var n of Gt.pointRefs(e))sr.transform(n,t);for(var o of Gt.rangeRefs(e))dr.transform(o,t);var i,a,s=nt.get(e)||[],l=ot.get(e)||new Set,c=e=>{if(e){var t=e.join(",");a.has(t)||(a.add(t),i.push(e))}};if(rr.operationCanTransformPath(t))for(var u of(i=[],a=new Set,s))c(rr.transform(u,t));else i=s,a=l;var d=(e=>{switch(e.type){case"insert_text":case"remove_text":case"set_node":var{path:t}=e;return rr.levels(t);case"insert_node":var{node:r,path:n}=e,o=rr.levels(n),i=hr.isText(r)?[]:Array.from(Xt.nodes(r),(e=>{var[,t]=e;return n.concat(t)}));return[...o,...i];case"merge_node":var{path:a}=e;return[...rr.ancestors(a),rr.previous(a)];case"move_node":var{path:s,newPath:l}=e;if(rr.equals(s,l))return[];var c=[],u=[];for(var d of rr.ancestors(s)){var m=rr.transform(d,e);c.push(m)}for(var p of rr.ancestors(l)){var b=rr.transform(p,e);u.push(b)}var g=u[u.length-1],f=l[l.length-1],h=g.concat(f);return[...c,...u,h];case"remove_node":var{path:v}=e;return[...rr.ancestors(v)];case"split_node":var{path:y}=e;return[...rr.levels(y),rr.next(y)];default:return[]}})(t);for(var m of d)c(m);nt.set(e,i),ot.set(e,a),Pr.transform(e,t),e.operations.push(t),Gt.normalize(e),"set_selection"===t.type&&(e.marks=null),it.get(e)||(it.set(e,!0),Promise.resolve().then((()=>{it.set(e,!1),e.onChange(),e.operations=[]})))},addMark:(t,r)=>{var{selection:n}=e;if(n)if(ur.isExpanded(n))Pr.setNodes(e,{[t]:r},{match:hr.isText,split:!0});else{var o=dt(dt({},Gt.marks(e)||{}),{},{[t]:r});e.marks=o,it.get(e)||e.onChange()}},deleteBackward:t=>{var{selection:r}=e;r&&ur.isCollapsed(r)&&Pr.delete(e,{unit:t,reverse:!0})},deleteForward:t=>{var{selection:r}=e;r&&ur.isCollapsed(r)&&Pr.delete(e,{unit:t})},deleteFragment:t=>{var{selection:r}=e;r&&ur.isExpanded(r)&&Pr.delete(e,{reverse:"backward"===t})},getFragment:()=>{var{selection:t}=e;return t?Xt.fragment(e,t):[]},insertBreak:()=>{Pr.splitNodes(e,{always:!0})},insertFragment:t=>{Pr.insertFragment(e,t)},insertNode:t=>{Pr.insertNodes(e,t)},insertText:t=>{var{selection:r,marks:n}=e;if(r){if(n){var o=dt({text:t},n);Pr.insertNodes(e,o)}else Pr.insertText(e,t);e.marks=null}},normalizeNode:t=>{var[r,n]=t;if(!hr.isText(r))if(Vt.isElement(r)&&0===r.children.length)Pr.insertNodes(e,{text:""},{at:n.concat(0),voids:!0});else for(var o=!Gt.isEditor(r)&&Vt.isElement(r)&&(e.isInline(r)||0===r.children.length||hr.isText(r.children[0])||e.isInline(r.children[0])),i=0,a=0;a<r.children.length;a++,i++){var s=Xt.get(e,n);if(!hr.isText(s)){var l=r.children[a],c=s.children[i-1],u=a===r.children.length-1;(hr.isText(l)||Vt.isElement(l)&&e.isInline(l))!==o?(Pr.removeNodes(e,{at:n.concat(i),voids:!0}),i--):Vt.isElement(l)?e.isInline(l)&&(null!=c&&hr.isText(c)?u&&(Pr.insertNodes(e,{text:""},{at:n.concat(i+1),voids:!0}),i++):(Pr.insertNodes(e,{text:""},{at:n.concat(i),voids:!0}),i++)):null!=c&&hr.isText(c)&&(hr.equals(l,c,{loose:!0})?(Pr.mergeNodes(e,{at:n.concat(i),voids:!0}),i--):""===c.text?(Pr.removeNodes(e,{at:n.concat(i-1),voids:!0}),i--):""===l.text&&(Pr.removeNodes(e,{at:n.concat(i),voids:!0}),i--))}}},removeMark:t=>{var{selection:r}=e;if(r)if(ur.isExpanded(r))Pr.unsetNodes(e,t,{match:hr.isText,split:!0});else{var n=dt({},Gt.marks(e)||{});delete n[t],e.marks=n,it.get(e)||e.onChange()}}};return e})())))}),[]),c=(0,a.useRecoilValue)(N),u=(0,a.useRecoilValue)(H),d=(0,a.useRecoilValue)(z),m=i().useRef(!1),p=i().useRef(!1),b=i().useState(ai(r,u,c)),g=(0,te.Z)(b,2),f=g[0],h=g[1],v=i().useState((0,_.O1)(12)),y=(0,te.Z)(v,2),w=y[0],A=y[1];return i().useEffect((function(){p.current?!0===m.current?m.current=!1:o(r):p.current=!0}),[JSON.stringify(r)]),i().useEffect((function(){h(ai(r,u,c)),A((0,_.O1)(12))}),[u]),i().createElement(Yo,{key:w,editor:l,value:f,onChange:function(e){var t;m.current=!0,h(e),n&&n((0,x.Ws)(null===(t=e[0])||void 0===t?void 0:t.children,u,s,d))}},t)};var li=r(6640);function ci(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function ui(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function di(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ui(Object(r),!0).forEach((function(t){(0,b.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ui(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var mi=function(e){return i().createElement("span",e.attributes,e.children)},pi=function(e){var t=e.attributes,r=e.element.variable,o="array"===r.type?"array":r.defineSchema.nodeType||r.defineSchema.type,a=$n(),s=_.Yk[o]||_.Yk.object;return i().createElement("span",(0,n.Z)({},t,{className:"tag-element",style:{backgroundColor:"".concat(null==s?void 0:s.color,a?"50":"10"),border:"1px solid ".concat(null==s?void 0:s.color),color:s.color}}),i().createElement("div",{className:"tag-element-flex"},i().createElement("span",{style:{paddingRight:"6px"}},r.title.split(".").map((function(e){return _t1(e)})).join(".")),i().createElement("span",{style:{display:"inline-block"}},i().createElement(_.Pt,{type:o}))),e.children)},bi=function(e){var t=e.attributes,r=(e.element,$n()),o=(0,a.useSetRecoilState)(G);return i().useEffect((function(){o(r)}),[r]),i().createElement("span",(0,n.Z)({},t,{className:"formula-element"}),e.children)},gi=i().forwardRef((function(e,t){var r=useI18n().t,n=e.onForceChange,o=(0,a.useRecoilValue)(P),s=(0,a.useSetRecoilState)(M),l=(0,a.useRecoilValue)(j),c=((0,a.useRecoilValue)(H),(0,a.useRecoilValue)(z)),u=(0,a.useRecoilValue)(G),d=(0,a.useSetRecoilState)(G),m="single"===l,b=co(),g=fi(b),f=(0,te.Z)(g,2),h=f[0],v=f[1],y=function(e){var t=e.variable,r=(null==h?void 0:h.variableLocation)||b.selection,n=null;hi.getVariableNode(b,r)?(Pr.setNodes(b,{variable:t},{match:function(e){return"variable"===e.type},at:r||b.selection,select:!0}),n=r):Pr.insertNodes(b,{type:"variable",children:[{text:""}],variable:t},{at:r,select:!0}),m||(v(di(di({},p().cloneDeep(h)),{},{variable:t,variableLocation:n})),Mo.focus(b))},w=function(e){var t=e.text,r=h.functionLocation||b.selection;Pr.insertText(b,"".concat(t,"()"),{at:r}),Mo.focus(b),Pr.move(b,{distance:1,reverse:!0})},A=function(e){var t=e.text,r=h.wordLocation||b.selection;Pr.insertText(b,"".concat(t,"()"),{at:r}),Mo.focus(b),Pr.move(b,{distance:1,reverse:!0})},x=function(e){var t=e.text,r=h.functionLocation||b.selection;Pr.insertText(b,"".concat(t," "),{at:r}),Mo.focus(b)},k=function(){var e=(null==h?void 0:h.variableLocation)||b.selection;Pr.insertNodes(b,[{type:"formula",children:[{text:""}]},{text:""}],{at:e})},C=function(){n&&n(null),setTimeout((function(){s({variable:null}),d(!1)}),300)},D=function(e){e&&e.length&&(b.children=e)},E=function(){Mo.focus(b)};return i().useImperativeHandle(t,(function(){return{insertVariable:y,insertFunction:w,insertWordFunction:A,insertText:x,insertFormula:k,clear:C,setValue:D,focus:E}})),i().useEffect((function(){s(h)}),[JSON.stringify(h)]),i().createElement("div",{className:"iot-editor-slate",style:{width:"100%",height:"100%",padding:"0 10px"}},i().createElement($o,{placeholder:r(c?"请输入公式，语法为JavaScript":"请选择变量"),renderElement:function(e){switch(e.element.type){case"variable":return i().createElement(pi,e);case"formula":return i().createElement(bi,e);default:return i().createElement(mi,e)}},onKeyDown:function(e){l&&!u&&-1===["Backspace","ArrowRight","ArrowLeft"].indexOf(e.key)&&e.preventDefault(),"Enter"===e.key&&e.preventDefault()}}),m&&hi.isVariableEmpty(null==o?void 0:o.origin)?i().createElement("div",{className:"iot-editor-slate-close",onClick:C,style:{cursor:"pointer"}},i().createElement(li.CloseOutlined,null)):null)})),fi=function(e){var t=(0,a.useRecoilValue)(z),r=i().useState({variable:null,variableLocation:null,functionText:null,functionLocation:null}),n=(0,te.Z)(r,2),o=n[0],s=n[1];return i().useEffect((function(){var r={variable:null,variableLocation:null,functionText:null,functionLocation:null};if(e.selection){var n=hi.getVariableNode(e);if(n)r.variable=n,r.variableLocation=e.selection;else{var o,i,a,l=p().cloneDeep(e.selection.focus);l.offset=0;var c=hi.getString(e,{anchor:e.selection.anchor,focus:l});if(t||3===(null===(o=e.selection)||void 0===o||null===(i=o.focus)||void 0===i||null===(a=i.path)||void 0===a?void 0:a.length)){var u=null==c?void 0:c.lastIndexOf(".");if((u||0===u)&&-1!==u){var d=p().cloneDeep(e.selection.focus),m=p().cloneDeep(e.selection.focus);d.offset=u,m.offset=u+1;var b={anchor:m,focus:e.selection.focus};r.functionText=hi.getString(e,b),r.functionLocation=b;var g=Gt.before(e,{anchor:d,focus:d}),f=hi.getVariableNode(e,{anchor:g,focus:g});f&&(r.variable=f,r.variableLocation=r.functionText?e.selection:{anchor:g,focus:g})}for(var h=-1,v=0,y=["+","-","*","/","%","&&","||","!","==","!=","===","!==",">",">=","<","<="];v<y.length;v++){var w=y[v],A=null==c?void 0:c.lastIndexOf(w);A>h&&(h=A)}var x=p().cloneDeep(e.selection.focus);x.offset=h+1;var k={anchor:x,focus:e.selection.focus};r.wordText=hi.getString(e,k),r.wordLocation=k}}}s(r)}),[e.selection]),[o,s]},hi={getString:function(e,t){return e.selection&&Gt.string(e,t)},getVariableNode:function(e){var t,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.selection,n=Gt.nodes(e,{match:function(e){return"variable"===e.type},at:r}),o=(0,te.Z)(n,1)[0];return o?null===(t=o[0])||void 0===t?void 0:t.variable:null},isVariableEmpty:function(e){if(e&&e.length){var t,r=function(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return ci(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?ci(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,s=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){s=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(s)throw i}}}}(e);try{for(r.s();!(t=r.n()).done;){var n=t.value;if(null!=n&&n.type)return!0}}catch(e){r.e(e)}finally{r.f()}}return!1}};const vi=gi;var yi=r(1821);function wi(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Ai(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?wi(Object(r),!0).forEach((function(t){(0,b.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):wi(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var xi=function(){var e=(0,l.Z)(u().mark((function e(t,r,n,o){var i,a,s,l,c,d,m,b,g,f,h;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(a=t,s=r.variable,c=(l=s||{}).path,d=l.type,m=l.title,b=l.lastType,!r.functionText){e.next=13;break}if(null===(g=ki(d,r.functionText))||void 0===g||!g.length){e.next=8;break}return e.abrupt("return",[]);case 8:c=null,d=null,m=null;case 11:e.next=21;break;case 13:if(!c){e.next=21;break}if(a=(0,_.ab)(t,c),!o||!a.loading){e.next=21;break}return e.next=18,o(a,s);case 18:f=e.sent,a.properties=Ai(Ai({},a.properties),f),a.loading=!1;case 21:return h=p().keys(null===(i=a)||void 0===i?void 0:i.properties)||[],e.abrupt("return",h.map((function(e){var t=p().cloneDeep(a.properties[e]);return"string"===t.type&&t.format&&(t.type="time"),delete t.properties,{path:c?"".concat(c,".").concat("array"===b?"#.":"").concat(e):e,type:d?"".concat(d,".").concat(t.type):t.type,title:m?"".concat(m,".").concat(t.title||e):t.title||e,defineSchema:t,key:e}})).filter((function(e){return!n||"object"===e.defineSchema.type||(p().isArray(n)&&n.length?-1!==n.indexOf(e.defineSchema.type)||-1!==n.indexOf(e.defineSchema.nodeType):!p().isFunction(n)||n({defineSchema:e.defineSchema}))})));case 23:case"end":return e.stop()}}),e)})));return function(t,r,n,o){return e.apply(this,arguments)}}(),ki=function(e,t){return e?Object.getOwnPropertyNames(_.Yk[e].Creator.prototype).filter((function(e){return-1!==e.indexOf(t)&&"constructor"!==e&&!/^__/.test(e)})):[]},Ci=function(e){var t=e.parentVariable,r=e.onClick,n=t||{},o=n.title,a=void 0===o?"":o,s=n.path,l=n.type,c=i().useState(null),u=(0,te.Z)(c,2),d=u[0],m=u[1],p=function(e){if("变量列表"===e)m("变量列表"),r&&r({variable:null});else{var t=s.split("."),n=l.split("."),o=a.split("."),i=t.splice(0,e+1).join("."),c=n.splice(0,e+1).join("."),u=o.splice(0,e+1).join(".");m(u),r&&r({variable:{path:i,type:c,title:u}})}};return i().useEffect((function(){m("")}),[a]),i().createElement("div",{className:"select-panel-breadcrumb"},i().createElement(yi.Breadcrumb,null,i().createElement(yi.Breadcrumb.Item,{onClick:function(){p("变量列表")}},i().createElement("a",null,_t1("变量列表"))),"变量列表"===d?null:(d||a).split(".").map((function(e,t){return i().createElement(yi.Breadcrumb.Item,{onClick:function(){p(t)}},i().createElement("a",{style:{display:"inline-block",maxWidth:"100px",overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"}},_t1(e)))}))))};const Di=function(e){var t,r,n=e.editorRef,o=e.onFull,s=e.onForceChange,c=e.querySchema,d=e.customStringify,m=(0,a.useRecoilValue)(Q),b=(0,a.useRecoilValue)(ee),g=(0,a.useRecoilValue)(M),f=(0,a.useRecoilValue)(W),h=(0,a.useRecoilValue)(V),v=(0,a.useRecoilValue)(U),y=(0,a.useRecoilValue)(j),w=(0,a.useSetRecoilState)(M),A=(0,a.useRecoilValue)(z),k=(0,a.useRecoilValue)(H),E=(0,a.useRecoilValue)(G),S=(0,a.useRecoilValue)(X),B=(0,a.useRecoilValue)($),F=(0,a.useRecoilValue)(J),T=(null==g?void 0:g.variable)||{},O=T.type,I=(T.title,i().useState(null)),R=(0,te.Z)(I,2),N=R[0],P=R[1],L=i().useState(null),Z=(0,te.Z)(L,2),q=Z[0],K=Z[1],Y=i().useState([]),re=(0,te.Z)(Y,2),ne=re[0],oe=re[1],ie=function(e){e.insert?y&&!E?(s((0,x.Ws)([{type:"variable",children:[{text:""}],variable:e.variable}],k,d)),setTimeout((function(){w({variable:e.variable})}),300)):"variable"===e.type?n.current.insertVariable({variable:e.variable}):"function"===e.type?n.current.insertFunction({text:e.name}):"wordFunction"===e.type?n.current.insertWordFunction({text:e.name}):"attr"===e.type&&n.current.insertText({text:e.name}):w({variable:e.variable}),e.close},ae=function(e,t){if("variable"===t){var r=(0,_.TS)(e),n=r.type,o=r.lastType;e.type=n,e.lastType=o,p().isArray(h)&&h.length&&h.indexOf(e.defineSchema.type),p().isFunction(h)&&h({defineSchema:e.defineSchema});var i={type:t,variable:e,insert:!f||e.defineSchema.nodeType===f,close:"object"!==e.defineSchema.type&&"array"!==e.defineSchema.type};p().isUndefined(e.defineSchema.insert)||(i.insert=e.defineSchema.insert),ie(i)}else ie({name:e,type:t,insert:!0})},se=function(e,t,r){P({title:r.title,type:r.nodeType,description:C(D,e||t,t)})};i().useEffect((function(){K(null)}),[JSON.stringify(g)]);var le=function(){var e=(0,l.Z)(u().mark((function e(t){var r,n,o,i,a,s;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.schema,n=t.breadvariable,o=t.varAndFun,i=t.limit,a=t.querySchema,e.next=3,xi(r,n||o,i,a);case 3:s=e.sent,oe(s);case 5:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}();i().useEffect((function(){le({schema:m,breadvariable:q,varAndFun:g,limit:h,querySchema:c})}),[m,q,g,h,c]);var ce=ki(O,g.functionText),ue=function(e,t){return t&&-1!==t.indexOf("Properties")?e:t||e};return i().createElement("div",{className:"iot-editor-variable-select"},v?i().createElement("div",{className:"iot-editor-variable-select-loading"},i().createElement(yi.Spin,null)):i().createElement(i().Fragment,null,i().createElement("div",{className:"expected-line",style:{height:"34px",lineHeight:"34px"}},i().createElement("span",{className:"error"},F),i().createElement("span",{className:"expected-type"},i().createElement(yi.Tooltip,{placement:"top",title:_t1(null===(t=_.Yk[b.type])||void 0===t?void 0:t.title)},i().createElement(_.Pt,{type:b.type}))),A||E?null:i().createElement("span",{title:_t1("插入公式"),className:"full-dialog-icon",onClick:function(){"single"===y?s((0,x.Ws)([{type:"formula",children:[{text:" "}]},{text:" "}],k,d)):n.current.insertFormula({text:""})}},i().createElement("i",{className:"editor-iconfont",dangerouslySetInnerHTML:{__html:"&#xea66;"}})),o?i().createElement("span",{title:_t1("全屏"),className:"full-dialog-icon",onClick:o},i().createElement("i",{className:"editor-iconfont",dangerouslySetInnerHTML:{__html:"&#xea11;"}})):null),i().createElement("div",{style:{width:"100%",borderBottom:"1px #E1E1E1 solid"}}),i().createElement("div",{className:"iot-editor-select-panel"},i().createElement(Ci,{parentVariable:null==g?void 0:g.variable,onClick:function(e){K(e)}}),ne.length||ce.length?i().createElement("div",{className:"select-panel-content"},i().createElement("div",{className:"select-panel-list"},ne.length?i().createElement(i().Fragment,null,i().createElement("div",{className:"select-panel-title"},"变量"),ne.map((function(e){return i().createElement("div",{className:"select-panel-item",onClick:function(){!function(e){"function"===e.defineSchema.nodeType?ae(e.defineSchema.title,e.defineSchema.nodeType):ae(e,"variable")}(e)},onMouseOver:function(){!function(e){var t=(0,_.ab)(m,e.path);P(t),t.nodeType}(e)}},i().createElement(_.Pt,{type:ue(e.defineSchema.type,e.defineSchema.nodeType)||"object"}),i().createElement("div",{className:"select-panel-item-title",title:_t1(e.defineSchema.title||e.key)},_t1(e.defineSchema.title||e.key)))}))):null,ce.length?i().createElement(i().Fragment,null,i().createElement("div",{className:"select-panel-title"},_.Yk[O].title,"类型函数"),ce.map((function(e){var t="function"==typeof _.Yk[O].Creator.prototype[e]?{title:_r("函数"),type:"function"}:{title:_r("属性"),type:"attr"};return i().createElement("div",{className:"select-panel-item",onClick:function(){ae(e,t.type)},onMouseOver:function(){!function(e,t,r){P({title:t,type:r,description:C(D,{string:"String",number:"Number",time:"String",array:"Array",object:"Object",boolean:"Boolean"}[e],t)})}(O,e,t.type)}},i().createElement(_.Pt,{type:t.type}),e)}))):null,(A||E)&&null!=S&&S.length?S.map((function(e){var t=p().keys(e.properties).filter((function(e){return!g.wordText||-1!==e.indexOf(p().trim(g.wordText))}));return null!=t&&t.length?i().createElement(i().Fragment,null,i().createElement("div",{className:"select-panel-title"},e.title),t.map((function(t){return i().createElement("div",{className:"select-panel-item",onClick:function(){ae(t,"wordFunction")},onMouseOver:function(){se(e.id,t.split(".").reverse()[0],e.properties[t])}},i().createElement(_.Pt,{type:"function"}),t)}))):null})):null,null!=B&&B.length?B.map((function(e){var t=p().keys(e.properties).filter((function(e){return!g.wordText||-1!==e.indexOf(p().trim(g.wordText))}));return null!=t&&t.length?i().createElement(i().Fragment,null,i().createElement("div",{className:"select-panel-title"},e.title),t.map((function(t){return i().createElement("div",{className:"select-panel-item",onClick:function(){ae(t,"attr")},onMouseOver:function(){se(e.id,t.split(".").reverse()[0],e.properties[t])}},t)}))):null})):null),i().createElement("div",{className:"select-panel-detail"},N?i().createElement(i().Fragment,null,i().createElement("div",{className:"detail-title"},i().createElement("div",null,_t1(N.title)),i().createElement("div",{className:"detail-type"},i().createElement(_.Pt,{type:N.nodeType||N.type}),_t1(null===(r=_.Yk[N.nodeType||N.type])||void 0===r?void 0:r.title))),i().createElement("div",{className:"detail-description",style:{fontSize:14}},N.description)):null)):null)))},Ei=function(e){var t=e.variableRef,r=e.onFull,a=e.show,s=e.setShow,l=e.notfocusedShow,c=(0,o.useContext)(Jo),u=i().useState(!1),d=(0,te.Z)(u,2),m=d[0],p=d[1],b=i().useState(null),g=(0,te.Z)(b,2),f=g[0],h=g[1];return i().useEffect((function(){var e=document.querySelector(".iot-editor-slate-panel");e||((e=document.createElement("div")).className="iot-editor-slate-panel",document.body.appendChild(e)),h(e)}),[]),i().useEffect((function(){var e,r=null===(e=t.current)||void 0===e?void 0:e.getBoundingClientRect();c&&!l||a?document.body.clientHeight-r.top>268?p({display:"block",position:"absolute",width:r.width,top:r.top+r.height,left:r.left,zIndex:9999}):p({display:"block",position:"absolute",width:r.width,top:r.top-268,left:r.left,zIndex:9999}):p({display:"none"})}),[c,a]),f?ReactDOM.createPortal(i().createElement("div",{className:"iot-editor-variable-panel",style:m,onMouseEnter:function(){s(!0)},onMouseLeave:function(){s(!1)}},i().createElement(Di,(0,n.Z)({},e,{onFull:function(){p({display:"none"}),r()},style:m,setShow:s}))),f):null},Si=function(e){var t=e.visible,r=e.value,n=(e.onChange,e.onCancel),o=e.onForceChange,s=e.customStringify,l=e.querySchema,c=i().useRef(null),u=i().useState(null),d=(0,te.Z)(u,2),m=d[0],p=d[1],b=(0,a.useRecoilValue)(R),g=(0,a.useRecoilValue)(z),f=(0,a.useSetRecoilState)(J),h=(0,a.useRecoilValue)(H),v=(0,a.useRecoilValue)(Y);return i().useEffect((function(){p(r)}),[r]),i().createElement(yi.Modal,{title:"公式编辑",visible:t,width:1e3,style:{height:"90%"},onCancel:function(){o&&o((0,x.Ws)(null==m?void 0:m.origin,h,s,g)),n()},onOk:function(){var e=A((null==m?void 0:m.origin)||[],g,v);e?f(e):(f(null),o&&o((0,x.Ws)(null==m?void 0:m.origin,h,s,g)),n())},bodyStyle:{padding:0},destroyOnClose:!0,maskTransitionName:"",transitionName:"",wrapClassName:"iot-editor-variable"},i().createElement("div",{key:b,style:{height:"100%"}},i().createElement(si,{value:r,onChange:function(e){p(e)},onForceChange:o,customStringify:s},i().createElement("div",{className:"iot-editor-variable-dlg-formula"},i().createElement(vi,{ref:c,onForceChange:o,value:r})),i().createElement(Di,{editorRef:c,onForceChange:o,querySchema:l,customStringify:s}))))};function Bi(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Fi(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Bi(Object(r),!0).forEach((function(t){(0,b.Z)(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Bi(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}const Ti=function(e){var t=e.rootRef,r=e.style,n=e.value,o=e.hasPanel,s=void 0===o||o,l=e.onChange,c=e.onForceChange,u=e.panelWidth,d=(e.select,e.panelVisible),m=e.panelTargetRef,p=e.customStringify,b=e.querySchema,g=e.notfocusedShow,f=i().useRef(null),h=i().useRef(null),v=i().useState(!1),y=(0,te.Z)(v,2),w=y[0],A=y[1],x=i().useState(!1),k=(0,te.Z)(x,2),C=k[0],D=k[1],E=(0,a.useRecoilValue)(R),S=i().useRef(!1),B=function(){A(!0),D(!1)};return i().useImperativeHandle(t,(function(){return{insertVariable:h.current.insertVariable,insertFunction:h.current.insertFunction,insertText:h.current.insertText,clear:h.current.clear,show:function(){D(!C)},full:function(){B()}}})),i().useEffect((function(){S.current?D(!C):S.current=!0}),[d]),i().createElement("div",{ref:f,key:E,className:"iot-editor-slate-wrap",style:Fi({position:"relative"},r)},i().createElement(si,{value:n,onChange:l,customStringify:p,onForceChange:c},i().createElement(vi,{ref:h,style:r,onForceChange:c}),s?i().createElement(Ei,{editorRef:h,width:u,variableRef:m||f,onFull:B,show:C,setShow:D,onForceChange:c,querySchema:b,customStringify:p,notfocusedShow:g}):null),i().createElement(Si,{visible:w,value:n,onChange:l,onForceChange:c,querySchema:b,onCancel:function(){A(!1)},customStringify:p}))};var Oi=function(e){var t=e.rootRef,n=e.style,o=e.schema,s=e.data,c=e.value,d=e.hasPanel,m=void 0===d||d,b=e.onChange,g=e.onSelectVarAndFun,f=e.onExpected,h=e.panelWidth,v=e.select,y=e.panelVisible,w=e.panelTargetRef,A=e.hasLoading,x=e.limit,k=e.nodeType,C=e.stringify,D=e.funcExt,E=void 0===D?["formulajs","lodash","Math","moment"]:D,S=e.attrExt,B=void 0===S?[]:S,F=e.isModal,T=e.modalVisible,O=e.onModalCancel,I=e.isFormula,J=e.customStringify,Q=e.querySchema,X=e.notfocusedShow,$=(0,a.useSetRecoilState)(R);!function(e){var t=e.schema,n=e.funcExt,o=e.attrExt,s=e.value,c=e.data,d=e.select,m=e.hasLoading,b=e.nodeType,g=e.limit,f=e.onExpected,h=e.onSelectVarAndFun,v=e.stringify,y=e.isFormula,w=(0,a.useRecoilValue)(G),A=(0,a.useSetRecoilState)(N),x=(0,a.useSetRecoilState)(P),k=(0,a.useSetRecoilState)(L),C=(0,a.useRecoilValue)(ee),D=(0,a.useRecoilValue)(M),E=(0,a.useSetRecoilState)(j),S=(0,a.useSetRecoilState)(U),B=(0,a.useSetRecoilState)(W),F=(0,a.useSetRecoilState)(V),T=(0,a.useSetRecoilState)(H),O=(0,a.useSetRecoilState)(Z),I=(0,a.useSetRecoilState)(q),_=(0,a.useSetRecoilState)(z),R=(0,a.useSetRecoilState)(K),J=(0,a.useSetRecoilState)(Y);i().useEffect((function(){if(t){var e=p().cloneDeep(t);A(e)}}),[JSON.stringify(t)]),i().useEffect((function(){O(n)}),[JSON.stringify(n)]),i().useEffect((function(){I(o)}),[JSON.stringify(o)]),i().useEffect((function(){x(p().cloneDeep(s))}),[JSON.stringify(s)]),i().useEffect((function(){k(c)}),[JSON.stringify(c)]),i().useEffect((function(){f&&f(C)}),[JSON.stringify(C)]),i().useEffect((function(){h&&h(D)}),[JSON.stringify(D)]),i().useEffect((function(){E(d)}),[d]),i().useEffect((function(){S(m||null)}),[m]),i().useEffect((function(){B(b||null)}),[b]),i().useEffect((function(){F(w?null:g||null)}),[g,w]),i().useEffect((function(){T(v||!1)}),[v]),i().useEffect((function(){_(y||!1)}),[y]),i().useEffect((function(){(0,l.Z)(u().mark((function e(){var t;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.e(1590).then(r.bind(r,1590));case 2:t=e.sent,R(t);case 4:case"end":return e.stop()}}),e)})))()}),[]),i().useEffect((function(){(0,l.Z)(u().mark((function e(){var t;return u().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,r.e(1072).then(r.t.bind(r,1072,23));case 2:t=e.sent,J(t);case 4:case"end":return e.stop()}}),e)})))()}),[])}({schema:o,funcExt:E,attrExt:B,value:c,data:s,select:v,hasLoading:A,nodeType:k,limit:x,onExpected:f,onSelectVarAndFun:g,isFormula:I,stringify:C});var te=function(e,t){b(e),$((0,_.O1)(12))};return F?i().createElement(Si,{visible:T,value:c,onChange:b,onCancel:O,onForceChange:te,customStringify:J,querySchema:Q}):i().createElement(Ti,{rootRef:t,style:n,value:c,hasPanel:m,onChange:b,onForceChange:te,panelWidth:h,select:v,panelVisible:y,panelTargetRef:w,stringify:C,customStringify:J,querySchema:Q,notfocusedShow:X})};const Ii=i().forwardRef((function(e,t){return i().createElement(a.RecoilRoot,null,i().createElement(Oi,(0,n.Z)({},e,{rootRef:e.rootRef||t})))}))},6362:(e,t,r)=>{"use strict";r.d(t,{Pt:()=>p,Cy:()=>g,ab:()=>s,TS:()=>m,O1:()=>b,c8:()=>f,Yk:()=>l});var n=r(1002),o=r(2611),i=r.n(o),a=r(5907),s=function(e,t){var r=i().cloneDeep(e);return t.split(".").filter((function(e){return"#"!=e})).forEach((function(e){var t,n,o,i;if(!(r=(null===(t=r)||void 0===t?void 0:t.properties)&&(null===(n=r)||void 0===n?void 0:n.properties[e])))return null;"array"===r.type&&(r={type:"array",title:r.title,properties:null===(o=r)||void 0===o||null===(i=o.items)||void 0===i?void 0:i.properties})})),r},l={string:{title:_r("文本"),data:"文本",color:"#FFAE70",Creator:String},number:{title:_r("数字"),data:123,color:"#478FF2",Creator:Number},boolean:{title:_r("布尔"),data:123,color:"#B0E967",Creator:Boolean},time:{title:_r("日期"),data:"2021-12-20",color:"#79E2C2",Creator:String},object:{title:_r("对象"),data:{a:"1"},color:"#7A90FF",Creator:Object},array:{title:_r("数组"),data:["aa","bb"],color:"#FFA19B",Creator:Array},function:{title:_r("函数"),icon:"&#xeacb;"},attr:{title:_r("属性"),icon:"&#xeaad;"},table:{title:_r("工作表"),color:"#F89F7F"},model:{title:_r("模型"),color:"#AD88F6"},node:{title:_r("资产"),color:"#73D8E6"},user:{title:_r("用户"),color:"#666FA6"},nodeDataPoint:{title:_r("数据点"),color:"#EDABFF"},tableRecord:{title:_r("工作表记录"),color:"#4D2EDC"},bytesArray:{title:_r("字节数组"),color:"#59AC45"}};function c(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,t){if(e){if("string"==typeof e)return u(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?u(e,t):void 0}}(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,s=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return a=e.done,e},e:function(e){s=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(s)throw i}}}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var d=function(e){if(!e||!e.split)return null;var t=e.split(".");return t[t.length-1]},m=function(e){var t=e.type,r={type:d(t),lastType:d(t)};return-1!==t.indexOf("array")&&(r.type="array"),r},p=function(e){var t=e.type;if(!t)return null;var n=l[t]||l.object,o=n.title,i=(n.color,n.icon);return o?React.createElement("div",{class:"editor-svg-icon"},i?React.createElement("i",{className:"editor-iconfont",dangerouslySetInnerHTML:{__html:i}}):React.createElement(a.Icon,{svg:r(8074)("./".concat(o,".svg"))})):null};function b(e){e=e||32;for(var t="",r=0;r<e;r++)t+="ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678".charAt(Math.floor(48*Math.random()));return t}var g=function e(t,r){var o={type:"object",properties:{}};if(r&&(o.title=r),i().isPlainObject(t)){var a,s=c(i().keys(t));try{for(s.s();!(a=s.n()).done;){var l=a.value,u=t[l];i().isPlainObject(u)?o.properties[l]=e(u,l):i().isArray(u)?o.properties[l]={title:l,type:"array",items:{}}:o.properties[l]={title:l,type:(0,n.Z)(u)}}}catch(e){s.e(e)}finally{s.f()}}return o},f=function e(t,r){var n,o=r||{},a=c(i().keys(null==t?void 0:t.properties));try{for(a.s();!(n=a.n()).done;){var s=n.value,u=t.properties[s];if("object"===u.type)o[s]={},e(u,o[s]);else if("array"===u.type){var d;o[s]=[{}],null!=u&&null!==(d=u.items)&&void 0!==d&&d.properties&&e({properties:u.items.properties},o[s][0])}else{var m;o[s]=null===(m=l[u.type])||void 0===m?void 0:m.data}}}catch(e){a.e(e)}finally{a.f()}return o}},7956:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Qx:()=>editorValueEval,Ws:()=>getEditorValue});var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1002),lodash__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2611),lodash__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__),compiledTemplate=function(e,t){try{if(e&&t){var r=e.replace("#$systemVariable","systemVariable"),n=JSON.parse(JSON.stringify(t).replace("#$systemVariable","systemVariable"));return lodash__WEBPACK_IMPORTED_MODULE_0___default().template(r,{interpolate:/{{([\s\S]+?)}}/g})(n)}return""}catch(e){return""}},expressionEval=function expressionEval(expressionStr,data){try{var expression=compiledTemplate(expressionStr,data),result=eval(expression),type=(0,_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__.Z)(result);return"object"===type&&result instanceof Array&&(type="array"),{error:!1,result,type,reality:!!data}}catch(e){return{error:!0,result:_r("公式错误"),type:"string",reality:!!data}}},elementStringify=function(e,t){if("variable"===e.type&&e.variable)return"{{".concat(e.variable.path,"}}");if("formula"===e.type){if(t){var r=editorValueStringify(e.children),n=expressionEval(r,t).result;return lodash__WEBPACK_IMPORTED_MODULE_0___default().isString(n)?n:"".concat(JSON.stringify(n))}return"{#".concat(editorValueStringify(e.children),"#}")}return e.text},editorValueStringify=function(e,t){return lodash__WEBPACK_IMPORTED_MODULE_0___default().isArray(e)?e.map((function(e){return t?t(e,elementStringify):elementStringify(e)})).join(""):""},editorValueEval=function(e,t){if(lodash__WEBPACK_IMPORTED_MODULE_0___default().isArray(e)&&e.length){var r=e.filter((function(e){return e.type||""!==e.text}));if(1===r.length){var n=r[0];return"variable"===n.type?lodash__WEBPACK_IMPORTED_MODULE_0___default().get(t,n.variable.path):"formula"===n.type?expressionEval(editorValueStringify(n.children)).result:n.text}var o=editorValueStringify(e,(function(e,r){return"formula"===e.type?r(e,t):r(e)}));return compiledTemplate(o,t)}return""},editorValueParse=function(e){return[]},getEditorValue=function(e,t,r,n){return t?editorValueStringify(e):{origin:lodash__WEBPACK_IMPORTED_MODULE_0___default().cloneDeep(e),stringify:n?"{#".concat(editorValueStringify(e,r),"#}"):editorValueStringify(e,r)}}},204:(e,t,r)=>{"use strict";r.d(t,{Z:()=>v});var n=r(5861),o=r(4687),i=r.n(o),a=r(3078),s=function(){var e=(0,n.Z)(i().mark((function e(t){var r,n;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r={limit:(t=t||{}).limit||30,skip:t.skip||0,order:t.order,fields:t.fields,withCount:!0},e.next=4,(0,a.api)({name:"core/t/schema"}).query(r,t.where?{where:t.where}:{}).then((function(e){return e})).catch((function(e){return e}));case 4:return n=e.sent,e.abrupt("return",n);case 6:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),l=function(){var e=(0,n.Z)(i().mark((function e(t){var r;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.api)({name:"core/t/schema"}).get(t).then((function(e){return e})).catch((function(e){return e}));case 2:return r=e.sent,e.abrupt("return",r);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),c=function(){var e=(0,n.Z)(i().mark((function e(t){var r;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.api)({name:"core/t/schema"}).fetch("",{method:"POST",body:JSON.stringify(t)}).then((function(e){return null==e?void 0:e.json})).catch((function(e){return e}));case 2:return r=e.sent,e.abrupt("return",r);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),u=function(){var e=(0,n.Z)(i().mark((function e(t,r){var n;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.api)({name:"core/t/schema"}).fetch("/".concat(t),{method:"PATCH",body:JSON.stringify(r)}).then((function(e){return null==e?void 0:e.json})).catch((function(e){return e}));case 2:return n=e.sent,e.abrupt("return",n);case 4:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}(),d=function(){var e=(0,n.Z)(i().mark((function e(t){var r;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.api)({name:"core/t/schema"}).fetch("/".concat(t),{method:"DELETE"}).then((function(e){return e.json})).catch((function(e){return e}));case 2:return r=e.sent,e.abrupt("return",r);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),m=function(){var e=(0,n.Z)(i().mark((function e(t,r){var n,o,s;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return n={limit:(r=r||{}).limit||30,skip:r.skip||0,sort:r.sort,project:r.project,filter:r.where},o=encodeURIComponent(JSON.stringify(n)),e.next=5,(0,a.api)({name:"core/t"}).fetch("/".concat(t,"/d?query=").concat(o),{method:"GET"}).then((function(e){return e.json})).catch((function(e){return e}));case 5:return s=e.sent,e.abrupt("return",s);case 7:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}(),p=function(){var e=(0,n.Z)(i().mark((function e(t,r){var n;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.api)({name:"core/t/".concat(t,"/d")}).get(r).then((function(e){return e})).catch((function(e){return e}));case 2:return n=e.sent,e.abrupt("return",n);case 4:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}(),b=function(){var e=(0,n.Z)(i().mark((function e(t){var r;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.api)({name:"core/t"}).get(t+"/d/checkAdd").then((function(e){return{add:!0}})).catch((function(e){return{add:!1}}));case 2:return r=e.sent,e.abrupt("return",r);case 4:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),g=function(){var e=(0,n.Z)(i().mark((function e(t,r){var n;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.api)({name:"core/t"}).fetch("/".concat(t,"/d"),{method:"POST",body:JSON.stringify(r)}).then((function(e){return null==e?void 0:e.json})).catch((function(e){return e}));case 2:return n=e.sent,e.abrupt("return",n);case 4:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}(),f=function(){var e=(0,n.Z)(i().mark((function e(t,r,n){var o;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.api)({name:"core/t"}).fetch("/".concat(t,"/d/").concat(r),{method:"PATCH",body:JSON.stringify(n)}).then((function(e){return null==e?void 0:e.json})).catch((function(e){return e}));case 2:return o=e.sent,e.abrupt("return",o);case 4:case"end":return e.stop()}}),e)})));return function(t,r,n){return e.apply(this,arguments)}}(),h=function(){var e=(0,n.Z)(i().mark((function e(t,r){var n;return i().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,a.api)({name:"core/t"}).fetch("/".concat(t,"/d/").concat(r),{method:"DELETE"}).then((function(e){return e.json})).catch((function(e){return e}));case 2:return n=e.sent,e.abrupt("return",n);case 4:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}();const v={getTableList:s,getTableById:l,addTable:c,editTableById:u,delTableById:d,getTableDataList:m,getTableDataById:p,checkTableAdd:b,addTableData:g,editTableDataById:f,delTableDataById:h,getModelList:s,getModelById:l,addModel:c,editModelById:u,delModelById:d,getNodeList:m,getNodeById:p,addNode:g,editNodeById:f,delNodeById:h}},2060:(e,t,r)=>{"use strict";r.d(t,{Z:()=>p});var n=r(4015),o=r.n(n),i=r(3645),a=r.n(i),s=r(1667),l=r.n(s),c=r(1574),u=r.n(c),d=a()(o()),m=l()(u());d.push([e.id,"@font-face {\n  font-family: 'codaicons';\n  src: url("+m+");\n}\n.iot-editor-variable .ant-modal-content {\n  height: 100%;\n}\n.iot-editor-variable .ant-modal-content .ant-modal-body {\n  height: calc(100% - 108px);\n}\n.iot-editor-variable-panel {\n  border: 1px solid #e0e0e0;\n  background-color: #FFFFFF;\n  border-radius: 6px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, var(--opacity-shadow-normal, 0.15));\n  z-index: 1;\n  height: 200px;\n}\n.iot-editor-variable-panel .iot-editor-variable-select {\n  height: 100%;\n}\n.iot-editor-variable-dlg-formula {\n  padding: 10px 15px;\n  border-bottom: 1px solid #f0f0f0;\n  height: 200px;\n  overflow: auto;\n}\n.editor-svg-icon {\n  font-size: 16px;\n  padding-right: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 22px;\n}\n.editor-svg-icon svg path {\n  stroke-width: 2;\n}\n.editor-svg-icon svg rect {\n  stroke-width: 2;\n}\n.iot-editor-variable-select {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 200px);\n}\n.iot-editor-variable-select .editor-iconfont {\n  -webkit-font-smoothing: antialiased;\n  font-family: 'codaicons';\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1;\n  vertical-align: middle;\n  font-size: 18px;\n  padding-right: 4px;\n}\n.iot-editor-variable-select .expected-line {\n  display: flex;\n}\n.iot-editor-variable-select .expected-line .equal-icon {\n  display: inline-block;\n  font-size: 18px;\n  color: #aeaeae;\n  height: 100%;\n  width: 10%;\n  text-align: center;\n}\n.iot-editor-variable-select .expected-line .expected {\n  display: inline-block;\n  width: 60%;\n  height: 100%;\n  overflow: hidden;\n}\n.iot-editor-variable-select .expected-line .expected-type {\n  display: inline-block;\n  width: 20%;\n  height: 100%;\n  overflow: hidden;\n}\n.iot-editor-variable-select .expected-line .full-dialog-icon {\n  width: 10%;\n  height: 100%;\n  cursor: pointer;\n}\n.iot-editor-variable-select .expected-line .error {\n  color: red;\n  margin-left: 30px;\n  width: 60%;\n}\n.iot-editor-variable-select .iot-editor-variable-select-loading {\n  height: 230px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.iot-editor-select-panel {\n  width: 100%;\n  height: calc(100% - 34px);\n  background: #f5f6f7;\n}\n.iot-editor-select-panel .select-panel-item {\n  display: flex;\n  align-items: center;\n  padding-left: 10px;\n  height: 30px;\n  line-height: 30px;\n  cursor: pointer;\n}\n.iot-editor-select-panel .select-panel-item-title {\n  width: 80%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.iot-editor-select-panel .select-panel-item:hover {\n  background-color: #CCCCCC;\n}\n.iot-editor-select-panel .select-panel-breadcrumb {\n  padding: 4px 10px;\n  border-bottom: 1px #E1E1E1 solid;\n}\n.iot-editor-select-panel .select-panel-content {\n  width: 100%;\n  display: flex;\n  height: calc(100% - 31px);\n}\n.iot-editor-select-panel .select-panel-list {\n  height: 100%;\n  overflow: auto;\n  width: 40%;\n  border-right: 1px #E1E1E1 solid;\n}\n.iot-editor-select-panel .select-panel-title {\n  color: #8f959e;\n  font-size: 14px;\n  margin-top: 8px;\n  overflow: hidden;\n  padding: 0 12px;\n}\n.iot-editor-select-panel .select-panel-detail {\n  height: 100%;\n  overflow: auto;\n  width: 60%;\n  padding: 10px 20px;\n}\n.iot-editor-select-panel .select-panel-detail .detail-title {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: bold;\n  padding-bottom: 10px;\n}\n.iot-editor-select-panel .select-panel-detail .detail-info {\n  margin-top: 10px;\n  background-color: #fff;\n  border-radius: 8px;\n  border: 1px #E1E1E1 solid;\n  padding: 10px 20px;\n}\n.iot-editor-select-panel .select-panel-detail .detail-info-item {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n}\n.iot-editor-select-panel .select-panel-detail .detail-info-item .info-item-title {\n  width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.iot-editor-select-panel .select-panel-detail .detail-type {\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  font-weight: normal;\n  background-color: #fff;\n  padding: 2px 10px;\n  border-radius: 6px;\n  border: 1px #E1E1E1 solid;\n}\n.iot-editor-slate {\n  position: relative;\n}\n.iot-editor-slate .tag-element {\n  display: inline-block;\n  height: 22px;\n  line-height: 20px;\n  padding: 0 6px;\n  border-radius: 10px;\n  margin: 0 2px;\n}\n.iot-editor-slate .tag-element .tag-element-flex {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 260px;\n}\n.iot-editor-slate .tag-element .tag-element-flex span {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.iot-editor-slate .formula-element {\n  display: inline-block;\n  min-height: 22px;\n  line-height: 20px;\n  min-width: 50px;\n  border-right: 4px solid #CCCCCC;\n  border-left: 4px solid #CCCCCC;\n  border-radius: 8px;\n  padding: 0 8px;\n  margin: 0 8px;\n}\n.iot-editor-slate .iot-editor-slate-close {\n  position: absolute;\n  top: 0;\n  right: 10px;\n}\n.editor-iconfont {\n  -webkit-font-smoothing: antialiased;\n  font-family: 'codaicons';\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1;\n  vertical-align: middle;\n  font-size: 16px;\n}\n.iot-editor-slate-wrap {\n  min-height: 32px;\n  max-height: 200px;\n  overflow: auto;\n  padding: 5px 0;\n  background-color: #f0f2f5;\n}\n.detail-description .detail-item-title {\n  padding-top: 10px;\n  padding-bottom: 4px;\n  font-weight: bold;\n}\n.detail-description .detail-item {\n  padding: 12px;\n  margin: 6px 0;\n  border-radius: 4px;\n  background: rgba(255, 255, 255, 0.5);\n}\n","",{version:3,sources:["webpack://./src/style.less"],names:[],mappings:"AAAA;EACE,wBAAA;EACA,4CAAA;AACF;AAEA;EAEI,YAAA;AADJ;AADA;EAIM,0BAAA;AAAN;AAKA;EACE,yBAAA;EACA,yBAAA;EACA,kBAAA;EACA,sEAAA;EACA,UAAA;EACA,aAAA;AAHF;AAHA;EAQI,YAAA;AAFJ;AAMA;EACE,kBAAA;EACA,gCAAA;EACA,aAAA;EACA,cAAA;AAJF;AAOA;EACE,eAAA;EACA,kBAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,YAAA;EACA,WAAA;AALF;AAFA;EAUM,eAAA;AALN;AALA;EAaM,eAAA;AALN;AAUA;EACE,kBAAA;EACA,WAAA;EACA,0BAAA;AARF;AAKA;EAKI,mCAAA;EACA,wBAAA;EACA,kBAAA;EACA,gBAAA;EACA,cAAA;EACA,sBAAA;EACA,eAAA;EACA,kBAAA;AAPJ;AALA;EAeI,aAAA;AAPJ;AARA;EAiBM,qBAAA;EACA,eAAA;EACA,cAAA;EACA,YAAA;EACA,UAAA;EACA,kBAAA;AANN;AAhBA;EAyBM,qBAAA;EACA,UAAA;EACA,YAAA;EACA,gBAAA;AANN;AAtBA;EA+BM,qBAAA;EACA,UAAA;EACA,YAAA;EACA,gBAAA;AANN;AA5BA;EAqCM,UAAA;EACA,YAAA;EACA,eAAA;AANN;AAjCA;EA0CM,UAAA;EACA,iBAAA;EACA,UAAA;AANN;AAtCA;EAgDI,aAAA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;AAPJ;AAWA;EACE,WAAA;EACA,yBAAA;EACA,mBAAA;AATF;AAMA;EAKI,aAAA;EACA,mBAAA;EACA,kBAAA;EACA,YAAA;EACA,iBAAA;EACA,eAAA;AARJ;AASI;EACE,UAAA;EACA,gBAAA;EACA,uBAAA;EACA,mBAAA;AAPN;AASI;EACE,yBAAA;AAPN;AAXA;EAsBI,iBAAA;EACA,gCAAA;AARJ;AAfA;EA0BI,WAAA;EACA,aAAA;EACA,yBAAA;AARJ;AApBA;EA+BI,YAAA;EACA,cAAA;EACA,UAAA;EACA,+BAAA;AARJ;AA1BA;EAqCI,cAAA;EACA,eAAA;EACA,eAAA;EACA,gBAAA;EACA,eAAA;AARJ;AAjCA;EA4CI,YAAA;EACA,cAAA;EACA,UAAA;EACA,kBAAA;AARJ;AAvCA;EAiDM,aAAA;EACA,mBAAA;EACA,8BAAA;EACA,iBAAA;EACA,oBAAA;AAPN;AA9CA;EAwDM,gBAAA;EACA,sBAAA;EACA,kBAAA;EACA,yBAAA;EACA,kBAAA;AAPN;AArDA;EA+DM,aAAA;EACA,WAAA;EACA,mBAAA;EACA,8BAAA;AAPN;AA3DA;EAoEQ,YAAA;EACA,gBAAA;EACA,uBAAA;EACA,mBAAA;AANR;AAjEA;EA2EM,aAAA;EACA,mBAAA;EACA,eAAA;EACA,mBAAA;EACA,sBAAA;EACA,iBAAA;EACA,kBAAA;EACA,yBAAA;AAPN;AAWA;EACE,kBAAA;AATF;AAQA;EAGI,qBAAA;EACA,YAAA;EACA,iBAAA;EACA,cAAA;EACA,mBAAA;EACA,aAAA;AARJ;AAAA;EAUM,aAAA;EACA,uBAAA;EACA,mBAAA;EAEA,gBAAA;AARN;AANA;EAgBQ,gBAAA;EACA,uBAAA;EACA,mBAAA;AAPR;AAXA;EAuBI,qBAAA;EACA,gBAAA;EACA,iBAAA;EACA,eAAA;EACA,+BAAA;EACA,8BAAA;EACA,kBAAA;EACA,cAAA;EACA,aAAA;AATJ;AAtBA;EAkCI,kBAAA;EACA,MAAA;EACA,WAAA;AATJ;AAYA;EACE,mCAAA;EACA,wBAAA;EACA,kBAAA;EACA,gBAAA;EACA,cAAA;EACA,sBAAA;EACA,eAAA;AAVF;AAaA;EACE,gBAAA;EACA,iBAAA;EACA,cAAA;EACA,cAAA;EACA,yBAAA;AAXF;AAcA;EAEI,iBAAA;EACA,mBAAA;EACA,iBAAA;AAbJ;AASA;EAOI,aAAA;EACA,aAAA;EACA,kBAAA;EACA,oCAAA;AAbJ",sourcesContent:["@font-face{\n  font-family: 'codaicons';\n  src : url('./codaicons.ttf');\n}\n\n.iot-editor-variable {\n  .ant-modal-content {\n    height: 100%;\n    .ant-modal-body {\n      height: calc(100% - 108px);\n    }\n  }\n}\n\n.iot-editor-variable-panel {\n  border: 1px solid rgb(224,224,224);\n  background-color: #FFFFFF;\n  border-radius: 6px;\n  box-shadow: 0 0 10px rgba(0,0,0,var(--opacity-shadow-normal,.15));\n  z-index: 1;\n  height: 200px;\n  .iot-editor-variable-select {\n    height: 100%;\n  }\n}\n\n.iot-editor-variable-dlg-formula {\n  padding: 10px 15px;\n  border-bottom: 1px solid rgb(240, 240, 240);\n  height: 200px;\n  overflow: auto;\n}\n\n.editor-svg-icon {\n  font-size: 16px;\n  padding-right: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 22px;\n  svg {\n    path {\n      stroke-width: 2;\n    }\n    rect {\n      stroke-width: 2;\n    }\n  }\n}\n\n.iot-editor-variable-select {\n  position: relative;\n  width: 100%;\n  height: calc(100% - 200px);\n  .editor-iconfont {\n    -webkit-font-smoothing: antialiased;\n    font-family: 'codaicons';\n    font-style: normal;\n    font-weight: 400;\n    line-height: 1;\n    vertical-align: middle;\n    font-size: 18px;\n    padding-right: 4px;\n  }\n  .expected-line {\n    display: flex;\n    .equal-icon {\n      display: inline-block;\n      font-size: 18px;\n      color: rgb(174, 174, 174);\n      height: 100%;\n      width: 10%;\n      text-align: center;\n    }\n    .expected {\n      display: inline-block; \n      width: 60%; \n      height: 100%; \n      overflow: hidden;\n    }\n    .expected-type {\n      display: inline-block; \n      width: 20%; \n      height: 100%; \n      overflow: hidden;\n    }\n    .full-dialog-icon {\n      width: 10%;\n      height: 100%;\n      cursor: pointer;\n    }\n    .error {\n      color: red;\n      margin-left: 30px;\n      width: 60%; \n    }\n  }\n  .iot-editor-variable-select-loading {\n    height: 230px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n.iot-editor-select-panel {\n  width: 100%;\n  height: calc(100% - 34px);\n  background: rgb(245, 246, 247);\n  .select-panel-item {\n    display: flex;\n    align-items: center;\n    padding-left: 10px;\n    height: 30px;\n    line-height: 30px;\n    cursor: pointer;\n    &-title {\n      width: 80%;\n      overflow:hidden; //超出的文本隐藏\n      text-overflow:ellipsis; //溢出用省略号显示\n      white-space:nowrap; //溢出不换\n    }\n    &:hover {\n      background-color: #CCCCCC;\n    }\n  }\n  .select-panel-breadcrumb {\n    padding: 4px 10px;\n    border-bottom: 1px #E1E1E1 solid;\n  }\n  .select-panel-content {\n    width: 100%;\n    display: flex;\n    height: calc(100% - 31px);\n  }\n  .select-panel-list {\n    height: 100%;\n    overflow: auto;\n    width: 40%;\n    border-right: 1px #E1E1E1 solid;\n  }\n  .select-panel-title {\n    color: rgb(143, 149, 158);\n    font-size: 14px;\n    margin-top: 8px;\n    overflow: hidden;\n    padding: 0 12px;\n  }\n  .select-panel-detail {\n    height: 100%;\n    overflow: auto;\n    width: 60%;\n    padding: 10px 20px;\n    .detail-title {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      font-weight: bold;\n      padding-bottom: 10px;\n    }\n    .detail-info {\n      margin-top: 10px;\n      background-color: #fff;\n      border-radius: 8px;\n      border: 1px #E1E1E1 solid;\n      padding: 10px 20px;\n    }\n    .detail-info-item {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      justify-content: space-between;\n      .info-item-title {\n        width: 200px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n    }\n    .detail-type {\n      display: flex;\n      align-items: center;\n      font-size: 12px;\n      font-weight: normal;\n      background-color: #fff;\n      padding: 2px 10px;\n      border-radius: 6px;\n      border: 1px #E1E1E1 solid;\n    }\n  }\n}\n.iot-editor-slate {\n  position: relative;\n  .tag-element {\n    display: inline-block;\n    height: 22px;\n    line-height: 20px;\n    padding: 0 6px;\n    border-radius: 10px;\n    margin: 0 2px;\n    .tag-element-flex {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      // overflow: hidden;\n      max-width: 260px;\n      span {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n    }\n  }\n  .formula-element {\n    display: inline-block;\n    min-height: 22px;\n    line-height: 20px;\n    min-width: 50px;\n    border-right: 4px solid #CCCCCC;\n    border-left: 4px solid #CCCCCC;\n    border-radius: 8px;\n    padding: 0 8px;\n    margin: 0 8px;\n  }\n  .iot-editor-slate-close {\n    position: absolute;\n    top: 0;\n    right: 10px;\n  }\n}\n.editor-iconfont {\n  -webkit-font-smoothing: antialiased;\n  font-family: 'codaicons';\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1;\n  vertical-align: middle;\n  font-size: 16px;\n}\n\n.iot-editor-slate-wrap {\n  min-height: 32px;\n  max-height: 200px;\n  overflow: auto;\n  padding: 5px 0;\n  background-color: #f0f2f5;\n}\n\n.detail-description {\n  .detail-item-title {\n    padding-top: 10px;\n    padding-bottom: 4px;\n    font-weight: bold;\n  }\n  .detail-item {\n    padding: 12px;\n    margin: 6px 0;\n    border-radius: 4px;\n    background: rgba(255, 255, 255, 0.5);\n  }\n}\n"],sourceRoot:""}]);const p=d},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r=e(t);return t[2]?"@media ".concat(t[2]," {").concat(r,"}"):r})).join("")},t.i=function(e,r,n){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(n)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);n&&o[l[0]]||(r&&(l[2]?l[2]="".concat(r," and ").concat(l[2]):l[2]=r),t.push(l))}},t}},4015:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}e.exports=function(e){var r,n,o=(n=4,function(e){if(Array.isArray(e))return e}(r=e)||function(e,t){var r=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=r){var n,o,i=[],a=!0,s=!1;try{for(r=r.call(e);!(a=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);a=!0);}catch(e){s=!0,o=e}finally{try{a||null==r.return||r.return()}finally{if(s)throw o}}return i}}(r,n)||function(e,r){if(e){if("string"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if(!a)return i;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(l," */"),u=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[i].concat(u).concat([c]).join("\n")}return[i].join("\n")}},1667:e=>{"use strict";e.exports=function(e,t){return t||(t={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},6907:e=>{"use strict";e.exports=function(e){return e=String(e||""),n.test(e)?"rtl":o.test(e)?"ltr":"neutral"};var t="֑-߿יִ-﷽ﹰ-ﻼ",r="A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿‎Ⰰ-﬜︀-﹯﻽-￿",n=new RegExp("^[^"+r+"]*["+t+"]"),o=new RegExp("^[^"+t+"]*["+r+"]")},1574:(e,t,r)=>{e.exports=r.p+"288c0f19bc6a8f842758e9993e8c01d4.ttf"},8156:(e,t)=>{"use strict";for(var r="undefined"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),n={alt:"altKey",control:"ctrlKey",meta:"metaKey",shift:"shiftKey"},o={add:"+",break:"pause",cmd:"meta",command:"meta",ctl:"control",ctrl:"control",del:"delete",down:"arrowdown",esc:"escape",ins:"insert",left:"arrowleft",mod:r?"meta":"control",opt:"alt",option:"alt",return:"enter",right:"arrowright",space:" ",spacebar:" ",up:"arrowup",win:"meta",windows:"meta"},i={backspace:8,tab:9,enter:13,shift:16,control:17,alt:18,pause:19,capslock:20,escape:27," ":32,pageup:33,pagedown:34,end:35,home:36,arrowleft:37,arrowup:38,arrowright:39,arrowdown:40,insert:45,delete:46,meta:91,numlock:144,scrolllock:145,";":186,"=":187,",":188,"-":189,".":190,"/":191,"`":192,"[":219,"\\":220,"]":221,"'":222},a=1;a<20;a++)i["f"+a]=111+a;function s(e,t,r){t&&!("byKey"in t)&&(r=t,t=null),Array.isArray(e)||(e=[e]);var o=e.map((function(e){return function(e,t){var r=t&&t.byKey,o={},i=(e=e.replace("++","+add")).split("+"),a=i.length;for(var s in n)o[n[s]]=!1;var u=!0,d=!1,m=void 0;try{for(var p,b=i[Symbol.iterator]();!(u=(p=b.next()).done);u=!0){var g=p.value,f=g.endsWith("?")&&g.length>1;f&&(g=g.slice(0,-1));var h=c(g),v=n[h];1!==a&&v||(r?o.key=h:o.which=l(g)),v&&(o[v]=!f||null)}}catch(e){d=!0,m=e}finally{try{!u&&b.return&&b.return()}finally{if(d)throw m}}return o}(e,t)})),i=function(e){return o.some((function(t){return function(e,t){for(var r in e){var n=e[r],o=void 0;if(null!=n&&(null!=(o="key"===r&&null!=t.key?t.key.toLowerCase():"which"===r?91===n&&93===t.which?91:t.which:t[r])||!1!==n)&&o!==n)return!1}return!0}(t,e)}))};return null==r?i:i(r)}function l(e){return e=c(e),i[e]||e.toUpperCase().charCodeAt(0)}function c(e){return e=e.toLowerCase(),o[e]||e}t.TB=function(e,t){return s(e,{byKey:!0},t)}},2705:(e,t,r)=>{var n=r(5639).Symbol;e.exports=n},4239:(e,t,r)=>{var n=r(2705),o=r(9607),i=r(2333),a=n?n.toStringTag:void 0;e.exports=function(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":a&&a in Object(e)?o(e):i(e)}},7561:(e,t,r)=>{var n=r(7990),o=/^\s+/;e.exports=function(e){return e?e.slice(0,n(e)+1).replace(o,""):e}},1957:(e,t,r)=>{var n="object"==typeof r.g&&r.g&&r.g.Object===Object&&r.g;e.exports=n},9607:(e,t,r)=>{var n=r(2705),o=Object.prototype,i=o.hasOwnProperty,a=o.toString,s=n?n.toStringTag:void 0;e.exports=function(e){var t=i.call(e,s),r=e[s];try{e[s]=void 0;var n=!0}catch(e){}var o=a.call(e);return n&&(t?e[s]=r:delete e[s]),o}},2333:e=>{var t=Object.prototype.toString;e.exports=function(e){return t.call(e)}},5639:(e,t,r)=>{var n=r(1957),o="object"==typeof self&&self&&self.Object===Object&&self,i=n||o||Function("return this")();e.exports=i},7990:e=>{var t=/\s/;e.exports=function(e){for(var r=e.length;r--&&t.test(e.charAt(r)););return r}},3279:(e,t,r)=>{var n=r(3218),o=r(7771),i=r(4841),a=Math.max,s=Math.min;e.exports=function(e,t,r){var l,c,u,d,m,p,b=0,g=!1,f=!1,h=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function v(t){var r=l,n=c;return l=c=void 0,b=t,d=e.apply(n,r)}function y(e){var r=e-p;return void 0===p||r>=t||r<0||f&&e-b>=u}function w(){var e=o();if(y(e))return A(e);m=setTimeout(w,function(e){var r=t-(e-p);return f?s(r,u-(e-b)):r}(e))}function A(e){return m=void 0,h&&l?v(e):(l=c=void 0,d)}function x(){var e=o(),r=y(e);if(l=arguments,c=this,p=e,r){if(void 0===m)return function(e){return b=e,m=setTimeout(w,t),g?v(e):d}(p);if(f)return clearTimeout(m),m=setTimeout(w,t),v(p)}return void 0===m&&(m=setTimeout(w,t)),d}return t=i(t)||0,n(r)&&(g=!!r.leading,u=(f="maxWait"in r)?a(i(r.maxWait)||0,t):u,h="trailing"in r?!!r.trailing:h),x.cancel=function(){void 0!==m&&clearTimeout(m),b=0,l=p=c=m=void 0},x.flush=function(){return void 0===m?d:A(o())},x}},3218:e=>{e.exports=function(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}},7005:e=>{e.exports=function(e){return null!=e&&"object"==typeof e}},3448:(e,t,r)=>{var n=r(4239),o=r(7005);e.exports=function(e){return"symbol"==typeof e||o(e)&&"[object Symbol]"==n(e)}},7771:(e,t,r)=>{var n=r(5639);e.exports=function(){return n.Date.now()}},3493:(e,t,r)=>{var n=r(3279),o=r(3218);e.exports=function(e,t,r){var i=!0,a=!0;if("function"!=typeof e)throw new TypeError("Expected a function");return o(r)&&(i="leading"in r?!!r.leading:i,a="trailing"in r?!!r.trailing:a),n(e,t,{leading:i,maxWait:t,trailing:a})}},4841:(e,t,r)=>{var n=r(7561),o=r(3218),i=r(3448),a=/^[-+]0x[0-9a-f]+$/i,s=/^0b[01]+$/i,l=/^0o[0-7]+$/i,c=parseInt;e.exports=function(e){if("number"==typeof e)return e;if(i(e))return NaN;if(o(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=o(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=n(e);var r=s.test(e);return r||l.test(e)?c(e.slice(2),r?2:8):a.test(e)?NaN:+e}},1415:e=>{e.exports.l5=null;let t=null;e.exports.l5=function(e){t=e}},3379:(e,t,r)=>{"use strict";var n,o=function(){var e={};return function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}e[t]=r}return e[t]}}(),i=[];function a(e){for(var t=-1,r=0;r<i.length;r++)if(i[r].identifier===e){t=r;break}return t}function s(e,t){for(var r={},n=[],o=0;o<e.length;o++){var s=e[o],l=t.base?s[0]+t.base:s[0],c=r[l]||0,u="".concat(l," ").concat(c);r[l]=c+1;var d=a(u),m={css:s[1],media:s[2],sourceMap:s[3]};-1!==d?(i[d].references++,i[d].updater(m)):i.push({identifier:u,updater:g(m,t),references:1}),n.push(u)}return n}function l(e){var t=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var i=r.nc;i&&(n.nonce=i)}if(Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(t);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var c,u=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function d(e,t,r,n){var o=r?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(e.styleSheet)e.styleSheet.cssText=u(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function m(e,t,r){var n=r.css,o=r.media,i=r.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var p=null,b=0;function g(e,t){var r,n,o;if(t.singleton){var i=b++;r=p||(p=l(t)),n=d.bind(null,r,i,!1),o=d.bind(null,r,i,!0)}else r=l(t),n=m.bind(null,r,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n));var r=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var n=0;n<r.length;n++){var o=a(r[n]);i[o].references--}for(var l=s(e,t),c=0;c<r.length;c++){var u=a(r[c]);0===i[u].references&&(i[u].updater(),i.splice(u,1))}r=l}}}},6054:e=>{e.exports='<svg viewBox="0 0 18 15" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>编组 26</title><g id="页面-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-988.000000, -264.000000)" fill="#59AC45"><g id="编组-26" transform="translate(988.000000, 264.000000)"><g id="dianshiji" fill-rule="nonzero"><path d="M16.6776316,0 C17.125,0 17.4572368,0.146471372 17.6743421,0.439414115 C17.8914474,0.732356858 17.9934211,1.03861518 17.9802632,1.35818908 L17.9802632,2.21704394 L17.9802632,4.01464714 C17.9802632,4.73368842 17.9835526,5.50266312 17.9901316,6.32157124 C17.9967105,7.14047936 18,7.90945406 18,8.62849534 L18,10.4860186 L18,11.4047936 C18,11.8308921 17.8519737,12.1471372 17.5559211,12.3535286 C17.2598684,12.5599201 16.9342105,12.6697736 16.5789474,12.6830892 L16.1052632,12.6830892 L15.2763158,12.6830892 L14.2105263,12.6830892 L13.0263158,12.6830892 L9.90789474,12.6830892 L9.90789474,14.1211718 L11.3881579,14.1211718 C11.5460526,14.1211718 11.6710526,14.1677763 11.7631579,14.2609854 C11.8552632,14.3541944 11.8947368,14.4540613 11.8815789,14.5605859 C11.8815789,14.6937417 11.8355263,14.8002663 11.7434211,14.8801598 C11.6513158,14.9600533 11.5328947,15 11.3881579,15 L6.63157895,15 C6.48684211,15 6.375,14.9533955 6.29605263,14.8601864 C6.21710526,14.7669774 6.17763158,14.6671105 6.17763158,14.5605859 C6.17763158,14.4540613 6.21052632,14.3575233 6.27631579,14.270972 C6.34210526,14.1844208 6.46052632,14.1411451 6.63157895,14.1411451 L8.13157895,14.1411451 L8.13157895,12.7030626 L5.03289474,12.7030626 L3.84868421,12.7030626 L2.76315789,12.7030626 L1.91447368,12.7030626 L1.44078947,12.7030626 C1.01973684,12.7030626 0.674342105,12.5532623 0.404605263,12.2536618 C0.134868421,11.9540613 0,11.5645806 0,11.0852197 L0,1.57789614 C0,1.09853529 0.144736842,0.715712383 0.434210526,0.42942743 C0.723684211,0.143142477 1.09210526,0 1.53947368,0 L16.6776316,0 L16.6776316,0 Z M16.7826812,1.31478038 L1.30292363,1.31478038 L1.30292363,11.3784594 L16.7826812,11.3784594 L16.7826812,1.31478038 Z" id="形状"></path></g><text id="01" font-family="Arial-Black, Arial Black" font-size="7.5" font-weight="700"><tspan x="4" y="9">01</tspan></text></g></g></g></svg>'},3050:e=>{e.exports='<svg viewBox="0 0 22 21" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>对象#7A90FF</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-56.000000, -434.000000)"><g id="对象#7A90FF" transform="translate(57.000000, 435.000000)"><path d="M0,7.60798406 L0,7.60798406 L0,2 C0,0.8954305 0.8954305,0 2,0 L7.54938182,0 L7.54938182,0" id="路径" stroke="#7A90FF" stroke-width="1.5"></path><path d="M12,7.60798406 L12,7.60798406 L12,2 C12,0.8954305 12.8954305,0 14,0 L19.5493818,0 L19.5493818,0" id="路径" stroke="#7A90FF" stroke-width="1.5" transform="translate(15.774691, 3.803992) scale(-1, 1) translate(-15.774691, -3.803992) "></path><path d="M0,18.6079841 L0,18.6079841 L0,13 C0,11.8954305 0.8954305,11 2,11 L7.54938182,11 L7.54938182,11" id="路径" stroke="#7A90FF" stroke-width="1.5" transform="translate(3.774691, 14.803992) scale(1, -1) translate(-3.774691, -14.803992) "></path><path d="M12,18.6079841 L12,18.6079841 L12,13 C12,11.8954305 12.8954305,11 14,11 L19.5493818,11 L19.5493818,11" id="路径" stroke="#7A90FF" stroke-width="1.5" transform="translate(15.774691, 14.803992) scale(-1, -1) translate(-15.774691, -14.803992) "></path><rect id="矩形" fill="#7A90FF" x="7" y="6" width="6" height="6" rx="1"></rect></g></g></g></svg>'},7115:e=>{e.exports='<svg viewBox="0 0 19 21" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>工作表#F89F7F</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-488.000000, -435.000000)" stroke="#F89F7F" stroke-width="1.5"><g id="工作表#F89F7F" transform="translate(489.000000, 436.000000)"><path d="M10.1516777,19 L3.43017143,19 C2.32560193,19 1.43017143,18.1045695 1.43017143,17 L1.43017143,2 C1.43017143,0.8954305 2.32560193,0 3.43017143,0 L14.4301714,0 C15.5347409,0 16.4301714,0.8954305 16.4301714,2 L16.4301714,12.3445309 L10.1516777,19 Z" id="路径"></path><path d="M15.9301714,12.5 L10.8668551,12.6260503 C10.3244336,12.6395538 9.8917422,13.083151 9.8917422,13.6257406 L9.8917422,19 L9.8917422,19" id="路径-63"></path><line x1="0" y1="9.15032555" x2="3" y2="9.15032555" id="路径-64" stroke-linecap="round"></line><line x1="0" y1="4.15032555" x2="3" y2="4.15032555" id="路径-64" stroke-linecap="round"></line><line x1="0" y1="14.1503255" x2="3" y2="14.1503255" id="路径-64" stroke-linecap="round"></line></g></g></g></svg>'},3567:e=>{e.exports='<svg viewBox="0 0 20 22" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>工作表组#F27E54</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-528.000000, -433.000000)" stroke="#F27E54" stroke-width="1.5"><g id="工作表组#F27E54" transform="translate(529.000000, 434.000000)"><g id="工作表备份" transform="translate(0.000000, 3.000000)"><path d="M8.55863874,17 L2.73333333,17 C1.77603977,17 1,16.1988253 1,15.2105263 L1,1.78947368 C1,0.801174658 1.77603977,0 2.73333333,0 L12.2666667,0 C13.2239602,0 14,0.801174658 14,1.78947368 L14,11.0451066 L8.55863874,17 Z" id="路径"></path><path d="M14,11 L9.97225827,11.1117795 C9.43098626,11.1268011 9,11.5699143 9,12.1113947 L9,17 L9,17" id="路径-63"></path><line x1="0" y1="8" x2="3" y2="8" id="路径-64" stroke-linecap="round"></line><line x1="0" y1="3.5" x2="3" y2="3.5" id="路径-64" stroke-linecap="round"></line><line x1="0" y1="12.5" x2="3" y2="12.5" id="路径-64" stroke-linecap="round"></line></g><path d="M9,3 L9,1 C9,0.44771525 9.44771525,1.01453063e-16 10,0 L16.8325077,0 C17.3847924,-5.91980459e-16 17.8325077,0.44771525 17.8325077,1 L17.8325077,13.0528721 C17.8325077,13.2978863 17.7425558,13.5343743 17.579724,13.7174529 L13.7145786,18.0631992 C13.5248165,18.2765568 13.2528988,18.3986183 12.9673623,18.3986183 L10.3941372,18.3986183 L10.3941372,18.3986183" id="路径-227"></path></g></g></g></svg>'},3376:e=>{e.exports='<svg viewBox="0 0 18 21" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>工作表记录#4D2EDC</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-740.000000, -435.000000)" stroke="#4D2EDC"><g id="工作表记录#4D2EDC" transform="translate(741.000000, 436.000000)"><path d="M8.3754444,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,6.2005561 C0,5.80125749 0.119522025,5.41109935 0.343177212,5.08031583 L3.18333134,0.879759736 C3.55529729,0.329626266 4.17607167,0 4.84015412,0 L14,0 C15.1045695,0 16,0.8954305 16,2 L16,11.6299399 L16,11.6299399" id="路径" stroke-width="1.5" stroke-linecap="round"></path><line x1="4.71218719" y1="5.02114034" x2="11.6784612" y2="5.02114034" id="路径-232" stroke-width="1.5" stroke-linecap="round"></line><line x1="4.71218719" y1="9.02114034" x2="11.6784612" y2="9.02114034" id="路径-232" stroke-width="1.5" stroke-linecap="round"></line><line x1="4.71218719" y1="13.0211403" x2="8.42657066" y2="13.0211403" id="路径-232" stroke-width="1.5" stroke-linecap="round"></line><circle id="椭圆形" stroke-width="1.5" cx="13" cy="16" r="3"></circle><polyline id="路径-233" points="13 14.3701603 13 16.1196142 14.4677047 16.1196142"></polyline></g></g></g></svg>'},6952:e=>{e.exports='<svg viewBox="0 0 21 14" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>布尔#B0E967</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-234.000000, -438.000000)" stroke="#B0E967" stroke-width="1.5"><g id="布尔#B0E967" transform="translate(235.000000, 439.000000)"><path d="M10,1.1339668 C8.96213512,0.420491453 7.68694607,0 6.30849637,0 C2.82441003,0 0,2.6862915 0,6 C0,9.3137085 2.82441003,12 6.30849637,12 L6.30849637,12 C7.64462183,12 8.88373036,11.6049339 9.90373213,10.930921" id="路径"></path><circle id="椭圆形" cx="13" cy="6" r="6"></circle></g></g></g></svg>'},7910:e=>{e.exports='<svg viewBox="0 0 22 15" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>字符串#FFC364</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-188.000000, -436.000000)"><g id="字符串#FFC364" transform="translate(189.000000, 437.000000)"><rect id="矩形" stroke="#478FF2" stroke-width="1.5" x="0" y="0" width="20" height="13" rx="1"></rect><text id="123" font-family="PingFangSC-Semibold, PingFang SC" font-size="8" font-weight="900" fill="#478FF2"><tspan x="3" y="9">123</tspan></text></g></g></g></svg>'},8243:e=>{e.exports='<svg viewBox="0 0 22 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>数据点#EDABFF</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-655.000000, -434.000000)" stroke="#EDABFF" stroke-width="1.5"><g id="数据点#EDABFF" transform="translate(656.000000, 435.000000)"><line x1="14.8630372" y1="5" x2="16.7700112" y2="9.14726601" id="路径-228"></line><line x1="12.5188198" y1="5" x2="8.44454015" y2="13.2701009" id="路径-229"></line><line x1="3.63670178" y1="9" x2="6.87973749" y2="13.5116355" id="路径-230"></line><circle id="椭圆形" cx="13.5" cy="2.5" r="2.5"></circle><circle id="椭圆形" cx="17.5" cy="11.5" r="2.5"></circle><circle id="椭圆形" cx="7.5" cy="15.5" r="2.5"></circle><circle id="椭圆形" cx="2.5" cy="6.5" r="2.5"></circle></g></g></g></svg>'},2259:e=>{e.exports='<svg viewBox="0 0 22 22" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>数组#FFA19B</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-104.000000, -434.000000)" stroke="#FFA19B" stroke-width="1.5"><g id="数组#FFA19B" transform="translate(104.500000, 435.000000)"><path d="M20.5,4 C20.5,1.790861 16.0228475,0 10.5,0 C4.9771525,0 0.5,1.790861 0.5,4" id="路径"></path><path d="M20.5,8 C20.5,5.790861 16.0228475,4 10.5,4 C4.9771525,4 0.5,5.790861 0.5,8" id="路径" transform="translate(10.500000, 6.000000) rotate(-180.000000) translate(-10.500000, -6.000000) "></path><path d="M20.5,12 C20.5,9.790861 16.0228475,8 10.5,8 C4.9771525,8 0.5,9.790861 0.5,12" id="路径" transform="translate(10.500000, 10.000000) rotate(-180.000000) translate(-10.500000, -10.000000) "></path><path d="M20.5,16 C20.5,13.790861 16.0228475,12 10.5,12 C4.9771525,12 0.5,13.790861 0.5,16" id="路径" transform="translate(10.500000, 14.000000) rotate(-180.000000) translate(-10.500000, -14.000000) "></path><path d="M20.5,20 C20.5,17.790861 16.0228475,16 10.5,16 C4.9771525,16 0.5,17.790861 0.5,20" id="路径" transform="translate(10.500000, 18.000000) rotate(-180.000000) translate(-10.500000, -18.000000) "></path><line x1="0.5" y1="3.80399203" x2="0.5" y2="16" id="路径-226"></line><line x1="20.5" y1="3.80399203" x2="20.5" y2="16" id="路径-226"></line></g></g></g></svg>'},5016:e=>{e.exports='<svg viewBox="0 0 23 22" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>字符串#FFAE70</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-147.000000, -434.000000)"><g id="字符串#FFAE70" transform="translate(148.000000, 434.591316)"><path d="M20,9.96596611 L20,9.96596611 L20,18.4086838 C20,19.5132533 19.1045695,20.4086838 18,20.4086838 L2,20.4086838 C0.8954305,20.4086838 0,19.5132533 0,18.4086838 L0,2.40868383 C0,1.30411433 0.8954305,0.408683829 2,0.408683829 L11.6832059,0.408683829 L11.6832059,0.408683829" id="路径" stroke="#FFAE70" stroke-width="1.5"></path><text id="Str" font-family="PingFangSC-Semibold, PingFang SC" font-size="7" font-weight="500" fill="#FFAE70"><tspan x="3" y="8.40868383">Str</tspan></text><path d="M20.6630178,0 L18.1764904,3.05422245 M16.532883,5.07307911 L11.5,11.2550113" id="形状" stroke="#FFAE70" stroke-width="1.5"></path></g></g></g></svg>'},5723:e=>{e.exports='<svg viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>时间#79E2C2</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-277.000000, -435.000000)" stroke="#79E2C2" stroke-width="1.5"><g id="时间#79E2C2" transform="translate(278.000000, 436.000000)"><circle id="椭圆形" cx="9" cy="9" r="9"></circle><polyline id="路径-191" points="3 9 9.97844322 9 10 3"></polyline></g></g></g></svg>'},13:e=>{e.exports='<svg viewBox="0 0 20 19" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>模型#AD88F6</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-403.000000, -437.000000)" stroke="#AD88F6"><g id="模型#AD88F6" transform="translate(403.000000, 437.000000)"><path d="M18,0.75 C18.345178,0.75 18.657678,0.889911016 18.8838835,1.11611652 C19.110089,1.34232203 19.25,1.65482203 19.25,2 L19.25,2 L19.25,11 C19.25,11.345178 19.110089,11.657678 18.8838835,11.8838835 C18.657678,12.110089 18.345178,12.25 18,12.25 L18,12.25 L2,12.25 C1.65482203,12.25 1.34232203,12.110089 1.11611652,11.8838835 C0.889911016,11.657678 0.75,11.345178 0.75,11 L0.75,11 L0.75,2 C0.75,1.65482203 0.889911016,1.34232203 1.11611652,1.11611652 C1.34232203,0.889911016 1.65482203,0.75 2,0.75 L2,0.75 Z" id="Rectangle-17" stroke-width="1.5"></path><polyline id="Path-10" stroke-width="1.5" points="8 13 8 16.5349839 8 18"></polyline><polyline id="Path-10" stroke-width="1.5" points="12 13 12 16.5349839 12 18"></polyline><line x1="5" y1="18" x2="15" y2="18" id="Path-19" stroke-width="1.5" stroke-linecap="round"></line><line x1="7" y1="9" x2="13" y2="9" id="Path-26"></line><rect id="Rectangle-18" x="3.5" y="7.5" width="3" height="3" rx="1"></rect><line x1="10" y1="9" x2="10" y2="6" id="Path-26"></line><rect id="Rectangle-18" x="8.5" y="2.5" width="3" height="3" rx="1"></rect><rect id="Rectangle-18" x="13.5" y="7.5" width="3" height="3" rx="1"></rect></g></g></g></svg>'},347:e=>{e.exports='<svg viewBox="0 0 20 19" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>模型组#8960DC</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-445.000000, -437.000000)" stroke="#8960DC"><g id="模型组#8960DC" transform="translate(445.000000, 437.000000)"><path d="M18,0.75 C18.345178,0.75 18.657678,0.889911016 18.8838835,1.11611652 C19.110089,1.34232203 19.25,1.65482203 19.25,2 L19.25,2 L19.25,11 C19.25,11.345178 19.110089,11.657678 18.8838835,11.8838835 C18.657678,12.110089 18.345178,12.25 18,12.25 L18,12.25 L2,12.25 C1.65482203,12.25 1.34232203,12.110089 1.11611652,11.8838835 C0.889911016,11.657678 0.75,11.345178 0.75,11 L0.75,11 L0.75,2 C0.75,1.65482203 0.889911016,1.34232203 1.11611652,1.11611652 C1.34232203,0.889911016 1.65482203,0.75 2,0.75 L2,0.75 Z" id="Rectangle-17" stroke-width="1.5"></path><polyline id="Path-10" stroke-width="1.5" points="8 13 8 16.5349839 8 18"></polyline><polyline id="Path-10" stroke-width="1.5" points="12 13 12 16.5349839 12 18"></polyline><line x1="5" y1="18" x2="15" y2="18" id="Path-19" stroke-width="1.5" stroke-linecap="round"></line><path d="M7,9 L8.54756795,9 M11.6687906,9 L13,9" id="形状"></path><rect id="Rectangle-18" x="3.5" y="7.5" width="3" height="3" rx="1"></rect><line x1="10" y1="7.62025436" x2="10" y2="6" id="Path-26"></line><rect id="Rectangle-18" x="8.5" y="2.5" width="3" height="3" rx="1"></rect><rect id="Rectangle-18备份" x="8.5" y="7.5" width="3" height="3" rx="1"></rect><rect id="Rectangle-18" x="13.5" y="7.5" width="3" height="3" rx="1"></rect></g></g></g></svg>'},4257:e=>{e.exports='<svg viewBox="0 0 22 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>用户类型#666FA6</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-695.000000, -435.000000)" stroke="#666FA6" stroke-width="1.5"><g id="用户类型#666FA6" transform="translate(696.000000, 436.250000)"><circle id="椭圆形" cx="10" cy="3.64912281" r="3.64912281"></circle><path d="M15.7946839,9.72627402 C14.159901,8.56197303 12.15992,7.87719298 10,7.87719298 C4.4771525,7.87719298 0,12.3543455 0,17.877193" id="路径" stroke-linecap="round"></path><line x1="12.3008142" y1="12.3303032" x2="20" y2="12.3303032" id="路径-231" stroke-linecap="round"></line><line x1="10.4300194" y1="14.7617972" x2="20" y2="14.7617972" id="路径-231" stroke-linecap="round"></line><line x1="8.34196321" y1="17.3303032" x2="20" y2="17.3303032" id="路径-231" stroke-linecap="round"></line></g></g></g></svg>'},1594:e=>{e.exports='<svg viewBox="0 0 19 19" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>资产#73D8E6</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-319.000000, -436.000000)" stroke="#73D8E6" stroke-width="1.5"><g id="资产#73D8E6" transform="translate(319.000000, 436.000000)"><rect id="Rectangle-2" x="0.75" y="0.75" width="7.5" height="7.5" rx="2"></rect><rect id="Rectangle-2" x="10.75" y="0.75" width="7.5" height="7.5" rx="2"></rect><rect id="Rectangle-2" x="10.75" y="10.75" width="7.5" height="7.5" rx="2"></rect><rect id="Rectangle-2" x="0.75" y="10.75" width="7.5" height="7.5" rx="2"></rect></g></g></g></svg>'},8627:e=>{e.exports='<svg viewBox="0 0 19 19" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><title>资产组#3CB9D7</title><g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"><g id="图标" transform="translate(-361.000000, -436.000000)" stroke="#3CB9D7" stroke-width="1.5"><g id="资产组#3CB9D7" transform="translate(361.000000, 436.000000)"><rect id="Rectangle-2" x="0.75" y="0.75" width="7.5" height="7.5" rx="2"></rect><rect id="Rectangle-2" x="10.75" y="0.75" width="7.5" height="7.5" rx="2"></rect><rect id="Rectangle-2" x="12.75" y="2.75" width="3.5" height="3.5" rx="1"></rect><rect id="Rectangle-2备份" x="2.75" y="12.75" width="3.5" height="3.5" rx="1"></rect><rect id="Rectangle-2" x="10.75" y="10.75" width="7.5" height="7.5" rx="2"></rect><rect id="Rectangle-2" x="0.75" y="10.75" width="7.5" height="7.5" rx="2"></rect></g></g></g></svg>'},8074:(e,t,r)=>{var n={"./字节数组.svg":6054,"./对象.svg":3050,"./工作表.svg":7115,"./工作表组#F27E54.svg":3567,"./工作表记录.svg":3376,"./布尔.svg":6952,"./数字.svg":7910,"./数据点.svg":8243,"./数组.svg":2259,"./文本.svg":5016,"./日期.svg":5723,"./模型.svg":13,"./模型组#8960DC.svg":347,"./用户.svg":4257,"./资产.svg":1594,"./资产组#3CB9D7.svg":8627};function o(e){var t=i(e);return r(t)}function i(e){if(!r.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}o.keys=function(){return Object.keys(n)},o.resolve=i,e.exports=o,o.id=8074},7363:e=>{"use strict";e.exports=React},1533:e=>{"use strict";e.exports=ReactDOM},979:e=>{"use strict";e.exports=ReactDnD},6029:e=>{"use strict";e.exports=ReactDnDHTML5Backend},2611:e=>{"use strict";e.exports=_},1821:e=>{"use strict";e.exports=antd},6640:e=>{"use strict";e.exports=icons},3078:e=>{"use strict";e.exports=xadmin},3204:e=>{"use strict";e.exports=xadminForm},5907:e=>{"use strict";e.exports=xadminUi},7061:(e,t,r)=>{var n=r(8698).default;function o(){"use strict";e.exports=o=function(){return t},e.exports.__esModule=!0,e.exports.default=e.exports;var t={},r=Object.prototype,i=r.hasOwnProperty,a=Object.defineProperty||function(e,t,r){e[t]=r.value},s="function"==typeof Symbol?Symbol:{},l=s.iterator||"@@iterator",c=s.asyncIterator||"@@asyncIterator",u=s.toStringTag||"@@toStringTag";function d(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{d({},"")}catch(e){d=function(e,t,r){return e[t]=r}}function m(e,t,r,n){var o=t&&t.prototype instanceof g?t:g,i=Object.create(o.prototype),s=new B(n||[]);return a(i,"_invoke",{value:C(e,r,s)}),i}function p(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}t.wrap=m;var b={};function g(){}function f(){}function h(){}var v={};d(v,l,(function(){return this}));var y=Object.getPrototypeOf,w=y&&y(y(F([])));w&&w!==r&&i.call(w,l)&&(v=w);var A=h.prototype=g.prototype=Object.create(v);function x(e){["next","throw","return"].forEach((function(t){d(e,t,(function(e){return this._invoke(t,e)}))}))}function k(e,t){function r(o,a,s,l){var c=p(e[o],e,a);if("throw"!==c.type){var u=c.arg,d=u.value;return d&&"object"==n(d)&&i.call(d,"__await")?t.resolve(d.__await).then((function(e){r("next",e,s,l)}),(function(e){r("throw",e,s,l)})):t.resolve(d).then((function(e){u.value=e,s(u)}),(function(e){return r("throw",e,s,l)}))}l(c.arg)}var o;a(this,"_invoke",{value:function(e,n){function i(){return new t((function(t,o){r(e,n,t,o)}))}return o=o?o.then(i,i):i()}})}function C(e,t,r){var n="suspendedStart";return function(o,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw i;return{value:void 0,done:!0}}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var s=D(a,r);if(s){if(s===b)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=p(e,t,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===b)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}function D(e,t){var r=t.method,n=e.iterator[r];if(void 0===n)return t.delegate=null,"throw"===r&&e.iterator.return&&(t.method="return",t.arg=void 0,D(e,t),"throw"===t.method)||"return"!==r&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+r+"' method")),b;var o=p(n,e.iterator,t.arg);if("throw"===o.type)return t.method="throw",t.arg=o.arg,t.delegate=null,b;var i=o.arg;return i?i.done?(t[e.resultName]=i.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,b):i:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,b)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function S(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function B(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function F(e){if(e){var t=e[l];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,n=function t(){for(;++r<e.length;)if(i.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return n.next=n}}return{next:T}}function T(){return{value:void 0,done:!0}}return f.prototype=h,a(A,"constructor",{value:h,configurable:!0}),a(h,"constructor",{value:f,configurable:!0}),f.displayName=d(h,u,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===f||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,d(e,u,"GeneratorFunction")),e.prototype=Object.create(A),e},t.awrap=function(e){return{__await:e}},x(k.prototype),d(k.prototype,c,(function(){return this})),t.AsyncIterator=k,t.async=function(e,r,n,o,i){void 0===i&&(i=Promise);var a=new k(m(e,r,n,o),i);return t.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},x(A),d(A,u,"Generator"),d(A,l,(function(){return this})),d(A,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),r=[];for(var n in t)r.push(n);return r.reverse(),function e(){for(;r.length;){var n=r.pop();if(n in t)return e.value=n,e.done=!1,e}return e.done=!0,e}},t.values=F,B.prototype={constructor:B,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!e)for(var t in this)"t"===t.charAt(0)&&i.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,n){return a.type="throw",a.arg=e,t.next=r,n&&(t.method="next",t.arg=void 0),!!n}for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n],a=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=i.call(o,"catchLoc"),l=i.call(o,"finallyLoc");if(s&&l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&i.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}o&&("break"===e||"continue"===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=e,a.arg=t,o?(this.method="next",this.next=o.finallyLoc,b):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),b},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),S(r),b}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;S(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:F(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),b}},t}e.exports=o,e.exports.__esModule=!0,e.exports.default=e.exports},8698:e=>{function t(r){return e.exports=t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e.exports.__esModule=!0,e.exports.default=e.exports,t(r)}e.exports=t,e.exports.__esModule=!0,e.exports.default=e.exports},4687:(e,t,r)=>{var n=r(7061)();e.exports=n;try{regeneratorRuntime=n}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=n:Function("r","regeneratorRuntime = r")(n)}},907:(e,t,r)=>{"use strict";function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}r.d(t,{Z:()=>n})},5861:(e,t,r)=>{"use strict";function n(e,t,r,n,o,i,a){try{var s=e[i](a),l=s.value}catch(e){return void r(e)}s.done?t(l):Promise.resolve(l).then(n,o)}function o(e){return function(){var t=this,r=arguments;return new Promise((function(o,i){var a=e.apply(t,r);function s(e){n(a,o,i,s,l,"next",e)}function l(e){n(a,o,i,s,l,"throw",e)}s(void 0)}))}}r.d(t,{Z:()=>o})},4942:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(9142);function o(e,t,r){return(t=(0,n.Z)(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}},7462:(e,t,r)=>{"use strict";function n(){return n=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},n.apply(this,arguments)}r.d(t,{Z:()=>n})},885:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(181);function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,s=[],l=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=i.call(r)).done)&&(s.push(n.value),s.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return s}}(e,t)||(0,n.Z)(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},9142:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(1002);function o(e){var t=function(e,t){if("object"!==(0,n.Z)(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==(0,n.Z)(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===(0,n.Z)(t)?t:String(t)}},1002:(e,t,r)=>{"use strict";function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}r.d(t,{Z:()=>n})},181:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(907);function o(e,t){if(e){if("string"==typeof e)return(0,n.Z)(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?(0,n.Z)(e,t):void 0}}}},__webpack_module_cache__={},leafPrototypes,getProto,inProgress,dataWebpackPrefix;function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__webpack_require__),r.loaded=!0,r.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},getProto=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,__webpack_require__.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var r=Object.create(null);__webpack_require__.r(r);var n={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var o=2&t&&e;"object"==typeof o&&!~leafPrototypes.indexOf(o);o=getProto(o))Object.getOwnPropertyNames(o).forEach((t=>n[t]=()=>e[t]));return n.default=()=>e,__webpack_require__.d(r,n),r},__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.f={},__webpack_require__.e=e=>Promise.all(Object.keys(__webpack_require__.f).reduce(((t,r)=>(__webpack_require__.f[r](e,t),t)),[])),__webpack_require__.u=e=>"chunks/"+e+"."+{249:"fd2693cc4b8f0b99c180",525:"05396e4481634c3f56bf",848:"b63f06c9c4755aaff763",854:"814282aa9000d64f4bef",911:"9bb0e062d9e134eae6a2",942:"69d887d971221cd5cecf",996:"94fab15fcc7debda7751",1065:"9ef2909c11e432b29d5f",1072:"c4350041efa34b245765",1134:"59cf241b96ba49e3fad8",1147:"0099f3101224db0d6197",1156:"d2388d72444aef1a1e07",1259:"b09753e612a3c81538e2",1448:"e3bc5efda99e0641bfff",1471:"39c6ee6f340e64f8b7b6",1590:"992957e04a175306dc4d",1719:"ebc2ef5505dbc6fd2f19",1960:"91500f8f7349954a4699",1961:"2bbd7fc2ab607c34efb5",2060:"f75cc52c79afee6147c5",2075:"64ecb4a40fed810d24fa",2140:"020a4e931f8b6753f04a",2571:"5265186fc8be108b937c",2621:"8217ed5b839bea2a7481",2625:"ef7bbecbb0f800dc5bee",2716:"51fb861646473b8d4b1e",2798:"b0267c40b4c433c6e20d",2892:"3e41260929ee4be0235a",2911:"1b2f326c8292658c99a1",2954:"db69802f973dd1f36fdf",3036:"e44f79a1019df147ef32",3585:"275d107d2318e07776d6",3919:"7c1bae778849fdbcd9de",4129:"d2d43d2f35d78e817fa6",4368:"6b651d0770d08420e834",4386:"a9e69af5b658880bfbc3",4407:"47f193f4f01aae43346c",4756:"81e7e2e12602c393363e",4902:"ca9ef6d609d3fbfe9436",5062:"0fd07f0260a8ab2c86bc",5466:"2a349b25fb8bc8a052b4",5547:"c66d578cf673156a409f",5593:"7c477a85aec5e46c7030",5703:"bca380115eaeb9eb3e43",5849:"e07a0e1fe78a75a32bf5",6082:"f934727572e80c22db8d",6241:"3b0e98cc622788b995ad",6390:"ce533ce2962c524dae78",6424:"96f584f3aa7c18c19623",6449:"1fc0cf54985a7075500c",6489:"8f3b6cce4ebe831a1b78",6586:"1b9fea351272ad4356a0",6587:"ff68e6dc4cc6e541b894",6717:"f235e73dd4f3f6781204",6984:"fd4fe4ff0d2ebaa4d83b",7043:"4b358a61f2e31d990966",7287:"8f747e3a766fe6c68236",7562:"7aa7839586a301a9705b",7637:"63e07fe7487d9e475652",7778:"abb54fbb70fa91786659",7835:"8dac724900d8461a0cc2",8070:"bb80d1d2f181d80cce56",8084:"cf6b58d615c0c4423c2c",8180:"9cbba32d85395e700a72",8253:"e77dca7562d45e2cde8f",8339:"dd4ae2afd53a416bc8a3",8387:"34a6b085a257a8ce301f",8424:"473f6793a5bcb1bdf92e",8670:"5da6b8332c4b5e27f8f7",8715:"b7eacb0fdbfc2ffc3ecc",8719:"1df3ca3454dccbfa026f",8825:"6b3bf25ce3b397f34c41",8946:"ba5b3e8cea649e9a24fc",9157:"6f61042d982725a7e76e",9398:"4bbff942ae73fd7b9899",9537:"a5dd39daccc8f87f21c9",9684:"142480118393fad93680",9907:"aaa63e3de3e9d3272e77"}[e]+".js",__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),inProgress={},dataWebpackPrefix="@airiot/editor:",__webpack_require__.l=(e,t,r,n)=>{if(inProgress[e])inProgress[e].push(t);else{var o,i;if(void 0!==r)for(var a=document.getElementsByTagName("script"),s=0;s<a.length;s++){var l=a[s];if(l.getAttribute("src")==e||l.getAttribute("data-webpack")==dataWebpackPrefix+r){o=l;break}}o||(i=!0,(o=document.createElement("script")).charset="utf-8",o.timeout=120,__webpack_require__.nc&&o.setAttribute("nonce",__webpack_require__.nc),o.setAttribute("data-webpack",dataWebpackPrefix+r),o.src=e),inProgress[e]=[t];var c=(t,r)=>{o.onerror=o.onload=null,clearTimeout(u);var n=inProgress[e];if(delete inProgress[e],o.parentNode&&o.parentNode.removeChild(o),n&&n.forEach((e=>e(r))),t)return t(r)},u=setTimeout(c.bind(null,void 0,{type:"timeout",target:o}),12e4);o.onerror=c.bind(null,o.onerror),o.onload=c.bind(null,o.onload),i&&document.head.appendChild(o)}},__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var t=__webpack_require__.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var n=r.length-1;n>-1&&!e;)e=r[n--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})(),(()=>{var e={4826:0};__webpack_require__.f.j=(t,r)=>{var n=__webpack_require__.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,o)=>n=e[t]=[r,o]));r.push(n[2]=o);var i=__webpack_require__.p+__webpack_require__.u(t),a=new Error;__webpack_require__.l(i,(r=>{if(__webpack_require__.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),i=r&&r.target&&r.target.src;a.message="Loading chunk "+t+" failed.\n("+o+": "+i+")",a.name="ChunkLoadError",a.type=o,a.request=i,n[1](a)}}),"chunk-"+t,t)}};var t=(t,r)=>{var n,o,[i,a,s]=r,l=0;if(i.some((t=>0!==e[t]))){for(n in a)__webpack_require__.o(a,n)&&(__webpack_require__.m[n]=a[n]);s&&s(__webpack_require__)}for(t&&t(r);l<i.length;l++)o=i[l],__webpack_require__.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=this.webpackChunk_airiot_editor=this.webpackChunk_airiot_editor||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),__webpack_require__.nc=void 0;var __webpack_exports__={};(()=>{"use strict";var e=__webpack_require__(4942),t=__webpack_require__(3078),r=__webpack_require__.n(t),n=__webpack_require__(5907),o=__webpack_require__(885),i=__webpack_require__(7363),a=__webpack_require__.n(i),s=(__webpack_require__(2611),__webpack_require__(5546)),l=function(){return{x:{title:_r("X轴"),type:"number"},y:{title:_r("Y轴"),type:"number"},z:{title:_r("Z轴"),type:"number"}}};const c={type:"object",properties:{sceneConfig:{title:_r("场景"),type:"object",fieldType:"fieldset_card",properties:{background:{title:_r("背景颜色"),type:"string",fieldType:"color"},backgroundImage:{title:_r("背景贴图"),type:"object",properties:{imageType:{title:_r("贴图方式"),type:"string",enum:["panorama","cube"],enum_title:["全景贴图","立方体贴图"],field:{effect:function(e,t){var r=e.value;setTimeout((function(){t.setFieldData("sceneConfig.backgroundImage.panorama",{display:"panorama"===r}),t.setFieldData("sceneConfig.backgroundImage.posX",{display:"cube"===r}),t.setFieldData("sceneConfig.backgroundImage.negX",{display:"cube"===r}),t.setFieldData("sceneConfig.backgroundImage.posY",{display:"cube"===r}),t.setFieldData("sceneConfig.backgroundImage.negY",{display:"cube"===r}),t.setFieldData("sceneConfig.backgroundImage.posZ",{display:"cube"===r}),t.setFieldData("sceneConfig.backgroundImage.negZ",{display:"cube"===r})}))}}},panorama:{title:_r("全景图"),type:"string",fieldType:"image"},posX:{title:"X轴正向(posx)",type:"string",fieldType:"image"},negX:{title:"X轴负向(negx)",type:"string",fieldType:"image"},posY:{title:"Y轴正向(posy)",type:"string",fieldType:"image"},negY:{title:"Y轴负向(negy)",type:"string",fieldType:"image"},posZ:{title:"Z轴正向(posz)",type:"string",fieldType:"image"},negZ:{title:"Z轴负向(negz)",type:"string",fieldType:"image"}}},fog:{title:"雾",type:"object",properties:{enable:{title:_r("启用"),type:"boolean"},color:{title:_r("颜色"),type:"string",fieldType:"color"},near:{title:_r("最小距离"),type:"number"},far:{title:_r("最大距离"),type:"number"}}},ground:{title:_r("地平面"),type:"object",properties:{enable:{title:_r("启用"),type:"boolean"},materialType:{title:_r("材质"),type:"string",enum:["MeshBasicMaterial","MeshLambertMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshPhysicalMaterial","MeshToonMaterial"],enum_title:["基础","非光泽","变化","高光","物理","卡通"]},width:{title:_r("宽度"),type:"number"},height:{title:_r("高度"),type:"number"},color:{title:_r("颜色"),type:"string",fieldType:"color"}}}}},cameraConfig:{title:_r("相机"),type:"object",fieldType:"fieldset_card",properties:{fov:{title:_r("视野角度"),type:"number"},near:{title:_r("近端面距离"),type:"number"},far:{title:_r("远端面距离"),type:"number"},cameraPositon:{title:_r("初始位置"),type:"object",properties:l()},cameraLookAt:{title:_r("初始方向"),type:"object",properties:l()},controlType:{title:_r("控制器类别"),type:"string",enum:["orbit","pointerLock","fly"],enum_title:["轨道","行走","飞行"]},orbitConfig:{title:_r("轨道控制器"),type:"object",properties:{enabled:{title:_r("启用"),type:"boolean",description:"控制相机移动轨道"},enableRotate:{title:_r("旋转"),type:"boolean",description:"按住鼠标左键进行旋转"},rotateSpeed:{title:_r("旋转速度"),type:"number",minimum:0},maxAzimuthAngle:{title:_r("水平角度上限"),type:"number",description:"取值范围-π到π，默认为无限制",minimum:-Math.PI,maximum:Math.PI},minAzimuthAngle:{title:_r("水平角度下限"),type:"number",description:"取值范围-π到π，默认为无限制",minimum:-Math.PI,maximum:Math.PI},maxPolarAngle:{title:_r("垂直角度上限"),type:"number",description:"取值范围0到π，默认值为π",minimum:0,maximum:Math.PI},minPolarAngle:{title:_r("垂直角度下限"),type:"number",description:"取值范围0到π，默认值为0",minimum:0,maximum:Math.PI},enablePan:{title:_r("平移"),type:"boolean",description:"按住鼠标右键进行平移"},panSpeed:{title:_r("平移速度"),type:"number",minimum:0},enableZoom:{title:_r("缩放"),type:"boolean",description:"利用鼠标滚轮进行缩放"},zoomSpeed:{title:_r("缩放速度"),type:"number",minimum:0},maxDistance:{title:_r("缩放距离上限"),type:"number",minimum:0},minDistance:{title:_r("缩放距离下限"),type:"number",minimum:0},enableDamping:{title:_r("阻尼"),type:"boolean",description:"给控制器带来重量感"},dampingFactor:{title:_r("阻尼因子"),type:"number",description:"数值越大，阻力越大，取值范围0~1",field:{validate:function(e){return e<0||e>1?"超出取值范围":""}}},autoRotate:{title:_r("自动旋转"),type:"boolean"},autoRotateSpeed:{title:_r("自动旋转速度"),type:"number",minimum:0}}},pointerLockConfig:{title:_r("行走控制器"),type:"object",properties:{enabled:{title:_r("启用"),type:"boolean"},eyeHeight:{title:_r("视线高度"),type:"number"},moveSpeed:{title:_r("移动速度"),type:"number"},fallSpeed:{title:_r("下落速度"),type:"number"},jumpHeight:{title:_r("跳跃高度"),type:"number"}}},flyConfig:{title:_r("飞行控制器"),type:"object",properties:{enabled:{title:_r("启用"),type:"boolean"},autoForward:{title:_r("自动前进"),type:"boolean"},movementSpeed:{title:_r("移动速度"),type:"number"},rollSpeed:{title:_r("旋转速度"),type:"number"}}}}},snapshotConfig:{title:_r("快照"),type:"object",fieldType:"fieldset_card",properties:{snapshotVar:{title:_r("快照变量"),type:"object",fieldType:"dataPoint"},snapshotList:{title:_r("快照列表"),type:"array",field:{ButtonBody:function(e){var t,r=e.input,n=e.index,o=e.inputName;return(null==r||null===(t=r.value[n])||void 0===t?void 0:t.name)||o}},items:{type:"object",properties:{name:{title:_r("名称"),type:"string"},position:{title:_r("位置"),type:"object",properties:l()},target:{title:_r("方向"),type:"object",properties:l()}}}}}},renderConfig:{title:_r("渲染"),type:"object",fieldType:"fieldset_card",properties:{outputEncoding:{title:_r("色彩空间"),type:"string",enum:["LinearEncoding","sRGBEncoding","GammaEncoding"],enum_title:["Linear","sRGB","Gamma"],field:{effect:function(e,t){var r=e.value;setTimeout((function(){t.setFieldData("renderConfig.gammaFactor",{display:"GammaEncoding"===r})}))}}},gammaFactor:{title:"gamma因子",type:"number"}}},lightConfig:{title:_r("灯光"),type:"object",fieldType:"fieldset_card",properties:{ambientLight:{title:_r("环境光"),type:"array",items:{type:"object",properties:{enable:{title:_r("启用"),type:"boolean"},color:{title:_r("颜色"),type:"string",fieldType:"color"},intensity:{title:_r("强度"),type:"number"}}}},directionalLight:{title:_r("平行光"),type:"array",items:{type:"object",properties:{enable:{title:_r("启用"),type:"boolean"},color:{title:_r("颜色"),type:"string",fieldType:"color"},intensity:{title:_r("强度"),type:"number"},castShadow:{title:_r("阴影"),type:"boolean"},position:{title:_r("位置"),type:"object",properties:l()}}}},hemisphereLight:{title:_r("半球光"),type:"array",items:{type:"object",properties:{enable:{title:_r("启用"),type:"boolean"},skyColor:{title:_r("天空颜色"),type:"string",fieldType:"color"},groundColor:{title:_r("地面颜色"),type:"string",fieldType:"color"},intensity:{title:_r("强度"),type:"number"},position:{title:_r("位置"),type:"object",properties:l()}}}},pointLight:{title:_r("点光"),type:"array",items:{type:"object",properties:{enable:{title:_r("启用"),type:"boolean"},color:{title:_r("颜色"),type:"string",fieldType:"color"},intensity:{title:_r("强度"),type:"number"},distance:{title:_r("距离"),type:"number"},decay:{title:_r("衰退量"),type:"number"},castShadow:{title:_r("阴影"),type:"boolean"},position:{title:_r("位置"),type:"object",properties:l()}}}},spotLight:{title:_r("聚光灯"),type:"array",items:{type:"object",properties:{enable:{title:_r("启用"),type:"boolean"},color:{title:_r("颜色"),type:"string",fieldType:"color"},intensity:{title:_r("强度"),type:"number"},distance:{title:_r("距离"),type:"number"},angle:{title:_r("散射角度"),type:"number",description:"取值在0到π/2之间, 默认值为π/3"},penumbra:{title:_r("衰减百分比"),type:"number",description:"取值在0到1之间，默认值为0"},decay:{title:_r("衰减量"),type:"number"},castShadow:{title:_r("阴影"),type:"boolean"},position:{title:_r("位置"),type:"object",properties:l()}}}}}},helperConfig:{title:_r("辅助"),type:"object",fieldType:"fieldset_card",properties:{gridConfig:{title:_r("坐标格"),type:"object",properties:{enable:{title:_r("启用"),type:"boolean"},size:{title:_r("尺寸"),type:"number"},divisions:{title:_r("细分次数"),type:"number"},colorCenterLine:{title:_r("中线颜色"),type:"string",fieldType:"color"},colorGrid:{title:_r("网格线颜色"),type:"string",fieldType:"color"}}},axesConfig:{title:_r("坐标轴"),type:"object",properties:{enable:{title:_r("启用"),type:"boolean",description:"X轴为红色线，Y轴为绿色线，Z轴为蓝色线"},size:{title:_r("轴线长度"),type:"number"}}}}}}};var u=__webpack_require__(1415);const d=JSON.parse('{"vs/base/common/date":{"date.fromNow.in":"{0} 后","date.fromNow.now":"现在","date.fromNow.seconds.singular.ago":"{0} 秒前","date.fromNow.seconds.plural.ago":"{0} 秒前","date.fromNow.seconds.singular":"{0} 秒","date.fromNow.seconds.plural":"{0} 秒","date.fromNow.minutes.singular.ago":"{0} 分钟前","date.fromNow.minutes.plural.ago":"{0} 分钟前","date.fromNow.minutes.singular":"{0} 分钟","date.fromNow.minutes.plural":"{0} 分钟","date.fromNow.hours.singular.ago":"{0} 小时前","date.fromNow.hours.plural.ago":"{0} 小时前","date.fromNow.hours.singular":"{0} 小时","date.fromNow.hours.plural":"{0} 小时","date.fromNow.days.singular.ago":"{0} 天前","date.fromNow.days.plural.ago":"{0} 天前","date.fromNow.days.singular":"{0} 天","date.fromNow.days.plural":"{0} 天","date.fromNow.weeks.singular.ago":"{0} 周前","date.fromNow.weeks.plural.ago":"{0} 周前","date.fromNow.weeks.singular":"{0} 周","date.fromNow.weeks.plural":"{0} 周","date.fromNow.months.singular.ago":"{0} 个月前","date.fromNow.months.plural.ago":"{0} 个月前","date.fromNow.months.singular":"{0} 个月","date.fromNow.months.plural":"{0} 个月","date.fromNow.years.singular.ago":"{0} 年前","date.fromNow.years.plural.ago":"{0} 年前","date.fromNow.years.singular":"{0} 年","date.fromNow.years.plural":"{0} 年"},"vs/base/common/codicons":{"dropDownButton":"下拉按钮的图标。"},"vs/base/common/actions":{"submenu.empty":"(空)"},"vs/base/node/processes":{"TaskRunner.UNC":"无法在 UNC 驱动器上执行 Shell 命令。"},"vs/base/common/errorMessage":{"stackTrace.format":"{0}: {1}","nodeExceptionMessage":"发生了系统错误 ({0})","error.defaultMessage":"出现未知错误。有关详细信息，请参阅日志。","error.moreErrors":"{0} 个(共 {1} 个错误)"},"vs/base/node/zip":{"invalid file":"提取 {0} 时出错。文件无效。","incompleteExtract":"解压不完整。找到了 {0} / {1} 个项目","notFound":"在 Zip 中找不到 {0}。"},"vs/base/browser/ui/dialog/dialog":{"ok":"确定","dialogInfoMessage":"信息","dialogErrorMessage":"错误","dialogWarningMessage":"警告","dialogPendingMessage":"正在进行","dialogClose":"关闭对话框"},"vs/base/browser/ui/actionbar/actionViewItems":{"titleLabel":"{0} ({1})"},"vs/base/browser/ui/keybindingLabel/keybindingLabel":{"unbound":"未绑定"},"vs/base/browser/ui/menu/menubar":{"mAppMenu":"应用程序菜单","mMore":"更多"},"vs/base/browser/ui/menu/menu":{"titleLabel":"{0} ({1})"},"vs/base/common/jsonErrorMessages":{"error.invalidSymbol":"无效符号","error.invalidNumberFormat":"数字格式无效","error.propertyNameExpected":"需要属性名","error.valueExpected":"需要值","error.colonExpected":"需要冒号","error.commaExpected":"需要逗号","error.closeBraceExpected":"需要右大括号","error.closeBracketExpected":"需要右括号","error.endOfFileExpected":"文件应结束"},"vs/base/common/keybindingLabels":{"ctrlKey":"Ctrl","shiftKey":"Shift","altKey":"Alt","windowsKey":"Windows","superKey":"超键","ctrlKey.long":"Control","shiftKey.long":"Shift","altKey.long":"Alt","cmdKey.long":"Command","windowsKey.long":"Windows","superKey.long":"超键"},"vs/base/browser/ui/tree/abstractTree":{"clear":"清除","disable filter on type":"禁用输入时筛选","enable filter on type":"启用输入时筛选","empty":"未找到元素","found":"已匹配 {0} 个元素(共 {1} 个)"},"vs/base/browser/ui/tree/treeDefaults":{"collapse all":"全部折叠"},"vs/base/browser/ui/toolbar/toolbar":{"moreActions":"更多操作..."},"vs/base/browser/ui/splitview/paneview":{"viewSection":"{0}部分"},"vs/base/browser/ui/inputbox/inputBox":{"alertErrorMessage":"错误: {0}","alertWarningMessage":"警告: {0}","alertInfoMessage":"信息: {0}"},"vs/base/parts/quickinput/browser/quickInput":{"backButtonIcon":"“快速输入”对话框中的“后退”按钮的图标。","quickInput.back":"上一步","quickInput.steps":"{0}/{1}","quickInputBox.ariaLabel":"在此输入可缩小结果范围。","inputModeEntry":"按 \\"Enter\\" 以确认或按 \\"Esc\\" 以取消","inputModeEntryDescription":"{0} (按 \\"Enter\\" 以确认或按 \\"Esc\\" 以取消)","quickInput.visibleCount":"{0} 个结果","quickInput.countSelected":"已选 {0} 项","ok":"确定","custom":"自定义","quickInput.backWithKeybinding":"后退 ({0})"},"vs/base/browser/ui/findinput/findInput":{"defaultLabel":"输入"},"vs/base/browser/ui/findinput/replaceInput":{"defaultLabel":"输入","label.preserveCaseCheckbox":"保留大小写"},"vs/base/browser/ui/findinput/findInputCheckboxes":{"caseDescription":"区分大小写","wordsDescription":"全字匹配","regexDescription":"使用正则表达式"},"vs/base/parts/quickinput/browser/quickInputList":{"quickInput":"快速输入"},"vs/base/browser/ui/selectBox/selectBoxCustom":{"selectBox":"选择框"},"vs/editor/browser/editorExtensions":{"miUndo":"撤消(&&U)","undo":"撤消","miRedo":"恢复(&&R)","redo":"恢复","miSelectAll":"全选(&&S)","selectAll":"选择全部"},"vs/editor/common/modes/modesRegistry":{"plainText.alias":"纯文本"},"vs/editor/common/config/editorOptions":{"accessibilitySupport.auto":"编辑器将使用平台 API 以检测是否附加了屏幕阅读器。","accessibilitySupport.on":"编辑器将针对与屏幕阅读器搭配使用进行永久优化。将禁用自动换行。","accessibilitySupport.off":"编辑器将不再对屏幕阅读器的使用进行优化。","accessibilitySupport":"控制编辑器是否应在对屏幕阅读器进行了优化的模式下运行。设置为“开”将禁用自动换行。","comments.insertSpace":"控制在注释时是否插入空格字符。","comments.ignoreEmptyLines":"控制在对行注释执行切换、添加或删除操作时，是否应忽略空行。","emptySelectionClipboard":"控制在没有选择内容时进行复制是否复制当前行。","find.cursorMoveOnType":"控制在键入时光标是否应跳转以查找匹配项。","find.seedSearchStringFromSelection":"控制是否将编辑器选中内容作为搜索词填入到查找小组件中。","editor.find.autoFindInSelection.never":"切勿自动打开“选择中查找”(默认)","editor.find.autoFindInSelection.always":"始终自动打开“在选择中查找”","editor.find.autoFindInSelection.multiline":"选择多行内容时，自动打开“在选择中查找”。","find.autoFindInSelection":"控制在所选内容中自动开启查找的条件。","find.globalFindClipboard":"控制“查找”小组件是否读取或修改 macOS 的共享查找剪贴板。","find.addExtraSpaceOnTop":"控制 \\"查找小部件\\" 是否应在编辑器顶部添加额外的行。如果为 true, 则可以在 \\"查找小工具\\" 可见时滚动到第一行之外。","find.loop":"控制在找不到其他匹配项时，是否自动从开头(或结尾)重新开始搜索。","fontLigatures":"启用/禁用字体连字(\\"calt\\" 和 \\"liga\\" 字体特性)。将此更改为字符串，可对 \\"font-feature-settings\\" CSS 属性进行精细控制。","fontFeatureSettings":"显式 \\"font-feature-settings\\" CSS 属性。如果只需打开/关闭连字，可以改为传递布尔值。","fontLigaturesGeneral":"配置字体连字或字体特性。可以是用于启用/禁用连字的布尔值，或用于设置 CSS \\"font-feature-settings\\" 属性值的字符串。","fontSize":"控制字体大小(像素)。","fontWeightErrorMessage":"仅允许使用关键字“正常”和“加粗”，或使用介于 1 至 1000 之间的数字。","fontWeight":"控制字体粗细。接受关键字“正常”和“加粗”，或者接受介于 1 至 1000 之间的数字。","editor.gotoLocation.multiple.peek":"显示结果的预览视图 (默认值)","editor.gotoLocation.multiple.gotoAndPeek":"转到主结果并显示预览视图","editor.gotoLocation.multiple.goto":"转到主结果，并对其他人启用防偷窥导航","editor.gotoLocation.multiple.deprecated":"此设置已弃用，请改用单独的设置，如\\"editor.editor.gotoLocation.multipleDefinitions\\"或\\"editor.editor.gotoLocation.multipleImplementations\\"。","editor.editor.gotoLocation.multipleDefinitions":"控制存在多个目标位置时\\"转到定义\\"命令的行为。","editor.editor.gotoLocation.multipleTypeDefinitions":"控制存在多个目标位置时\\"转到类型定义\\"命令的行为。","editor.editor.gotoLocation.multipleDeclarations":"控制存在多个目标位置时\\"转到声明\\"命令的行为。","editor.editor.gotoLocation.multipleImplemenattions":"控制存在多个目标位置时\\"转到实现\\"命令的行为。","editor.editor.gotoLocation.multipleReferences":"控制存在多个目标位置时\\"转到引用\\"命令的行为。","alternativeDefinitionCommand":"当\\"转到定义\\"的结果为当前位置时将要执行的替代命令的 ID。","alternativeTypeDefinitionCommand":"当\\"转到类型定义\\"的结果是当前位置时正在执行的备用命令 ID。","alternativeDeclarationCommand":"当\\"转到声明\\"的结果为当前位置时将要执行的替代命令的 ID。","alternativeImplementationCommand":"当\\"转到实现\\"的结果为当前位置时将要执行的替代命令的 ID。","alternativeReferenceCommand":"当\\"转到引用\\"的结果是当前位置时正在执行的替代命令 ID。","hover.enabled":"控制是否显示悬停提示。","hover.delay":"控制显示悬停提示前的等待时间 (毫秒)。","hover.sticky":"控制当鼠标移动到悬停提示上时，其是否保持可见。","codeActions":"在编辑器中启用代码操作小灯泡提示。","lineHeight":"控制行高。为 0 时则通过字体大小自动计算。","minimap.enabled":"控制是否显示缩略图。","minimap.size.proportional":"迷你地图的大小与编辑器内容相同(并且可能滚动)。","minimap.size.fill":"迷你地图将根据需要拉伸或缩小以填充编辑器的高度(不滚动)。","minimap.size.fit":"迷你地图将根据需要缩小，永远不会大于编辑器(不滚动)。","minimap.size":"控制迷你地图的大小。","minimap.side":"控制在哪一侧显示缩略图。","minimap.showSlider":"控制何时显示迷你地图滑块。","minimap.scale":"在迷你地图中绘制的内容比例: 1、2 或 3。","minimap.renderCharacters":"渲染每行的实际字符，而不是色块。","minimap.maxColumn":"限制缩略图的宽度，控制其最多显示的列数。","padding.top":"控制编辑器的顶边和第一行之间的间距量。","padding.bottom":"控制编辑器的底边和最后一行之间的间距量。","parameterHints.enabled":"在输入时显示含有参数文档和类型信息的小面板。","parameterHints.cycle":"控制参数提示菜单在到达列表末尾时进行循环还是关闭。","quickSuggestions.strings":"在字符串内启用快速建议。","quickSuggestions.comments":"在注释内启用快速建议。","quickSuggestions.other":"在字符串和注释外启用快速建议。","quickSuggestions":"控制是否在键入时自动显示建议。","lineNumbers.off":"不显示行号。","lineNumbers.on":"将行号显示为绝对行数。","lineNumbers.relative":"将行号显示为与光标相隔的行数。","lineNumbers.interval":"每 10 行显示一次行号。","lineNumbers":"控制行号的显示。","rulers.size":"此编辑器标尺将渲染的等宽字符数。","rulers.color":"此编辑器标尺的颜色。","rulers":"在一定数量的等宽字符后显示垂直标尺。输入多个值，显示多个标尺。若数组为空，则不绘制标尺。","suggest.insertMode.insert":"插入建议而不覆盖光标右侧的文本。","suggest.insertMode.replace":"插入建议并覆盖光标右侧的文本。","suggest.insertMode":"控制接受补全时是否覆盖单词。请注意，这取决于扩展选择使用此功能。","suggest.filterGraceful":"控制对建议的筛选和排序是否考虑小的拼写错误。","suggest.localityBonus":"控制排序时是否提高靠近光标的词语的优先级。","suggest.shareSuggestSelections":"控制是否在多个工作区和窗口间共享记忆的建议选项(需要 `#editor.suggestSelection#`)。","suggest.snippetsPreventQuickSuggestions":"控制活动代码段是否阻止快速建议。","suggest.showIcons":"控制是否在建议中显示或隐藏图标。","suggest.showStatusBar":"控制建议小部件底部的状态栏的可见性。","suggest.showInlineDetails":"控制建议详细信息是随标签一起显示还是仅显示在详细信息小组件中","suggest.maxVisibleSuggestions.dep":"此设置已弃用。现在可以调整建议小组件的大小。","deprecated":"此设置已弃用，请改用单独的设置，如\\"editor.suggest.showKeywords\\"或\\"editor.suggest.showSnippets\\"。","editor.suggest.showMethods":"启用后，IntelliSense 将显示“方法”建议。","editor.suggest.showFunctions":"启用后，IntelliSense 将显示“函数”建议。","editor.suggest.showConstructors":"启用后，IntelliSense 将显示“构造函数”建议。","editor.suggest.showFields":"启用后，IntelliSense 将显示“字段”建议。","editor.suggest.showVariables":"启用后，IntelliSense 将显示“变量”建议。","editor.suggest.showClasss":"启用后，IntelliSense 将显示“类”建议。","editor.suggest.showStructs":"启用后，IntelliSense 将显示“结构”建议。","editor.suggest.showInterfaces":"启用后，IntelliSense 将显示“接口”建议。","editor.suggest.showModules":"启用后，IntelliSense 将显示“模块”建议。","editor.suggest.showPropertys":"启用后，IntelliSense 将显示“属性”建议。","editor.suggest.showEvents":"启用后，IntelliSense 将显示“事件”建议。","editor.suggest.showOperators":"启用后，IntelliSense 将显示“操作符”建议。","editor.suggest.showUnits":"启用后，IntelliSense 将显示“单位”建议。","editor.suggest.showValues":"启用后，IntelliSense 将显示“值”建议。","editor.suggest.showConstants":"启用后，IntelliSense 将显示“常量”建议。","editor.suggest.showEnums":"启用后，IntelliSense 将显示“枚举”建议。","editor.suggest.showEnumMembers":"启用后，IntelliSense 将显示 \\"enumMember\\" 建议。","editor.suggest.showKeywords":"启用后，IntelliSense 将显示“关键字”建议。","editor.suggest.showTexts":"启用后，IntelliSense 将显示“文本”建议。","editor.suggest.showColors":"启用后，IntelliSense 将显示“颜色”建议。","editor.suggest.showFiles":"启用后，IntelliSense 将显示“文件”建议。","editor.suggest.showReferences":"启用后，IntelliSense 将显示“参考”建议。","editor.suggest.showCustomcolors":"启用后，IntelliSense 将显示“自定义颜色”建议。","editor.suggest.showFolders":"启用后，IntelliSense 将显示“文件夹”建议。","editor.suggest.showTypeParameters":"启用后，IntelliSense 将显示 \\"typeParameter\\" 建议。","editor.suggest.showSnippets":"启用后，IntelliSense 将显示“片段”建议。","editor.suggest.showUsers":"启用后，IntelliSense 将显示\\"用户\\"建议。","editor.suggest.showIssues":"启用后，IntelliSense 将显示\\"问题\\"建议。","selectLeadingAndTrailingWhitespace":"是否应始终选择前导和尾随空格。","acceptSuggestionOnCommitCharacter":"控制是否应在遇到提交字符时接受建议。例如，在 JavaScript 中，半角分号 (`;`) 可以为提交字符，能够在接受建议的同时键入该字符。","acceptSuggestionOnEnterSmart":"仅当建议包含文本改动时才可使用 `Enter` 键进行接受。","acceptSuggestionOnEnter":"控制除了 `Tab` 键以外， `Enter` 键是否同样可以接受建议。这能减少“插入新行”和“接受建议”命令之间的歧义。","accessibilityPageSize":"控制编辑器中可由屏幕阅读器读取的行数。警告: 对于大于默认值的数字，这会影响性能。","editorViewAccessibleLabel":"编辑器内容","editor.autoClosingBrackets.languageDefined":"使用语言配置确定何时自动闭合括号。","editor.autoClosingBrackets.beforeWhitespace":"仅当光标位于空白字符左侧时，才自动闭合括号。","autoClosingBrackets":"控制编辑器是否在左括号后自动插入右括号。","editor.autoClosingOvertype.auto":"仅在自动插入时才改写右引号或右括号。","autoClosingOvertype":"控制编辑器是否应改写右引号或右括号。","editor.autoClosingQuotes.languageDefined":"使用语言配置确定何时自动闭合引号。","editor.autoClosingQuotes.beforeWhitespace":"仅当光标位于空白字符左侧时，才自动闭合引号。","autoClosingQuotes":"控制编辑器是否在左引号后自动插入右引号。","editor.autoIndent.none":"编辑器不会自动插入缩进。","editor.autoIndent.keep":"编辑器将保留当前行的缩进。","editor.autoIndent.brackets":"编辑器将保留当前行的缩进并遵循语言定义的括号。","editor.autoIndent.advanced":"编辑器将保留当前行的缩进、使用语言定义的括号并调用语言定义的特定 onEnterRules。","editor.autoIndent.full":"编辑器将保留当前行的缩进，使用语言定义的括号，调用由语言定义的特殊输入规则，并遵循由语言定义的缩进规则。","autoIndent":"控制编辑器是否应在用户键入、粘贴、移动或缩进行时自动调整缩进。","editor.autoSurround.languageDefined":"使用语言配置确定何时自动包住所选内容。","editor.autoSurround.quotes":"使用引号而非括号来包住所选内容。","editor.autoSurround.brackets":"使用括号而非引号来包住所选内容。","autoSurround":"控制在键入引号或方括号时，编辑器是否应自动将所选内容括起来。","stickyTabStops":"在使用空格进行缩进时模拟制表符的选择行为。所选内容将始终使用制表符停止位。","codeLens":"控制是否在编辑器中显示 CodeLens。","codeLensFontFamily":"控制 CodeLens 的字体系列。","codeLensFontSize":"控制 CodeLens 的字体大小(像素)。设置为 `0` 时，将使用 `#editor.fontSize#` 的 90%。","colorDecorators":"控制编辑器是否显示内联颜色修饰器和颜色选取器。","columnSelection":"启用使用鼠标和键进行列选择。","copyWithSyntaxHighlighting":"控制在复制时是否同时复制语法高亮。","cursorBlinking":"控制光标的动画样式。","cursorSmoothCaretAnimation":"控制是否启用平滑插入动画。","cursorStyle":"控制光标样式。","cursorSurroundingLines":"控制光标周围可见的前置行和尾随行的最小数目。在其他一些编辑器中称为 \\"scrollOff\\" 或 \\"scrollOffset\\"。","cursorSurroundingLinesStyle.default":"仅当通过键盘或 API 触发时，才会强制执行\\"光标环绕行\\"。","cursorSurroundingLinesStyle.all":"始终强制执行 \\"cursorSurroundingLines\\"","cursorSurroundingLinesStyle":"控制何时应强制执行\\"光标环绕行\\"。","cursorWidth":"当 `#editor.cursorStyle#` 设置为 `line` 时，控制光标的宽度。","dragAndDrop":"控制在编辑器中是否允许通过拖放来移动选中内容。","fastScrollSensitivity":"按下\\"Alt\\"时滚动速度倍增。","folding":"控制编辑器是否启用了代码折叠。","foldingStrategy.auto":"使用特定于语言的折叠策略(如果可用)，否则使用基于缩进的策略。","foldingStrategy.indentation":"使用基于缩进的折叠策略。","foldingStrategy":"控制计算折叠范围的策略。","foldingHighlight":"控制编辑器是否应突出显示折叠范围。","unfoldOnClickAfterEndOfLine":"控制单击已折叠的行后面的空内容是否会展开该行。","fontFamily":"控制字体系列。","formatOnPaste":"控制编辑器是否自动格式化粘贴的内容。格式化程序必须可用，并且能针对文档中的某一范围进行格式化。","formatOnType":"控制编辑器在键入一行后是否自动格式化该行。","glyphMargin":"控制编辑器是否应呈现垂直字形边距。字形边距最常用于调试。","hideCursorInOverviewRuler":"控制是否在概览标尺中隐藏光标。","highlightActiveIndentGuide":"控制是否突出显示编辑器中活动的缩进参考线。","letterSpacing":"控制字母间距(像素)。","linkedEditing":"控制编辑器是否已启用链接编辑。相关符号(如 HTML 标记)在编辑时进行更新，具体由语言而定。","links":"控制是否在编辑器中检测链接并使其可被点击。","matchBrackets":"突出显示匹配的括号。","mouseWheelScrollSensitivity":"对鼠标滚轮滚动事件的 `deltaX` 和 `deltaY` 乘上的系数。","mouseWheelZoom":"按住 `Ctrl` 键并滚动鼠标滚轮时对编辑器字体大小进行缩放。","multiCursorMergeOverlapping":"当多个光标重叠时进行合并。","multiCursorModifier.ctrlCmd":"映射为 `Ctrl` (Windows 和 Linux) 或 `Command` (macOS)。","multiCursorModifier.alt":"映射为 `Alt` (Windows 和 Linux) 或 `Option` (macOS)。","multiCursorModifier":"在通过鼠标添加多个光标时使用的修改键。“转到定义”和“打开链接”功能所需的鼠标动作将会相应调整，不与多光标修改键冲突。[阅读详细信息](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier)。","multiCursorPaste.spread":"每个光标粘贴一行文本。","multiCursorPaste.full":"每个光标粘贴全文。","multiCursorPaste":"控制粘贴时粘贴文本的行计数与光标计数相匹配。","occurrencesHighlight":"控制编辑器是否突出显示语义符号的匹配项。","overviewRulerBorder":"控制是否在概览标尺周围绘制边框。","peekWidgetDefaultFocus.tree":"打开速览时聚焦树","peekWidgetDefaultFocus.editor":"打开预览时将焦点放在编辑器上","peekWidgetDefaultFocus":"控制是将焦点放在内联编辑器上还是放在预览小部件中的树上。","definitionLinkOpensInPeek":"控制\\"转到定义\\"鼠标手势是否始终打开预览小部件。","quickSuggestionsDelay":"控制显示快速建议前的等待时间 (毫秒)。","renameOnType":"控制是否在编辑器中输入时自动重命名。","renameOnTypeDeprecate":"已弃用，请改用 \\"editor.linkedEditing\\"。","renderControlCharacters":"控制编辑器是否显示控制字符。","renderIndentGuides":"控制编辑器是否显示缩进参考线。","renderFinalNewline":"当文件以换行符结束时, 呈现最后一行的行号。","renderLineHighlight.all":"同时突出显示导航线和当前行。","renderLineHighlight":"控制编辑器的当前行进行高亮显示的方式。","renderLineHighlightOnlyWhenFocus":"控制编辑器是否仅在焦点在编辑器时突出显示当前行","renderWhitespace.boundary":"呈现空格字符(字词之间的单个空格除外)。","renderWhitespace.selection":"仅在选定文本上呈现空白字符。","renderWhitespace.trailing":"仅呈现尾随空格字符","renderWhitespace":"控制编辑器在空白字符上显示符号的方式。","roundedSelection":"控制选区是否有圆角。","scrollBeyondLastColumn":"控制编辑器水平滚动时可以超过范围的字符数。","scrollBeyondLastLine":"控制编辑器是否可以滚动到最后一行之后。","scrollPredominantAxis":"同时垂直和水平滚动时，仅沿主轴滚动。在触控板上垂直滚动时，可防止水平漂移。","selectionClipboard":"控制是否支持 Linux 主剪贴板。","selectionHighlight":"控制编辑器是否应突出显示与所选内容类似的匹配项。","showFoldingControls.always":"始终显示折叠控件。","showFoldingControls.mouseover":"仅在鼠标位于装订线上方时显示折叠控件。","showFoldingControls":"控制何时显示行号槽上的折叠控件。","showUnused":"控制是否淡化未使用的代码。","showDeprecated":"控制加删除线被弃用的变量。","snippetSuggestions.top":"在其他建议上方显示代码片段建议。","snippetSuggestions.bottom":"在其他建议下方显示代码片段建议。","snippetSuggestions.inline":"在其他建议中穿插显示代码片段建议。","snippetSuggestions.none":"不显示代码片段建议。","snippetSuggestions":"控制代码片段是否与其他建议一起显示及其排列的位置。","smoothScrolling":"控制编辑器是否在滚动时使用动画。","suggestFontSize":"建议小部件的字号。如果设置为 `0`，则使用 `#editor.fontSize#` 的值。","suggestLineHeight":"建议小部件的行高。如果设置为 `0`，则使用 `#editor.lineHeight#` 的值。最小值为 8。","suggestOnTriggerCharacters":"控制在键入触发字符后是否自动显示建议。","suggestSelection.first":"始终选择第一个建议。","suggestSelection.recentlyUsed":"选择最近的建议，除非进一步键入选择其他项。例如 `console. -> console.log`，因为最近补全过 `log`。","suggestSelection.recentlyUsedByPrefix":"根据之前补全过的建议的前缀来进行选择。例如，`co -> console`、`con -> const`。","suggestSelection":"控制在建议列表中如何预先选择建议。","tabCompletion.on":"在按下 Tab 键时进行 Tab 补全，将插入最佳匹配建议。","tabCompletion.off":"禁用 Tab 补全。","tabCompletion.onlySnippets":"在前缀匹配时进行 Tab 补全。在 \\"quickSuggestions\\" 未启用时体验最好。","tabCompletion":"启用 Tab 补全。","unusualLineTerminators.auto":"自动删除异常的行终止符。","unusualLineTerminators.off":"忽略异常的行终止符。","unusualLineTerminators.prompt":"提示删除异常的行终止符。","unusualLineTerminators":"删除可能导致问题的异常行终止符。","useTabStops":"根据制表位插入和删除空格。","wordSeparators":"执行单词相关的导航或操作时作为单词分隔符的字符。","wordWrap.off":"永不换行。","wordWrap.on":"将在视区宽度处换行。","wordWrap.wordWrapColumn":"在 `#editor.wordWrapColumn#` 处折行。","wordWrap.bounded":"在视区宽度和 `#editor.wordWrapColumn#` 中的较小值处折行。","wordWrap":"控制折行的方式。","wordWrapColumn":"在 `#editor.wordWrap#` 为 `wordWrapColumn` 或 `bounded` 时，控制编辑器的折行列。","wrappingIndent.none":"没有缩进。折行从第 1 列开始。","wrappingIndent.same":"折行的缩进量与其父级相同。","wrappingIndent.indent":"折行的缩进量比其父级多 1。","wrappingIndent.deepIndent":"折行的缩进量比其父级多 2。","wrappingIndent":"控制折行的缩进。","wrappingStrategy.simple":"假定所有字符的宽度相同。这是一种快速算法，适用于等宽字体和某些字形宽度相等的文字(如拉丁字符)。","wrappingStrategy.advanced":"将包装点计算委托给浏览器。这是一个缓慢算法，可能会导致大型文件被冻结，但它在所有情况下都正常工作。","wrappingStrategy":"控制计算包裹点的算法。"},"vs/editor/common/view/editorColorRegistry":{"lineHighlight":"光标所在行高亮内容的背景颜色。","lineHighlightBorderBox":"光标所在行四周边框的背景颜色。","rangeHighlight":"背景颜色的高亮范围，喜欢通过快速打开和查找功能。颜色不能不透明，以免隐藏底层装饰。","rangeHighlightBorder":"高亮区域边框的背景颜色。","symbolHighlight":"高亮显示符号的背景颜色，例如转到定义或转到下一个/上一个符号。颜色不能是不透明的，以免隐藏底层装饰。","symbolHighlightBorder":"高亮显示符号周围的边框的背景颜色。","caret":"编辑器光标颜色。","editorCursorBackground":"编辑器光标的背景色。可以自定义块型光标覆盖字符的颜色。","editorWhitespaces":"编辑器中空白字符的颜色。","editorIndentGuides":"编辑器缩进参考线的颜色。","editorActiveIndentGuide":"编辑器活动缩进参考线的颜色。","editorLineNumbers":"编辑器行号的颜色。","editorActiveLineNumber":"编辑器活动行号的颜色","deprecatedEditorActiveLineNumber":"\\"Id\\" 已被弃用，请改用 \\"editorLineNumber.activeForeground\\"。","editorRuler":"编辑器标尺的颜色。","editorCodeLensForeground":"编辑器 CodeLens 的前景色","editorBracketMatchBackground":"匹配括号的背景色","editorBracketMatchBorder":"匹配括号外框的颜色","editorOverviewRulerBorder":"概览标尺边框的颜色。","editorOverviewRulerBackground":"编辑器概述标尺的背景色。仅当缩略图已启用且置于编辑器右侧时才使用。","editorGutter":"编辑器导航线的背景色。导航线包括边缘符号和行号。","unnecessaryCodeBorder":"编辑器中不必要(未使用)的源代码的边框颜色。","unnecessaryCodeOpacity":"非必须(未使用)代码的在编辑器中显示的不透明度。例如，\\"#000000c0\\" 将以 75% 的不透明度显示代码。对于高对比度主题，请使用 ”editorUnnecessaryCode.border“ 主题来为非必须代码添加下划线，以避免颜色淡化。","overviewRulerRangeHighlight":"用于突出显示范围的概述标尺标记颜色。颜色必须透明，以免隐藏下面的修饰效果。","overviewRuleError":"概览标尺中错误标记的颜色。","overviewRuleWarning":"概览标尺中警告标记的颜色。","overviewRuleInfo":"概览标尺中信息标记的颜色。"},"vs/editor/common/model/editStack":{"edit":"输入"},"vs/editor/browser/controller/coreCommands":{"stickydesc":"即使转到较长的行，也一直到末尾"},"vs/editor/browser/widget/codeEditorWidget":{"cursors.maximum":"光标数量被限制为 {0}。"},"vs/editor/browser/widget/diffEditorWidget":{"diffInsertIcon":"差异编辑器中插入项的线条修饰。","diffRemoveIcon":"差异编辑器中删除项的线条修饰。","diff.tooLarge":"文件过大，无法比较。"},"vs/editor/common/standaloneStrings":{"noSelection":"无选择","singleSelectionRange":"行 {0}, 列 {1} (选中 {2})","singleSelection":"行 {0}, 列 {1}","multiSelectionRange":"{0} 选择(已选择 {1} 个字符)","multiSelection":"{0} 选择","emergencyConfOn":"现在将 \\"辅助功能支持\\" 设置更改为 \\"打开\\"。","openingDocs":"现在正在打开“编辑器辅助功能”文档页。","readonlyDiffEditor":"在差异编辑器的只读窗格中。","editableDiffEditor":"在一个差异编辑器的窗格中。","readonlyEditor":"在只读代码编辑器中","editableEditor":"在代码编辑器中","changeConfigToOnMac":"若要配置编辑器，将其进行优化以最好地配合屏幕阅读器的使用，请立即按 Command+E。","changeConfigToOnWinLinux":"若要配置编辑器，将其进行优化以最高效地配合屏幕阅读器的使用，按下 Ctrl+E。","auto_on":"配置编辑器，将其进行优化以最好地配合屏幕读取器的使用。","auto_off":"编辑器被配置为永远不进行优化以配合屏幕读取器的使用, 而当前不是这种情况。","tabFocusModeOnMsg":"在当前编辑器中按 Tab 会将焦点移动到下一个可聚焦的元素。通过按 {0} 切换此行为。","tabFocusModeOnMsgNoKb":"在当前编辑器中按 Tab 会将焦点移动到下一个可聚焦的元素。当前无法通过按键绑定触发命令 {0}。","tabFocusModeOffMsg":"在当前编辑器中按 Tab 将插入制表符。通过按 {0} 切换此行为。","tabFocusModeOffMsgNoKb":"在当前编辑器中按 Tab 会插入制表符。当前无法通过键绑定触发命令 {0}。","openDocMac":"现在按 Command+H 打开一个浏览器窗口, 其中包含有关编辑器辅助功能的详细信息。","openDocWinLinux":"现在按 Ctrl+H 打开一个浏览器窗口, 其中包含有关编辑器辅助功能的更多信息。","outroMsg":"你可以按 Esc 或 Shift+Esc 消除此工具提示并返回到编辑器。","showAccessibilityHelpAction":"显示辅助功能帮助","inspectTokens":"开发人员: 检查令牌","gotoLineActionLabel":"转到行/列...","helpQuickAccess":"显示所有快速访问提供程序","quickCommandActionLabel":"命令面板","quickCommandActionHelp":"显示并运行命令","quickOutlineActionLabel":"转到符号...","quickOutlineByCategoryActionLabel":"按类别转到符号...","editorViewAccessibleLabel":"编辑器内容","accessibilityHelpMessage":"按 Alt+F1 可打开辅助功能选项。","toggleHighContrast":"切换高对比度主题","bulkEditServiceSummary":"在 {1} 个文件中进行了 {0} 次编辑"},"vs/editor/common/config/commonEditorConfig":{"editorConfigurationTitle":"编辑器","tabSize":"一个制表符等于的空格数。在 `#editor.detectIndentation#` 启用时，根据文件内容，该设置可能会被覆盖。","insertSpaces":"按 `Tab` 键时插入空格。该设置在 `#editor.detectIndentation#` 启用时根据文件内容可能会被覆盖。","detectIndentation":"控制是否在打开文件时，基于文件内容自动检测 `#editor.tabSize#` 和 `#editor.insertSpaces#`。","trimAutoWhitespace":"删除自动插入的尾随空白符号。","largeFileOptimizations":"对大型文件进行特殊处理，禁用某些内存密集型功能。","wordBasedSuggestions":"控制是否根据文档中的文字计算自动完成列表。","wordBasedSuggestionsMode.currentDocument":"仅建议活动文档中的字词。","wordBasedSuggestionsMode.matchingDocuments":"建议使用同一语言的所有打开的文档中的字词。","wordBasedSuggestionsMode.allDocuments":"建议所有打开的文档中的字词。","wordBasedSuggestionsMode":"控制通过什么文档计算基于字词的完成数。","semanticHighlighting.true":"对所有颜色主题启用语义突出显示。","semanticHighlighting.false":"对所有颜色主题禁用语义突出显示。","semanticHighlighting.configuredByTheme":"语义突出显示是由当前颜色主题的 \\"semanticHighlighting\\" 设置配置的。","semanticHighlighting.enabled":"控制是否为支持它的语言显示语义突出显示。","stablePeek":"在速览编辑器中，即使双击其中的内容或者按 `Esc` 键，也保持其打开状态。","maxTokenizationLineLength":"由于性能原因，超过这个长度的行将不会被标记","maxComputationTime":"超时(以毫秒为单位)，之后将取消差异计算。使用0表示没有超时。","sideBySide":"控制差异编辑器的显示方式是并排还是内联。","ignoreTrimWhitespace":"启用后，差异编辑器将忽略前导空格或尾随空格中的更改。","renderIndicators":"控制差异编辑器是否为添加/删除的更改显示 +/- 指示符号。","codeLens":"控制是否在编辑器中显示 CodeLens。","wordWrap.off":"永不换行。","wordWrap.on":"将在视区宽度处换行。","wordWrap.inherit":"将根据 `#editor.wordWrap#` 设置换行。"},"vs/editor/browser/widget/diffReview":{"diffReviewInsertIcon":"差异评审中的“插入”图标。","diffReviewRemoveIcon":"差异评审中的“删除”图标。","diffReviewCloseIcon":"差异评审中的“关闭”图标。","label.close":"关闭","no_lines_changed":"未更改行","one_line_changed":"更改了 1 行","more_lines_changed":"更改了 {0} 行","header":"差异 {0}/ {1}: 原始行 {2}，{3}，修改后的行 {4}，{5}","blankLine":"空白","unchangedLine":"{0} 未更改的行 {1}","equalLine":"{0}原始行{1}修改的行{2}","insertLine":"+ {0}修改的行{1}","deleteLine":"- {0}原始行{1}","editor.action.diffReview.next":"转至下一个差异","editor.action.diffReview.prev":"转至上一个差异"},"vs/editor/browser/widget/inlineDiffMargin":{"diff.clipboard.copyDeletedLinesContent.label":"复制已删除的行","diff.clipboard.copyDeletedLinesContent.single.label":"复制已删除的行","diff.clipboard.copyDeletedLineContent.label":"复制已删除的行({0})","diff.inline.revertChange.label":"还原此更改"},"vs/editor/browser/controller/textAreaHandler":{"editor":"编辑器","accessibilityOffAriaLabel":"现在无法访问编辑器。按 {0} 获取选项。"},"vs/editor/contrib/clipboard/clipboard":{"miCut":"剪切(&&T)","actions.clipboard.cutLabel":"剪切","miCopy":"复制(&&C)","actions.clipboard.copyLabel":"复制","miPaste":"粘贴(&&P)","actions.clipboard.pasteLabel":"粘贴","actions.clipboard.copyWithSyntaxHighlightingLabel":"复制并突出显示语法"},"vs/editor/contrib/anchorSelect/anchorSelect":{"selectionAnchor":"选择定位点","anchorSet":"定位点设置为 {0}:{1}","setSelectionAnchor":"设置选择定位点","goToSelectionAnchor":"转到选择定位点","selectFromAnchorToCursor":"选择从定位点到光标","cancelSelectionAnchor":"取消选择定位点"},"vs/editor/contrib/bracketMatching/bracketMatching":{"overviewRulerBracketMatchForeground":"概览标尺上表示匹配括号的标记颜色。","smartSelect.jumpBracket":"转到括号","smartSelect.selectToBracket":"选择括号所有内容","miGoToBracket":"转到括号(&&B)"},"vs/editor/contrib/caretOperations/caretOperations":{"caret.moveLeft":"向左移动所选文本","caret.moveRight":"向右移动所选文本"},"vs/editor/contrib/caretOperations/transpose":{"transposeLetters.label":"转置字母"},"vs/editor/contrib/codelens/codelensController":{"showLensOnLine":"显示当前行的 Code Lens 命令"},"vs/editor/contrib/comment/comment":{"comment.line":"切换行注释","miToggleLineComment":"切换行注释(&&T)","comment.line.add":"添加行注释","comment.line.remove":"删除行注释","comment.block":"切换块注释","miToggleBlockComment":"切换块注释(&&B)"},"vs/editor/contrib/contextmenu/contextmenu":{"action.showContextMenu.label":"显示编辑器上下文菜单"},"vs/editor/contrib/cursorUndo/cursorUndo":{"cursor.undo":"光标撤消","cursor.redo":"光标重做"},"vs/editor/contrib/find/findController":{"startFindAction":"查找","miFind":"查找(&&F)","startFindWithSelectionAction":"查找选定内容","findNextMatchAction":"查找下一个","findPreviousMatchAction":"查找上一个","nextSelectionMatchFindAction":"查找下一个选择","previousSelectionMatchFindAction":"查找上一个选择","startReplace":"替换","miReplace":"替换(&&R)"},"vs/editor/contrib/folding/folding":{"unfoldAction.label":"展开","unFoldRecursivelyAction.label":"以递归方式展开","foldAction.label":"折叠","toggleFoldAction.label":"切换折叠","foldRecursivelyAction.label":"以递归方式折叠","foldAllBlockComments.label":"折叠所有块注释","foldAllMarkerRegions.label":"折叠所有区域","unfoldAllMarkerRegions.label":"展开所有区域","foldAllAction.label":"全部折叠","unfoldAllAction.label":"全部展开","foldLevelAction.label":"折叠级别 {0}","foldBackgroundBackground":"折叠范围后面的背景颜色。颜色必须设为透明，以免隐藏底层装饰。","editorGutter.foldingControlForeground":"编辑器装订线中折叠控件的颜色。"},"vs/editor/contrib/fontZoom/fontZoom":{"EditorFontZoomIn.label":"放大编辑器字体","EditorFontZoomOut.label":"缩小编辑器字体","EditorFontZoomReset.label":"重置编辑器字体大小"},"vs/editor/contrib/format/formatActions":{"formatDocument.label":"格式化文档","formatSelection.label":"格式化选定内容"},"vs/editor/contrib/gotoSymbol/goToCommands":{"peek.submenu":"快速查看","def.title":"定义","noResultWord":"未找到“{0}”的任何定义","generic.noResults":"找不到定义","actions.goToDecl.label":"转到定义","miGotoDefinition":"转到定义(&&D)","actions.goToDeclToSide.label":"打开侧边的定义","actions.previewDecl.label":"速览定义","decl.title":"声明","decl.noResultWord":"未找到“{0}”的声明","decl.generic.noResults":"未找到声明","actions.goToDeclaration.label":"转到声明","miGotoDeclaration":"转到\\"声明\\"(&&D)","actions.peekDecl.label":"查看声明","typedef.title":"类型定义","goToTypeDefinition.noResultWord":"未找到“{0}”的类型定义","goToTypeDefinition.generic.noResults":"未找到类型定义","actions.goToTypeDefinition.label":"转到类型定义","miGotoTypeDefinition":"转到类型定义(&&T)","actions.peekTypeDefinition.label":"快速查看类型定义","impl.title":"实现","goToImplementation.noResultWord":"未找到“{0}”的实现","goToImplementation.generic.noResults":"未找到实现","actions.goToImplementation.label":"转到实现","miGotoImplementation":"跳转到实现(&&I)","actions.peekImplementation.label":"查看实现","references.no":"未找到\\"{0}\\"的引用","references.noGeneric":"未找到引用","goToReferences.label":"转到引用","miGotoReference":"转到引用(&&R)","ref.title":"引用","references.action.label":"查看引用","label.generic":"转到任何符号","generic.title":"位置","generic.noResult":"无“{0}”的结果"},"vs/editor/contrib/hover/hover":{"showHover":"显示悬停","showDefinitionPreviewHover":"显示定义预览悬停"},"vs/editor/contrib/gotoSymbol/link/goToDefinitionAtPosition":{"multipleResults":"单击显示 {0} 个定义。"},"vs/editor/contrib/gotoError/gotoError":{"markerAction.next.label":"转到下一个问题 (错误、警告、信息)","nextMarkerIcon":"“转到下一个”标记的图标。","markerAction.previous.label":"转到上一个问题 (错误、警告、信息)","previousMarkerIcon":"“转到上一个”标记的图标。","markerAction.nextInFiles.label":"转到文件中的下一个问题 (错误、警告、信息)","miGotoNextProblem":"下一个问题(&&P)","markerAction.previousInFiles.label":"转到文件中的上一个问题 (错误、警告、信息)","miGotoPreviousProblem":"上一个问题(&&P)"},"vs/editor/contrib/indentation/indentation":{"indentationToSpaces":"将缩进转换为空格","indentationToTabs":"将缩进转换为制表符","configuredTabSize":"已配置制表符大小","selectTabWidth":"选择当前文件的制表符大小","indentUsingTabs":"使用 \\"Tab\\" 缩进","indentUsingSpaces":"使用空格缩进","detectIndentation":"从内容中检测缩进方式","editor.reindentlines":"重新缩进行","editor.reindentselectedlines":"重新缩进所选行"},"vs/editor/contrib/inPlaceReplace/inPlaceReplace":{"InPlaceReplaceAction.previous.label":"替换为上一个值","InPlaceReplaceAction.next.label":"替换为下一个值"},"vs/editor/contrib/linesOperations/linesOperations":{"lines.copyUp":"向上复制行","miCopyLinesUp":"向上复制行(&&C)","lines.copyDown":"向下复制行","miCopyLinesDown":"向下复制一行(&&P)","duplicateSelection":"重复选择","miDuplicateSelection":"重复选择(&&D)","lines.moveUp":"向上移动行","miMoveLinesUp":"向上移动一行(&&V)","lines.moveDown":"向下移动行","miMoveLinesDown":"向下移动一行(&&L)","lines.sortAscending":"按升序排列行","lines.sortDescending":"按降序排列行","lines.trimTrailingWhitespace":"裁剪尾随空格","lines.delete":"删除行","lines.indent":"行缩进","lines.outdent":"行减少缩进","lines.insertBefore":"在上面插入行","lines.insertAfter":"在下面插入行","lines.deleteAllLeft":"删除左侧所有内容","lines.deleteAllRight":"删除右侧所有内容","lines.joinLines":"合并行","editor.transpose":"转置光标处的字符","editor.transformToUppercase":"转换为大写","editor.transformToLowercase":"转换为小写","editor.transformToTitlecase":"转换为词首字母大写"},"vs/editor/contrib/linkedEditing/linkedEditing":{"linkedEditing.label":"启动链接编辑","editorLinkedEditingBackground":"编辑器根据类型自动重命名时的背景色。"},"vs/editor/contrib/links/links":{"links.navigate.executeCmd":"执行命令","links.navigate.follow":"关注链接","links.navigate.kb.meta.mac":"cmd + 单击","links.navigate.kb.meta":"ctrl + 单击","links.navigate.kb.alt.mac":"option + 单击","links.navigate.kb.alt":"alt + 单击","tooltip.explanation":"执行命令 {0}","invalid.url":"此链接格式不正确，无法打开: {0}","missing.url":"此链接目标已丢失，无法打开。","label":"打开链接"},"vs/editor/contrib/multicursor/multicursor":{"mutlicursor.insertAbove":"在上面添加光标","miInsertCursorAbove":"在上面添加光标(&&A)","mutlicursor.insertBelow":"在下面添加光标","miInsertCursorBelow":"在下面添加光标(&&D)","mutlicursor.insertAtEndOfEachLineSelected":"在行尾添加光标","miInsertCursorAtEndOfEachLineSelected":"在行尾添加光标(&&U)","mutlicursor.addCursorsToBottom":"在底部添加光标","mutlicursor.addCursorsToTop":"在顶部添加光标","addSelectionToNextFindMatch":"将下一个查找匹配项添加到选择","miAddSelectionToNextFindMatch":"添加下一个匹配项(&&N)","addSelectionToPreviousFindMatch":"将选择内容添加到上一查找匹配项","miAddSelectionToPreviousFindMatch":"添加上一个匹配项(&&R)","moveSelectionToNextFindMatch":"将上次选择移动到下一个查找匹配项","moveSelectionToPreviousFindMatch":"将上个选择内容移动到上一查找匹配项","selectAllOccurrencesOfFindMatch":"选择所有找到的查找匹配项","miSelectHighlights":"选择所有匹配项(&&O)","changeAll.label":"更改所有匹配项"},"vs/editor/contrib/parameterHints/parameterHints":{"parameterHints.trigger.label":"触发参数提示"},"vs/editor/contrib/rename/rename":{"no result":"无结果。","resolveRenameLocationFailed":"解析重命名位置时发生未知错误","label":"正在重命名“{0}”","quotableLabel":"重命名 {0}","aria":"成功将“{0}”重命名为“{1}”。摘要: {2}","rename.failedApply":"重命名无法应用修改","rename.failed":"重命名无法计算修改","rename.label":"重命名符号","enablePreview":"启用/禁用重命名之前预览更改的功能"},"vs/editor/contrib/smartSelect/smartSelect":{"smartSelect.expand":"展开选择","miSmartSelectGrow":"展开选定内容(&&E)","smartSelect.shrink":"收起选择","miSmartSelectShrink":"缩小选定范围(&&S)"},"vs/editor/contrib/suggest/suggestController":{"aria.alert.snippet":"选择“{0}”后进行了其他 {1} 次编辑","suggest.trigger.label":"触发建议","accept.insert":"插入","accept.replace":"替换","detail.more":"显示更少","detail.less":"显示更多","suggest.reset.label":"重置建议小组件大小"},"vs/editor/contrib/tokenization/tokenization":{"forceRetokenize":"开发人员: 强制重新进行标记"},"vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode":{"toggle.tabMovesFocus":"切换 Tab 键移动焦点","toggle.tabMovesFocus.on":"Tab 键将移动到下一可聚焦的元素","toggle.tabMovesFocus.off":"Tab 键将插入制表符"},"vs/editor/contrib/unusualLineTerminators/unusualLineTerminators":{"unusualLineTerminators.title":"异常行终止符","unusualLineTerminators.message":"检测到异常行终止符","unusualLineTerminators.detail":"此文件包含一个或多个异常的行终止符，例如行分隔符(LS)或段落分隔符(PS)。\\r\\n\\r\\n建议从文件中删除它们。可通过 \\"editor.unusualLineTerminators\\" 进行配置。","unusualLineTerminators.fix":"修复此文件","unusualLineTerminators.ignore":"忽略此文件的问题"},"vs/editor/contrib/wordHighlighter/wordHighlighter":{"wordHighlight":"读取访问期间符号的背景色，例如读取变量时。颜色必须透明，以免隐藏下面的修饰效果。","wordHighlightStrong":"写入访问过程中符号的背景色，例如写入变量时。颜色必须透明，以免隐藏下面的修饰效果。","wordHighlightBorder":"符号在进行读取访问操作时的边框颜色，例如读取变量。","wordHighlightStrongBorder":"符号在进行写入访问操作时的边框颜色，例如写入变量。","overviewRulerWordHighlightForeground":"用于突出显示符号的概述标尺标记颜色。颜色必须透明，以免隐藏下面的修饰效果。","overviewRulerWordHighlightStrongForeground":"用于突出显示写权限符号的概述标尺标记颜色。颜色必须透明，以免隐藏下面的修饰效果。","wordHighlight.next.label":"转到下一个突出显示的符号","wordHighlight.previous.label":"转到上一个突出显示的符号","wordHighlight.trigger.label":"触发符号高亮"},"vs/editor/contrib/wordOperations/wordOperations":{"deleteInsideWord":"删除 Word"},"vs/editor/contrib/quickAccess/gotoLineQuickAccess":{"cannotRunGotoLine":"先打开文本编辑器然后跳转到行。","gotoLineColumnLabel":"转到第 {0} 行、第 {1} 列。","gotoLineLabel":"转到行 {0}。","gotoLineLabelEmptyWithLimit":"当前行: {0}，字符: {1}。键入要导航到的行号(介于 1 至 {2} 之间)。","gotoLineLabelEmpty":"当前行: {0}，字符: {1}。 键入要导航到的行号。"},"vs/editor/contrib/peekView/peekView":{"label.close":"关闭","peekViewTitleBackground":"速览视图标题区域背景颜色。","peekViewTitleForeground":"速览视图标题颜色。","peekViewTitleInfoForeground":"速览视图标题信息颜色。","peekViewBorder":"速览视图边框和箭头颜色。","peekViewResultsBackground":"速览视图结果列表背景色。","peekViewResultsMatchForeground":"速览视图结果列表中行节点的前景色。","peekViewResultsFileForeground":"速览视图结果列表中文件节点的前景色。","peekViewResultsSelectionBackground":"速览视图结果列表中所选条目的背景色。","peekViewResultsSelectionForeground":"速览视图结果列表中所选条目的前景色。","peekViewEditorBackground":"速览视图编辑器背景色。","peekViewEditorGutterBackground":"速览视图编辑器中装订线的背景色。","peekViewResultsMatchHighlight":"在速览视图结果列表中匹配突出显示颜色。","peekViewEditorMatchHighlight":"在速览视图编辑器中匹配突出显示颜色。","peekViewEditorMatchHighlightBorder":"在速览视图编辑器中匹配项的突出显示边框。"},"vs/editor/contrib/codeAction/codeActionCommands":{"args.schema.kind":"要运行的代码操作的种类。","args.schema.apply":"控制何时应用返回的操作。","args.schema.apply.first":"始终应用第一个返回的代码操作。","args.schema.apply.ifSingle":"如果仅返回的第一个代码操作，则应用该操作。","args.schema.apply.never":"不要应用返回的代码操作。","args.schema.preferred":"如果只应返回首选代码操作，则应返回控件。","applyCodeActionFailed":"应用代码操作时发生未知错误","quickfix.trigger.label":"快速修复...","editor.action.quickFix.noneMessage":"没有可用的代码操作","editor.action.codeAction.noneMessage.preferred.kind":"没有适用于\\"{0}\\"的首选代码操作","editor.action.codeAction.noneMessage.kind":"没有适用于\\"{0}\\"的代码操作","editor.action.codeAction.noneMessage.preferred":"没有可用的首选代码操作","editor.action.codeAction.noneMessage":"没有可用的代码操作","refactor.label":"重构...","editor.action.refactor.noneMessage.preferred.kind":"没有适用于\\"{0}\\"的首选重构","editor.action.refactor.noneMessage.kind":"没有可用的\\"{0}\\"重构","editor.action.refactor.noneMessage.preferred":"没有可用的首选重构","editor.action.refactor.noneMessage":"没有可用的重构操作","source.label":"源代码操作...","editor.action.source.noneMessage.preferred.kind":"没有适用于\\"{0}\\"的首选源操作","editor.action.source.noneMessage.kind":"没有适用于“ {0}”的源操作","editor.action.source.noneMessage.preferred":"没有可用的首选源操作","editor.action.source.noneMessage":"没有可用的源代码操作","organizeImports.label":"整理 import 语句","editor.action.organize.noneMessage":"没有可用的整理 import 语句操作","fixAll.label":"全部修复","fixAll.noneMessage":"没有可用的“全部修复”操作","autoFix.label":"自动修复...","editor.action.autoFix.noneMessage":"没有可用的自动修复程序"},"vs/editor/contrib/find/findWidget":{"findSelectionIcon":"编辑器查找小组件中的“在选定内容中查找”图标。","findCollapsedIcon":"用于指示编辑器查找小组件已折叠的图标。","findExpandedIcon":"用于指示编辑器查找小组件已展开的图标。","findReplaceIcon":"编辑器查找小组件中的“替换”图标。","findReplaceAllIcon":"编辑器查找小组件中的“全部替换”图标。","findPreviousMatchIcon":"编辑器查找小组件中的“查找上一个”图标。","findNextMatchIcon":"编辑器查找小组件中的“查找下一个”图标。","label.find":"查找","placeholder.find":"查找","label.previousMatchButton":"上一个匹配项","label.nextMatchButton":"下一个匹配项","label.toggleSelectionFind":"在选定内容中查找","label.closeButton":"关闭","label.replace":"替换","placeholder.replace":"替换","label.replaceButton":"替换","label.replaceAllButton":"全部替换","label.toggleReplaceButton":"切换替换模式","title.matchesCountLimit":"仅高亮了前 {0} 个结果，但所有查找操作均针对全文。","label.matchesLocation":"{1} 中的 {0}","label.noResults":"无结果","ariaSearchNoResultEmpty":"找到 {0}","ariaSearchNoResult":"为“{1}”找到 {0}","ariaSearchNoResultWithLineNum":"在 {2} 处找到“{1}”的 {0}","ariaSearchNoResultWithLineNumNoCurrentMatch":"为“{1}”找到 {0}","ctrlEnter.keybindingChanged":"Ctrl+Enter 现在由全部替换改为插入换行。你可以修改editor.action.replaceAll 的按键绑定以覆盖此行为。"},"vs/editor/contrib/folding/foldingDecorations":{"foldingExpandedIcon":"编辑器字形边距中已展开的范围的图标。","foldingCollapsedIcon":"编辑器字形边距中已折叠的范围的图标。"},"vs/editor/contrib/format/format":{"hint11":"在第 {0} 行进行了 1 次格式编辑","hintn1":"在第 {1} 行进行了 {0} 次格式编辑","hint1n":"第 {0} 行到第 {1} 行间进行了 1 次格式编辑","hintnn":"第 {1} 行到第 {2} 行间进行了 {0} 次格式编辑"},"vs/editor/contrib/message/messageController":{"editor.readonly":"无法在只读编辑器中编辑"},"vs/editor/contrib/gotoSymbol/peek/referencesController":{"labelLoading":"正在加载...","metaTitle.N":"{0} ({1})"},"vs/editor/contrib/gotoSymbol/referencesModel":{"aria.oneReference":"在文件 {0} 的 {1} 行 {2} 列的符号","aria.oneReference.preview":"在文件 {0} 的 {1} 行 {2} 列的符号，{3}","aria.fileReferences.1":"{0} 中有 1 个符号，完整路径: {1}","aria.fileReferences.N":"{1} 中有 {0} 个符号，完整路径: {2}","aria.result.0":"未找到结果","aria.result.1":"在 {0} 中找到 1 个符号","aria.result.n1":"在 {1} 中找到 {0} 个符号","aria.result.nm":"在 {1} 个文件中找到 {0} 个符号"},"vs/editor/contrib/gotoSymbol/symbolNavigation":{"location.kb":"{1} 的符号 {0}，下一个使用 {2}","location":"{1} 的符号 {0}"},"vs/editor/contrib/hover/modesContentHover":{"modesContentHover.loading":"正在加载...","peek problem":"速览问题","noQuickFixes":"没有可用的快速修复","checkingForQuickFixes":"正在检查快速修复...","quick fixes":"快速修复..."},"vs/editor/contrib/gotoError/gotoErrorWidget":{"Error":"错误","Warning":"警告","Info":"信息","Hint":"提示","marker aria":"{1} 中的 {0}","problems":"{0} 个问题(共 {1} 个)","change":"{0} 个问题(共 {1} 个)","editorMarkerNavigationError":"编辑器标记导航小组件错误颜色。","editorMarkerNavigationWarning":"编辑器标记导航小组件警告颜色。","editorMarkerNavigationInfo":"编辑器标记导航小组件信息颜色。","editorMarkerNavigationBackground":"编辑器标记导航小组件背景色。"},"vs/editor/contrib/parameterHints/parameterHintsWidget":{"parameterHintsNextIcon":"“显示下一个参数”提示的图标。","parameterHintsPreviousIcon":"“显示上一个参数”提示的图标。","hint":"{0}，提示"},"vs/editor/contrib/rename/renameInputField":{"renameAriaLabel":"重命名输入。键入新名称并按 \\"Enter\\" 提交。","label":"按 {0} 进行重命名，按 {1} 进行预览"},"vs/editor/contrib/suggest/suggestWidget":{"editorSuggestWidgetBackground":"建议小组件的背景色。","editorSuggestWidgetBorder":"建议小组件的边框颜色。","editorSuggestWidgetForeground":"建议小组件的前景色。","editorSuggestWidgetSelectedBackground":"建议小组件中所选条目的背景色。","editorSuggestWidgetHighlightForeground":"建议小组件中匹配内容的高亮颜色。","suggestWidget.loading":"正在加载...","suggestWidget.noSuggestions":"无建议。","ariaCurrenttSuggestionReadDetails":"{0}，文档: {1}","suggest":"建议"},"vs/editor/contrib/quickAccess/gotoSymbolQuickAccess":{"cannotRunGotoSymbolWithoutEditor":"要转到符号，首先打开具有符号信息的文本编辑器。","cannotRunGotoSymbolWithoutSymbolProvider":"活动文本编辑器不提供符号信息。","noMatchingSymbolResults":"没有匹配的编辑器符号","noSymbolResults":"没有编辑器符号","openToSide":"在侧边打开","openToBottom":"在底部打开","symbols":"符号({0})","property":"属性({0})","method":"方法({0})","function":"函数({0})","_constructor":"构造函数 ({0})","variable":"变量({0})","class":"类({0})","struct":"结构({0})","event":"事件({0})","operator":"运算符({0})","interface":"接口({0})","namespace":"命名空间({0})","package":"包({0})","typeParameter":"类型参数({0})","modules":"模块({0})","enum":"枚举({0})","enumMember":"枚举成员({0})","string":"字符串({0})","file":"文件({0})","array":"数组({0})","number":"数字({0})","boolean":"布尔值({0})","object":"对象({0})","key":"键({0})","field":"字段({0})","constant":"常量({0})"},"vs/editor/contrib/snippet/snippetVariables":{"Sunday":"星期天","Monday":"星期一","Tuesday":"星期二","Wednesday":"星期三","Thursday":"星期四","Friday":"星期五","Saturday":"星期六","SundayShort":"周日","MondayShort":"周一","TuesdayShort":"周二","WednesdayShort":"周三","ThursdayShort":"周四","FridayShort":"周五","SaturdayShort":"周六","January":"一月","February":"二月","March":"三月","April":"四月","May":"5月","June":"六月","July":"七月","August":"八月","September":"九月","October":"十月","November":"十一月","December":"十二月","JanuaryShort":"1月","FebruaryShort":"2月","MarchShort":"3月","AprilShort":"4月","MayShort":"5月","JuneShort":"6月","JulyShort":"7月","AugustShort":"8月","SeptemberShort":"9月","OctoberShort":"10月","NovemberShort":"11 月","DecemberShort":"12月"},"vs/editor/contrib/documentSymbols/outlineTree":{"title.template":"{0} ({1})","1.problem":"此元素存在 1 个问题","N.problem":"此元素存在 {0} 个问题","deep.problem":"包含存在问题的元素","Array":"数组","Boolean":"布尔值","Class":"类","Constant":"常数","Constructor":"构造函数","Enum":"枚举","EnumMember":"枚举成员","Event":"事件","Field":"字段","File":"文件","Function":"函数","Interface":"接口","Key":"键","Method":"方法","Module":"模块","Namespace":"命名空间","Null":"Null","Number":"数字","Object":"对象","Operator":"运算符","Package":"包","Property":"属性","String":"字符串","Struct":"结构","TypeParameter":"类型参数","Variable":"变量","symbolIcon.arrayForeground":"数组符号的前景色。这些符号将显示在大纲、痕迹导航栏和建议小组件中。","symbolIcon.booleanForeground":"布尔符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.classForeground":"类符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.colorForeground":"颜色符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.constantForeground":"常量符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.constructorForeground":"构造函数符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.enumeratorForeground":"枚举符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.enumeratorMemberForeground":"枚举器成员符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.eventForeground":"事件符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.fieldForeground":"字段符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.fileForeground":"文件符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.folderForeground":"文件夹符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.functionForeground":"函数符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.interfaceForeground":"接口符号的前景色。这些符号将显示在大纲、痕迹导航栏和建议小组件中。","symbolIcon.keyForeground":"键符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.keywordForeground":"关键字符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.methodForeground":"方法符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.moduleForeground":"模块符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.namespaceForeground":"命名空间符号的前景颜色。这些符号出现在轮廓、痕迹导航栏和建议小部件中。","symbolIcon.nullForeground":"空符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.numberForeground":"数字符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.objectForeground":"对象符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.operatorForeground":"运算符符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.packageForeground":"包符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.propertyForeground":"属性符号的前景色。这些符号出现在大纲、痕迹导航栏和建议小组件中。","symbolIcon.referenceForeground":"参考符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.snippetForeground":"片段符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.stringForeground":"字符串符号的前景颜色。这些符号出现在轮廓、痕迹导航栏和建议小部件中。","symbolIcon.structForeground":"结构符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.textForeground":"文本符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.typeParameterForeground":"类型参数符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.unitForeground":"单位符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。","symbolIcon.variableForeground":"变量符号的前景颜色。这些符号出现在大纲、痕迹导航栏和建议小部件中。"},"vs/editor/contrib/gotoSymbol/peek/referencesWidget":{"missingPreviewMessage":"无可用预览","noResults":"无结果","peekView.alternateTitle":"引用"},"vs/editor/contrib/suggest/suggestWidgetDetails":{"details.close":"关闭","loading":"正在加载…"},"vs/editor/contrib/suggest/suggestWidgetStatus":{"ddd":"{0} ({1})"},"vs/editor/contrib/suggest/suggestWidgetRenderer":{"suggestMoreInfoIcon":"建议小组件中的详细信息的图标。","readMore":"了解详细信息"},"vs/editor/contrib/codeAction/lightBulbWidget":{"prefferedQuickFixWithKb":"显示修复程序。首选可用修复程序 ({0})","quickFixWithKb":"显示修补程序({0})","quickFix":"显示修补程序"},"vs/editor/contrib/gotoSymbol/peek/referencesTree":{"referencesCount":"{0} 个引用","referenceCount":"{0} 个引用","treeAriaLabel":"引用"},"vs/platform/environment/node/argvHelper":{"unknownOption":"警告: \\"{0}\\"不在已知选项列表中，但仍传递给 Electron/Chromium。","multipleValues":"选项\\"{0}\\"定义多次。使用值\\"{1}\\"。","gotoValidation":"\\"--goto\\" 模式中的参数格式应为 \\"FILE(:LINE(:CHARACTER))\\"。"},"vs/platform/request/common/request":{"httpConfigurationTitle":"HTTP","proxy":"要使用的代理设置。如果未设置，则将从 \\"http_proxy\\" 和 \\"https_proxy\\" 环境变量中继承。","strictSSL":"控制是否根据提供的 CA 列表验证代理服务器证书。","proxyAuthorization":"要作为每个网络请求的 \\"Proxy-Authorization\\" 标头发送的值。","proxySupportOff":"禁用对扩展的代理支持。","proxySupportOn":"为扩展启用代理支持。","proxySupportOverride":"为扩展启用代理支持，覆盖请求选项。","proxySupport":"对扩展使用代理支持。","systemCertificates":"控制是否应从操作系统加载 CA 证书。(在 Windows 和 macOS 上, 关闭此窗口后需要重新加载窗口)。"},"vs/platform/files/common/fileService":{"invalidPath":"无法解析具有相对文件路径\\"{0}\\"的文件系统提供程序","noProviderFound":"未找到资源\\"{0}\\"的文件系统提供程序","fileNotFoundError":"无法解析不存在的文件\\"{0}\\"","fileExists":"如果未设置覆盖标记，则无法创建文件“{0}”，因为它已存在","err.write":"无法写入文件\\"{0}\\"({1})","fileIsDirectoryWriteError":"无法写入实际上是一个目录的文件\\"{0}\\"","fileModifiedError":"自以下时间已修改的文件:","err.read":"无法读取文件\'{0}\' ({1})","fileIsDirectoryReadError":"无法读取实际上是一个目录的文件\\"{0}\\"","fileNotModifiedError":"自以下时间未修改的文件:","fileTooLargeError":"无法读取文件“{0}”，该文件太大，无法打开","unableToMoveCopyError1":"当源\\"{0}\\"与目标\\"{1}\\"在不区分大小写的文件系统上具有不同路径大小写时，无法复制","unableToMoveCopyError2":"当源\\"{0}\\"是目标\\"{1}\\"的父级时，无法移动/复制。","unableToMoveCopyError3":"无法移动/复制\\"{0}\\"，因为目标\\"{1}\\"已存在于目标位置。","unableToMoveCopyError4":"无法将\\"{0}\\"移动/复制到\\"{1}\\"中，因为文件将替换包含该文件的文件夹。","mkdirExistsError":"无法创建已存在但不是目录的文件夹\\"{0}\\"","deleteFailedTrashUnsupported":"无法通过回收站删除文件\\"{0}\\"，因为提供程序不支持它。","deleteFailedNotFound":"无法删除不存在的文件\\"{0}\\"","deleteFailedNonEmptyFolder":"无法删除非空文件夹“{0}”。","err.readonly":"无法修改只读文件\\"{0}\\""},"vs/platform/files/node/diskFileSystemProvider":{"fileExists":"文件已存在","fileNotExists":"文件不存在","moveError":"无法将 \\"{0}\\" 移动到 \\"{1}\\" ({2}) 中。","copyError":"无法将 \\"{0}\\" 复制到 \\"{1}\\" ({2}) 中。","fileCopyErrorPathCase":"\'\'文件不能复制到仅大小写不同的相同路径","fileCopyErrorExists":"目标处的文件已存在"},"vs/platform/files/common/files":{"unknownError":"未知错误","sizeB":"{0} B","sizeKB":"{0} KB","sizeMB":"{0} MB","sizeGB":"{0} GB","sizeTB":"{0} TB"},"vs/platform/update/common/update.config.contribution":{"updateConfigurationTitle":"更新","updateMode":"配置是否接收自动更新。更改后需要重新启动。更新是从微软在线服务获取的。","none":"禁用更新。","manual":"禁用自动后台更新检查。如果手动检查更新，更新将可用。","start":"仅在启动时检查更新。禁用自动后台更新检查。","default":"启用自动更新检查。代码将定期自动检查更新。","deprecated":"此设置已弃用，请改用“{0}”。","enableWindowsBackgroundUpdatesTitle":"在 Windows 上启用后台更新","enableWindowsBackgroundUpdates":"启用在 Windows 上后台下载和安装新的 VS Code 版本","showReleaseNotes":"在更新后显示发行说明。发行说明将从 Microsoft 联机服务中获取。"},"vs/platform/environment/node/argv":{"optionsUpperCase":"选项","extensionsManagement":"扩展管理","troubleshooting":"故障排查","diff":"将两个文件相互比较。","add":"将文件夹添加到上一个活动窗口。","goto":"打开路径下的文件并定位到特定行和特定列。","newWindow":"强制打开新窗口。","reuseWindow":"强制在已打开的窗口中打开文件或文件夹。","wait":"等文件关闭后再返回。","locale":"要使用的区域设置(例如 en-US 或 zh-TW)。","userDataDir":"指定保存用户数据的目录。可用于打开多个不同的 Code 实例。","help":"打印使用情况。","extensionHomePath":"设置扩展的根路径。","listExtensions":"列出已安装的扩展。","showVersions":"使用 --list-extension 时，显示已安装扩展的版本。","category":"使用 --list-extension 按提供的类别筛选已安装的扩展。","installExtension":"安装或更新扩展。扩展的标识符始终为 `${publisher}.${name}`。使用 `--force` 参数更新到最新版本。要安装特定版本，请提供 `@${version}`，例如 \\"vscode.csharp@1.2.3\\"。","uninstallExtension":"卸载扩展。","experimentalApis":"为扩展启用实验性 API 功能。可以输入一个或多个扩展的 ID 来进行单独启用。","version":"打印版本。","verbose":"打印详细输出(表示 - 等待)。","log":"使用的日志级别。默认值为 \\"info\\"。允许的值为 \\"critical\\" (关键)、\\"error\\" (错误)、\\"warn\\" (警告)、\\"info\\" (信息)、\\"debug\\" (调试)、\\"trace\\" (跟踪) 和 \\"off\\" (关闭)。","status":"打印进程使用情况和诊断信息。","prof-startup":"启动期间运行 CPU 探查器","disableExtensions":"禁用所有已安装的扩展。","disableExtension":"禁用一个扩展。","turn sync":"打开或关闭同步","inspect-extensions":"允许调试和分析扩展。您可以在开发人员工具中找到连接 URI。","inspect-brk-extensions":"允许扩展宿主在启动后暂停时进行扩展的调试和分析。您可以在开发人员工具中找到连接 URI。","disableGPU":"禁用 GPU 硬件加速。","maxMemory":"单个窗口最大内存大小 (单位为 MB)。","telemetry":"显示 VS Code 收集的所有遥测事件。","usage":"使用情况","options":"选项","paths":"路径","stdinWindows":"要读取其他程序的输出，请追加 \\"-\\" (例如 \\"echo Hello World | {0} -\')","stdinUnix":"要从 stdin 中读取，请追加 \\"-\\" (例如 \\"ps aux | grep code | {0} -\')","unknownVersion":"未知版本","unknownCommit":"未知提交"},"vs/platform/extensionManagement/common/extensionManagement":{"extensions":"扩展","preferences":"首选项"},"vs/platform/extensionManagement/node/extensionManagementService":{"incompatible":"无法安装扩展“{0}”，因为它与 VS Code“{1}”不兼容。","restartCode":"请在重新安装{0}之前重新启动 VS Code。","MarketPlaceDisabled":"市场未启用","malicious extension":"无法安装此扩展，它被报告存在问题。","notFoundCompatibleDependency":"无法安装“{0}”扩展，因为它与 VS Code 的当前版本(版本 {1})不兼容。","Not a Marketplace extension":"只能重新安装商店中的扩展","removeError":"删除扩展时出错: {0}。请重启 VS Code，然后重试。","quitCode":"无法安装扩展。请在重启 VS Code 后重新安装。","exitCode":"无法安装扩展。请在重启 VS Code 后重新安装。","notInstalled":"未安装扩展“{0}”。","singleDependentError":"无法卸载扩展“{0}”。扩展“{1}”依赖于它。","twoDependentsError":"无法卸载扩展“{0}”。扩展“{1}”和“{2}”依赖于它。","multipleDependentsError":"无法卸载扩展“{0}”。“{1}”、“{2}”以及其他扩展都依赖于它。","singleIndirectDependentError":"无法卸载扩展“{0}”。该操作会一并卸载依赖于它的扩展“{1}”和“{2}”。","twoIndirectDependentsError":"无法卸载扩展“{0}”。该操作会一并卸载依赖于它的扩展“{1}”、“{2}”和“{3}”。","multipleIndirectDependentsError":"无法卸载扩展“{0}”。该操作会一并卸载依赖于它的扩展“{1}”、“{2}”、“{3}”和其他扩展。","notExists":"找不到扩展"},"vs/platform/telemetry/common/telemetryService":{"telemetryConfigurationTitle":"遥测","telemetry.enableTelemetry":"将使用数据和错误发送到 Microsoft 联机服务。","telemetry.enableTelemetryMd":"实现将使用数据和错误发送到 Microsoft 联机服务。在 [此处] 阅读我们的隐私声明({0})。"},"vs/platform/extensionManagement/node/extensionManagementUtil":{"invalidManifest":"VSIX 无效: package.json 不是 JSON 文件。"},"vs/platform/userDataSync/common/userDataSync":{"settings sync":"设置同步","settingsSync.keybindingsPerPlatform":"为每个平台同步键绑定。","sync.keybindingsPerPlatform.deprecated":"已弃用，改用 settingsSync.keybindingsPerPlatform","settingsSync.ignoredExtensions":"同步时要忽略的扩展列表。扩展的标识符始终为 \\"${publisher}.${name}\\"。例如: \\"vscode.csharp\\"。","app.extension.identifier.errorMessage":"预期的格式 \\"${publisher}.${name}\\"。例如: \\"vscode.csharp\\"。","sync.ignoredExtensions.deprecated":"已弃用，改用 settingsSync.ignoredExtensions","settingsSync.ignoredSettings":"配置在同步时要忽略的设置。","sync.ignoredSettings.deprecated":"已弃用，改用 settingsSync.ignoredSettings"},"vs/platform/extensionManagement/electron-sandbox/extensionTipsService":{"exeRecommended":"你的系统上安装了 {0}。是否要为其安装推荐的扩展?"},"vs/platform/userDataSync/common/userDataSyncMachines":{"error incompatible":"无法读取计算机数据，因为当前版本不兼容。请更新 {0}，然后重试。"},"vs/platform/userDataSync/common/userDataAutoSyncService":{"default service changed":"默认服务已更改，因此无法同步","service changed":"同步服务已更改，因此无法同步","turned off":"无法同步，因为同步在云中已关闭","session expired":"无法同步，因为当前会话已过期","turned off machine":"无法同步，因为已从另一台计算机上关闭了此计算机上的同步。"},"vs/platform/workspaces/common/workspaces":{"codeWorkspace":"Code 工作区"},"vs/platform/files/electron-browser/diskFileSystemProvider":{"binFailed":"未能将“{0}”移动到回收站","trashFailed":"未能将“{0}”移动到废纸篓"},"vs/platform/dialogs/common/dialogs":{"moreFile":"...1 个其他文件未显示","moreFiles":"...{0} 个其他文件未显示"},"vs/platform/theme/common/colorRegistry":{"foreground":"整体前景色。此颜色仅在不被组件覆盖时适用。","errorForeground":"错误信息的整体前景色。此颜色仅在不被组件覆盖时适用。","descriptionForeground":"提供其他信息的说明文本的前景色，例如标签文本。","iconForeground":"工作台中图标的默认颜色。","focusBorder":"焦点元素的整体边框颜色。此颜色仅在不被其他组件覆盖时适用。","contrastBorder":"在元素周围额外的一层边框，用来提高对比度从而区别其他元素。","activeContrastBorder":"在活动元素周围额外的一层边框，用来提高对比度从而区别其他元素。","selectionBackground":"工作台所选文本的背景颜色(例如输入字段或文本区域)。注意，本设置不适用于编辑器。","textSeparatorForeground":"文字分隔符的颜色。","textLinkForeground":"文本中链接的前景色。","textLinkActiveForeground":"文本中链接在点击或鼠标悬停时的前景色 。","textPreformatForeground":"预格式化文本段的前景色。","textBlockQuoteBackground":"文本中块引用的背景颜色。","textBlockQuoteBorder":"文本中块引用的边框颜色。","textCodeBlockBackground":"文本中代码块的背景颜色。","widgetShadow":"编辑器内小组件(如查找/替换)的阴影颜色。","inputBoxBackground":"输入框背景色。","inputBoxForeground":"输入框前景色。","inputBoxBorder":"输入框边框。","inputBoxActiveOptionBorder":"输入字段中已激活选项的边框颜色。","inputOption.activeBackground":"输入字段中激活选项的背景颜色。","inputOption.activeForeground":"输入字段中已激活的选项的前景色。","inputPlaceholderForeground":"输入框中占位符的前景色。","inputValidationInfoBackground":"输入验证结果为信息级别时的背景色。","inputValidationInfoForeground":"输入验证结果为信息级别时的前景色。","inputValidationInfoBorder":"严重性为信息时输入验证的边框颜色。","inputValidationWarningBackground":"严重性为警告时输入验证的背景色。","inputValidationWarningForeground":"输入验证结果为警告级别时的前景色。","inputValidationWarningBorder":"严重性为警告时输入验证的边框颜色。","inputValidationErrorBackground":"输入验证结果为错误级别时的背景色。","inputValidationErrorForeground":"输入验证结果为错误级别时的前景色。","inputValidationErrorBorder":"严重性为错误时输入验证的边框颜色。","dropdownBackground":"下拉列表背景色。","dropdownListBackground":"下拉列表背景色。","dropdownForeground":"下拉列表前景色。","dropdownBorder":"下拉列表边框。","checkbox.background":"复选框小部件的背景颜色。","checkbox.foreground":"复选框小部件的前景色。","checkbox.border":"复选框小部件的边框颜色。","buttonForeground":"按钮前景色。","buttonBackground":"按钮背景色。","buttonHoverBackground":"按钮在悬停时的背景颜色。","buttonSecondaryForeground":"辅助按钮前景色。","buttonSecondaryBackground":"辅助按钮背景色。","buttonSecondaryHoverBackground":"悬停时的辅助按钮背景色。","badgeBackground":"Badge 背景色。Badge 是小型的信息标签，如表示搜索结果数量的标签。","badgeForeground":"Badge 前景色。Badge 是小型的信息标签，如表示搜索结果数量的标签。","scrollbarShadow":"表示视图被滚动的滚动条阴影。","scrollbarSliderBackground":"滚动条滑块背景色","scrollbarSliderHoverBackground":"滚动条滑块在悬停时的背景色","scrollbarSliderActiveBackground":"滚动条滑块在被点击时的背景色。","progressBarBackground":"表示长时间操作的进度条的背景色。","editorError.background":"编辑器中错误文本的背景色。颜色必须透明，以免隐藏下面的修饰效果。","editorError.foreground":"编辑器中错误波浪线的前景色。","errorBorder":"编辑器中错误框的边框颜色。","editorWarning.background":"编辑器中警告文本的背景色。颜色必须透明，以免隐藏下面的修饰效果。","editorWarning.foreground":"编辑器中警告波浪线的前景色。","warningBorder":"编辑器中警告框的边框颜色。","editorInfo.background":"编辑器中信息文本的背景色。颜色必须透明，以免隐藏下面的修饰效果。","editorInfo.foreground":"编辑器中信息波浪线的前景色。","infoBorder":"编辑器中信息框的边框颜色。","editorHint.foreground":"编辑器中提示波浪线的前景色。","hintBorder":"编辑器中提示框的边框颜色。","sashActiveBorder":"活动框格的边框颜色。","editorBackground":"编辑器背景色。","editorForeground":"编辑器默认前景色。","editorWidgetBackground":"编辑器组件(如查找/替换)背景颜色。","editorWidgetForeground":"编辑器小部件的前景色，如查找/替换。","editorWidgetBorder":"编辑器小部件的边框颜色。此颜色仅在小部件有边框且不被小部件重写时适用。","editorWidgetResizeBorder":"编辑器小部件大小调整条的边框颜色。此颜色仅在小部件有调整边框且不被小部件颜色覆盖时使用。","pickerBackground":"背景颜色快速选取器。快速选取器小部件是选取器(如命令调色板)的容器。","pickerForeground":"前景颜色快速选取器。快速选取器小部件是命令调色板等选取器的容器。","pickerTitleBackground":"标题背景颜色快速选取器。快速选取器小部件是命令调色板等选取器的容器。","pickerGroupForeground":"快速选取器分组标签的颜色。","pickerGroupBorder":"快速选取器分组边框的颜色。","editorSelectionBackground":"编辑器所选内容的颜色。","editorSelectionForeground":"用以彰显高对比度的所选文本的颜色。","editorInactiveSelection":"非活动编辑器中所选内容的颜色，颜色必须透明，以免隐藏下面的装饰效果。","editorSelectionHighlight":"具有与所选项相关内容的区域的颜色。颜色必须透明，以免隐藏下面的修饰效果。","editorSelectionHighlightBorder":"与所选项内容相同的区域的边框颜色。","editorFindMatch":"当前搜索匹配项的颜色。","findMatchHighlight":"其他搜索匹配项的颜色。颜色必须透明，以免隐藏下面的修饰效果。","findRangeHighlight":"限制搜索范围的颜色。颜色不能不透明，以免隐藏底层装饰。","editorFindMatchBorder":"当前搜索匹配项的边框颜色。","findMatchHighlightBorder":"其他搜索匹配项的边框颜色。","findRangeHighlightBorder":"限制搜索的范围的边框颜色。颜色必须透明，以免隐藏下面的修饰效果。","searchEditor.queryMatch":"搜索编辑器查询匹配的颜色。","searchEditor.editorFindMatchBorder":"搜索编辑器查询匹配的边框颜色。","hoverHighlight":"在下面突出显示悬停的字词。颜色必须透明，以免隐藏下面的修饰效果。","hoverBackground":"编辑器悬停提示的背景颜色。","hoverForeground":"编辑器悬停的前景颜色。","hoverBorder":"光标悬停时编辑器的边框颜色。","statusBarBackground":"编辑器悬停状态栏的背景色。","activeLinkForeground":"活动链接颜色。","editorLightBulbForeground":"用于灯泡操作图标的颜色。","editorLightBulbAutoFixForeground":"用于灯泡自动修复操作图标的颜色。","diffEditorInserted":"已插入的文本的背景色。颜色必须透明，以免隐藏下面的修饰效果。","diffEditorRemoved":"已删除的文本的背景色。颜色必须透明，以免隐藏下面的修饰效果。","diffEditorInsertedOutline":"插入的文本的轮廓颜色。","diffEditorRemovedOutline":"被删除文本的轮廓颜色。","diffEditorBorder":"两个文本编辑器之间的边框颜色。","diffDiagonalFill":"差异编辑器的对角线填充颜色。对角线填充用于并排差异视图。","listFocusBackground":"焦点项在列表或树活动时的背景颜色。活动的列表或树具有键盘焦点，非活动的没有。","listFocusForeground":"焦点项在列表或树活动时的前景颜色。活动的列表或树具有键盘焦点，非活动的没有。","listActiveSelectionBackground":"已选项在列表或树活动时的背景颜色。活动的列表或树具有键盘焦点，非活动的没有。","listActiveSelectionForeground":"已选项在列表或树活动时的前景颜色。活动的列表或树具有键盘焦点，非活动的没有。","listInactiveSelectionBackground":"已选项在列表或树非活动时的背景颜色。活动的列表或树具有键盘焦点，非活动的没有。","listInactiveSelectionForeground":"已选项在列表或树非活动时的前景颜色。活动的列表或树具有键盘焦点，非活动的没有。","listInactiveFocusBackground":"非活动的列表或树控件中焦点项的背景颜色。活动的列表或树具有键盘焦点，非活动的没有。","listHoverBackground":"使用鼠标移动项目时，列表或树的背景颜色。","listHoverForeground":"鼠标在项目上悬停时，列表或树的前景颜色。","listDropBackground":"使用鼠标移动项目时，列表或树进行拖放的背景颜色。","highlight":"在列表或树中搜索时，其中匹配内容的高亮颜色。","invalidItemForeground":"列表或树中无效项的前景色，例如资源管理器中没有解析的根目录。","listErrorForeground":"包含错误的列表项的前景颜色。","listWarningForeground":"包含警告的列表项的前景颜色。","listFilterWidgetBackground":"列表和树中类型筛选器小组件的背景色。","listFilterWidgetOutline":"列表和树中类型筛选器小组件的轮廓颜色。","listFilterWidgetNoMatchesOutline":"当没有匹配项时，列表和树中类型筛选器小组件的轮廓颜色。","listFilterMatchHighlight":"筛选后的匹配项的背景颜色。","listFilterMatchHighlightBorder":"筛选后的匹配项的边框颜色。","treeIndentGuidesStroke":"缩进参考线的树描边颜色。","listDeemphasizedForeground":"取消强调的项目的列表/树前景颜色。","menuBorder":"菜单的边框颜色。","menuForeground":"菜单项的前景颜色。","menuBackground":"菜单项的背景颜色。","menuSelectionForeground":"菜单中选定菜单项的前景色。","menuSelectionBackground":"菜单中所选菜单项的背景色。","menuSelectionBorder":"菜单中所选菜单项的边框颜色。","menuSeparatorBackground":"菜单中分隔线的颜色。","snippetTabstopHighlightBackground":"代码片段 Tab 位的高亮背景色。","snippetTabstopHighlightBorder":"代码片段 Tab 位的高亮边框颜色。","snippetFinalTabstopHighlightBackground":"代码片段中最后的 Tab 位的高亮背景色。","snippetFinalTabstopHighlightBorder":"代码片段中最后的制表位的高亮边框颜色。","breadcrumbsFocusForeground":"焦点导航路径的颜色","breadcrumbsBackground":"导航路径项的背景色。","breadcrumbsSelectedForegound":"已选导航路径项的颜色。","breadcrumbsSelectedBackground":"导航路径项选择器的背景色。","mergeCurrentHeaderBackground":"当前标题背景的内联合并冲突。颜色不能不透明，以免隐藏底层装饰。","mergeCurrentContentBackground":"内联合并冲突中的当前内容背景。颜色必须透明，以免隐藏下面的修饰效果。","mergeIncomingHeaderBackground":"内联合并冲突中的传入标题背景。颜色必须透明，以免隐藏下面的修饰效果。","mergeIncomingContentBackground":"内联合并冲突中的传入内容背景。颜色必须透明，以免隐藏下面的修饰效果。","mergeCommonHeaderBackground":"内联合并冲突中的常见祖先标头背景。颜色必须透明，以免隐藏下面的修饰效果。","mergeCommonContentBackground":"内联合并冲突中的常见祖先内容背景。颜色必须透明，以免隐藏下面的修饰效果。","mergeBorder":"内联合并冲突中标头和分割线的边框颜色。","overviewRulerCurrentContentForeground":"内联合并冲突中当前版本区域的概览标尺前景色。","overviewRulerIncomingContentForeground":"内联合并冲突中传入的版本区域的概览标尺前景色。","overviewRulerCommonContentForeground":"内联合并冲突中共同祖先区域的概览标尺前景色。","overviewRulerFindMatchForeground":"用于查找匹配项的概述标尺标记颜色。颜色必须透明，以免隐藏下面的修饰效果。","overviewRulerSelectionHighlightForeground":"用于突出显示所选内容的概述标尺标记颜色。颜色必须透明，以免隐藏下面的修饰效果。","minimapFindMatchHighlight":"用于查找匹配项的迷你地图标记颜色。","minimapSelectionHighlight":"编辑器选区在迷你地图中对应的标记颜色。","minimapError":"用于错误的迷你地图标记颜色。","overviewRuleWarning":"用于警告的迷你地图标记颜色。","minimapBackground":"迷你地图背景颜色。","minimapSliderBackground":"迷你地图滑块背景颜色。","minimapSliderHoverBackground":"悬停时，迷你地图滑块的背景颜色。","minimapSliderActiveBackground":"单击时，迷你地图滑块的背景颜色。","problemsErrorIconForeground":"用于问题错误图标的颜色。","problemsWarningIconForeground":"用于问题警告图标的颜色。","problemsInfoIconForeground":"用于问题信息图标的颜色。","chartsForeground":"图表中使用的前景颜色。","chartsLines":"用于图表中的水平线条的颜色。","chartsRed":"图表可视化效果中使用的红色。","chartsBlue":"图表可视化效果中使用的蓝色。","chartsYellow":"图表可视化效果中使用的黄色。","chartsOrange":"图表可视化效果中使用的橙色。","chartsGreen":"图表可视化效果中使用的绿色。","chartsPurple":"图表可视化效果中使用的紫色。"},"vs/platform/configuration/common/configurationRegistry":{"defaultLanguageConfigurationOverrides.title":"默认语言配置替代","defaultLanguageConfiguration.description":"配置要为 {0} 语言替代的设置。","overrideSettings.defaultDescription":"针对某种语言，配置替代编辑器设置。","overrideSettings.errorMessage":"此设置不支持按语言配置。","config.property.empty":"无法注册空属性","config.property.languageDefault":"无法注册“{0}”。其符合描述特定语言编辑器设置的表达式 \\"\\\\\\\\[.*\\\\\\\\]$\\"。请使用 \\"configurationDefaults\\"。","config.property.duplicate":"无法注册“{0}”。此属性已注册。"},"vs/platform/markers/common/markers":{"sev.error":"错误","sev.warning":"警告","sev.info":"信息"},"vs/platform/windows/electron-main/windowsMainService":{"pathNotExistTitle":"路径不存在","pathNotExistDetail":"磁盘上似乎不再存在路径“{0}”。","uriInvalidTitle":"无法打开 uri","uriInvalidDetail":"URI“{0}”无效，无法打开。","ok":"确定"},"vs/platform/issue/electron-main/issueMainService":{"local":"本地","issueReporterWriteToClipboard":"数据太多，无法直接发送到 GitHub。数据将被复制到剪贴板，请将其粘贴到打开的 GitHub 问题页。","ok":"确定","cancel":"取消","confirmCloseIssueReporter":"您的输入将不会保存。确实要关闭此窗口吗？","yes":"是","issueReporter":"问题报告程序","processExplorer":"进程管理器"},"vs/platform/workspaces/electron-main/workspacesHistoryMainService":{"newWindow":"新窗口","newWindowDesc":"打开新窗口","recentFolders":"最近使用的工作区","folderDesc":"{0} {1}","workspaceDesc":"{0} {1}","untitledWorkspace":"无标题(工作区)","workspaceName":"{0} (工作区)"},"vs/platform/workspaces/electron-main/workspacesMainService":{"ok":"确定","workspaceOpenedMessage":"无法保存工作区“{0}”","workspaceOpenedDetail":"已在另一个窗口打开工作区。请先关闭该窗口，然后重试。"},"vs/platform/dialogs/electron-main/dialogs":{"open":"打开","openFolder":"打开文件夹","openFile":"打开文件","openWorkspaceTitle":"打开工作区","openWorkspace":"打开(&&O)"},"vs/platform/files/common/io":{"fileTooLargeForHeapError":"要打开此大小的文件, 您需要重新启动并允许它使用更多内存","fileTooLargeError":"文件太大，无法打开"},"vs/platform/extensions/common/extensionValidator":{"versionSyntax":"无法解析 \\"engines.vscode\\" 的值 {0}。请改为如 ^1.22.0, ^1.22.x 等。","versionSpecificity1":"\\"engines.vscode\\" ({0}) 中指定的版本不够具体。对于 1.0.0 之前的 vscode 版本，请至少定义主要和次要想要的版本。例如: ^0.10.0、0.10.x、0.11.0 等。","versionSpecificity2":"\\"engines.vscode\\" ({0}) 中指定的版本不够具体。对于 1.0.0 之后的 vscode 版本，请至少定义主要想要的版本。例如: ^1.10.0、1.10.x、1.x.x、2.x.x 等。","versionMismatch":"扩展与 Code {0} 不兼容。扩展需要: {1}。"},"vs/platform/extensionManagement/node/extensionsScanner":{"errorDeleting":"安装扩展“{1}”时无法删除现有文件夹“{0}”。请手动删除此文件夹，然后重试","cannot read":"无法从 {0} 读取扩展","renameError":"将 {0} 重命名为 {1} 时发生未知错误","invalidManifest":"扩展无效: package.json 不是 JSON 文件。"},"vs/platform/userDataSync/common/keybindingsSync":{"errorInvalidSettings":"无法同步键绑定，因为文件中的内容无效。请打开文件并进行更正。"},"vs/platform/userDataSync/common/settingsSync":{"errorInvalidSettings":"无法同步设置，因为设置文件中存在错误/警告。"},"vs/platform/list/browser/listService":{"workbenchConfigurationTitle":"工作台","multiSelectModifier.ctrlCmd":"映射为 `Ctrl` (Windows 和 Linux) 或 `Command` (macOS)。","multiSelectModifier.alt":"映射为 `Alt` (Windows 和 Linux) 或 `Option` (macOS)。","multiSelectModifier":"在通过鼠标多选树和列表条目时使用的修改键 (例如“资源管理器”、“打开的编辑器”和“源代码管理”视图)。“在侧边打开”功能所需的鼠标动作 (若可用) 将会相应调整，不与多选修改键冲突。","openModeModifier":"控制在树和列表中怎样使用鼠标来展开子项(若支持)。对于树中的父节点，此设置将控制是使用单击还是双击来展开。注意，某些不适用于此设置的树或列表可能会忽略此项。 ","horizontalScrolling setting":"控制列表和树是否支持工作台中的水平滚动。警告: 打开此设置影响会影响性能。","tree indent setting":"控制树缩进(以像素为单位)。","render tree indent guides":"控制树是否应呈现缩进参考线。","list smoothScrolling setting":"控制列表和树是否具有平滑滚动。","keyboardNavigationSettingKey.simple":"简单键盘导航聚焦与键盘输入相匹配的元素。仅对前缀进行匹配。","keyboardNavigationSettingKey.highlight":"高亮键盘导航会突出显示与键盘输入相匹配的元素。进一步向上和向下导航将仅遍历突出显示的元素。","keyboardNavigationSettingKey.filter":"筛选器键盘导航将筛选出并隐藏与键盘输入不匹配的所有元素。","keyboardNavigationSettingKey":"控制工作台中的列表和树的键盘导航样式。它可为“简单”、“突出显示”或“筛选”。","automatic keyboard navigation setting":"控制列表和树中的键盘导航是否仅通过键入自动触发。如果设置为 `false` ，键盘导航只在执行 `list.toggleKeyboardNavigation` 命令时触发，您可以为该命令指定键盘快捷方式。","expand mode":"控制单击文件夹名称时如何展开树文件夹。"},"vs/platform/undoRedo/common/undoRedoService":{"externalRemoval":"以下文件已关闭并且已在磁盘上修改: {0}。","noParallelUniverses":"以下文件已以不兼容的方式修改: {0}。","cannotWorkspaceUndo":"无法在所有文件中撤消“{0}”。{1}","cannotWorkspaceUndoDueToChanges":"无法撤消所有文件的“{0}”，因为已更改 {1}","cannotWorkspaceUndoDueToInProgressUndoRedo":"无法跨所有文件撤销“{0}”，因为 {1} 上已有一项撤消或重做操作正在运行","cannotWorkspaceUndoDueToInMeantimeUndoRedo":"无法跨所有文件撤销“{0}”，因为同时发生了一项撤消或重做操作","confirmWorkspace":"是否要在所有文件中撤消“{0}”?","ok":"在 {0} 个文件中撤消","nok":"撤消此文件","cancel":"取消","cannotResourceUndoDueToInProgressUndoRedo":"无法撤销“{0}”，因为已有一项撤消或重做操作正在运行。","confirmDifferentSource":"是否要撤消“{0}”?","confirmDifferentSource.ok":"撤消","cannotWorkspaceRedo":"无法在所有文件中重做“{0}”。{1}","cannotWorkspaceRedoDueToChanges":"无法对所有文件重做“{0}”，因为已更改 {1}","cannotWorkspaceRedoDueToInProgressUndoRedo":"无法跨所有文件重做“{0}”，因为 {1} 上已有一项撤消或重做操作正在运行","cannotWorkspaceRedoDueToInMeantimeUndoRedo":"无法跨所有文件重做“{0}”，因为同时发生了一项撤消或重做操作","cannotResourceRedoDueToInProgressUndoRedo":"无法重做“{0}”，因为已有一项撤消或重做操作正在运行。"},"vs/platform/actions/browser/menuEntryActionViewItem":{"titleAndKb":"{0} ({1})"},"vs/platform/theme/common/iconRegistry":{"iconDefintion.fontId":"要使用的字体的 ID。如果未设置，则使用最先定义的字体。","iconDefintion.fontCharacter":"与图标定义关联的字体字符。","widgetClose":"小组件中“关闭”操作的图标。","previousChangeIcon":"“转到上一个编辑器位置”图标。","nextChangeIcon":"“转到下一个编辑器位置”图标。"},"vs/platform/menubar/electron-main/menubar":{"miNewWindow":"新建窗口(&&W)","mFile":"文件(&&F)","mEdit":"编辑(&&E)","mSelection":"选择(&&S)","mView":"查看(&&V)","mGoto":"转到(&&G)","mRun":"运行(&&R)","mTerminal":"终端(&&T)","mWindow":"窗口","mHelp":"帮助(&&H)","mAbout":"关于 {0}","miPreferences":"首选项(&&P)","mServices":"服务","mHide":"隐藏 {0}","mHideOthers":"隐藏其他","mShowAll":"全部显示","miQuit":"退出 {0}","mMinimize":"最小化","mZoom":"缩放","mBringToFront":"全部置于顶层","miSwitchWindow":"切换窗口(&&W)...","mNewTab":"新建标签页","mShowPreviousTab":"显示上一个选项卡","mShowNextTab":"显示下一个选项卡","mMoveTabToNewWindow":"移动标签页到新窗口","mMergeAllWindows":"合并所有窗口","miCheckForUpdates":"检查更新(&&U)...","miCheckingForUpdates":"正在检查更新...","miDownloadUpdate":"下载可用更新(&&O)","miDownloadingUpdate":"正在下载更新...","miInstallUpdate":"安装更新(&&U)...","miInstallingUpdate":"正在安装更新...","miRestartToUpdate":"重新启动以更新(&&U)"},"vs/platform/userDataSync/common/abstractSynchronizer":{"incompatible":"无法同步 {0}，因为它的本地版本 {1} 与其远程版本 {2} 不兼容","incompatible sync data":"无法分析同步数据，因为它与当前版本不兼容。"},"vs/platform/keybinding/common/abstractKeybindingService":{"first.chord":"({0})已按下。正在等待按下第二个键...","missing.chord":"组合键({0}，{1})不是命令。"},"vs/platform/quickinput/browser/helpQuickAccess":{"globalCommands":"全局命令","editorCommands":"编辑器命令","helpPickAriaLabel":"{0}, {1}"},"vs/platform/theme/common/tokenClassificationRegistry":{"schema.token.settings":"标记的颜色和样式。","schema.token.foreground":"标记的前景色。","schema.token.background.warning":"暂不支持标记背景色。","schema.token.fontStyle":"设置规则的所有字形:“倾斜”、“粗体”、“下划线”或字形组合。所有未列出的样式都取消设置。空字符串将取消设置所有样式。","schema.fontStyle.error":"字体样式必须是“斜体”、“粗体”、“下划线”或者它们的组合。 空字符串将取消设置所有样式。","schema.token.fontStyle.none":"无 (清除继承的设置)","schema.token.bold":"将字形设置为粗体或取消粗体设置。请注意，如果存在 \\"fontStyle\\"，则会替代此设置。","schema.token.italic":"将字形设置为倾斜或取消倾斜设置。请注意，如果存在 \\"fontStyle\\"，则会替代此设置。","schema.token.underline":"将字形设置为下划线或取消下划线设置。请注意，如果存在 \\"fontStyle\\"，则会替代此设置。","comment":"注释的样式。","string":"字符串的样式。","keyword":"关键字的样式。","number":"数字样式。","regexp":"表达式的样式。","operator":"运算符的样式。","namespace":"命名空间的样式。","type":"类型的样式。","struct":"结构样式。","class":"类样式。","interface":"接口样式。","enum":"枚举的样式。","typeParameter":"类型参数的样式。","function":"函数样式","member":"成员函数的样式","method":"成员(成员函数)的样式","macro":"宏样式。","variable":"变量的样式。","parameter":"参数样式。","property":"属性的样式。","enumMember":"枚举成员的样式。","event":"事件的样式。","labels":"文本样式","declaration":"所有符号声明的样式。","documentation":"用于文档中引用的样式。","static":"用于静态符号的样式。","abstract":"用于抽象符号的样式。","deprecated":"用于已弃用的符号的样式。","modification":"用于写入访问的样式。","async":"用于异步的符号的样式。","readonly":"用于只读符号的样式。"},"vs/platform/quickinput/browser/commandsQuickAccess":{"commandPickAriaLabelWithKeybinding":"{0}, {1}","recentlyUsed":"最近使用","morecCommands":"其他命令","canNotRun":"命令\\"{0}\\"导致错误 ({1})"},"win32/i18n/Default":{"SetupAppTitle":"设置","SetupWindowTitle":"安装程序 - %1","UninstallAppTitle":"卸载","UninstallAppFullTitle":"%1 卸载","InformationTitle":"信息","ConfirmTitle":"确认","ErrorTitle":"错误","SetupLdrStartupMessage":"这将安装 %1。是否要继续?","LdrCannotCreateTemp":"无法创建临时文件。安装程序已中止","LdrCannotExecTemp":"无法在临时目录中执行文件。安装程序已中止","LastErrorMessage":"%1。%n%n错误 %2: %3","SetupFileMissing":"安装目录缺失文件 %1。请更正该问题或获取该问题的新副本。","SetupFileCorrupt":"安装程序文件夹已损坏。请获取该程序的新副本。","SetupFileCorruptOrWrongVer":"安装程序文件夹已损坏或与此安装程序版本不兼容。请更正该问题或获取该程序的新副本。","InvalidParameter":"命令行 %n%n%1 上传递了一个无效参数","SetupAlreadyRunning":"安装程序已在运行。","WindowsVersionNotSupported":"此程序不支持你计算机正运行的 Windows 版本。","WindowsServicePackRequired":"此程序需要 %1 服务包 %2 或更高版本。","NotOnThisPlatform":"此程序将不在 %1 上运行。","OnlyOnThisPlatform":"此程序必须在 %1 上运行。","OnlyOnTheseArchitectures":"此程序仅可安装在为以下处理器体系结构设计的 Windows 版本上:%n%n%1","MissingWOW64APIs":"你正运行的 Windows 版本不包含安装程序执行 64 位安装所需的功能。要更正此问题，请安装服务包 %1。","WinVersionTooLowError":"此程序需要 %1 版本 %2 或更高版本。","WinVersionTooHighError":"此程序不能安装在 %1 版本 %2 或更高的版本上。","AdminPrivilegesRequired":"在安装此程序时必须作为管理员登录。","PowerUserPrivilegesRequired":"安装此程序时必须以管理员或 Power User 组成员身份登录。","SetupAppRunningError":"安装程序检测到 %1 当前正在运行。%n%n请立即关闭它的所有实例，然后单击“确定”以继续，或单击“取消”以退出。","UninstallAppRunningError":"卸载检测到 %1 当前正在运行。%n%n请立即关闭它的所有实例，然后单击“确定”以继续或单击“取消”以退出。","ErrorCreatingDir":"安装程序无法创建目录“%1”","ErrorTooManyFilesInDir":"无法在目录“%1”中创建文件，因为它包含太多文件","ExitSetupTitle":"退出安装程序","ExitSetupMessage":"安装程序未完成。如果立即退出，将不会安装该程序。%n%n可在其他时间再次运行安装程序以完成安装。%n%n是否退出安装程序?","AboutSetupMenuItem":"关于安装程序(&A)...","AboutSetupTitle":"关于安装程序","AboutSetupMessage":"%1 版本 %2%n%3%n%n%1 主页:%n%4","ButtonBack":"< 返回(&B)","ButtonNext":"下一步(&N) >","ButtonInstall":"安装(&I)","ButtonOK":"确定","ButtonCancel":"取消","ButtonYes":"是(&Y)","ButtonYesToAll":"接受全部(&A)","ButtonNo":"否(&N)","ButtonNoToAll":"否定全部(&O)","ButtonFinish":"完成(&F)","ButtonBrowse":"浏览(&B)...","ButtonWizardBrowse":"浏览(&R)...","ButtonNewFolder":"新建文件夹(&M)","SelectLanguageTitle":"选择安装程序语言","SelectLanguageLabel":"选择安装时要使用的语言:","ClickNext":"单击“下一步”以继续，或单击“取消”以退出安装程序。","BrowseDialogTitle":"浏览文件夹","BrowseDialogLabel":"在以下列表中选择一个文件夹，然后单击“确定”。","NewFolderName":"新建文件夹","WelcomeLabel1":"欢迎使用 [name] 安装向导","WelcomeLabel2":"这将在计算机上安装 [name/ver]。%n%n建议关闭所有其他应用程序再继续。","WizardPassword":"密码","PasswordLabel1":"此安装受密码保护。","PasswordLabel3":"请提供密码，然后单击“下一步”以继续。密码区分大小写。","PasswordEditLabel":"密码(&P):","IncorrectPassword":"输入的密码不正确。请重试。","WizardLicense":"许可协议","LicenseLabel":"请阅读下面的重要信息，然后继续。","LicenseLabel3":"请阅读以下许可协议。必须接受此协议条款才可继续安装。","LicenseAccepted":"我接受协议(&A)","LicenseNotAccepted":"我不接受协议(&D)","WizardInfoBefore":"信息","InfoBeforeLabel":"请阅读下面的重要信息，然后继续。","InfoBeforeClickLabel":"当准备好继续执行安装程序时，单击“下一步”。","WizardInfoAfter":"信息","InfoAfterLabel":"请阅读下面的重要信息，然后继续。","InfoAfterClickLabel":"当准备好继续执行安装程序时，单击“下一步”。","WizardUserInfo":"用户信息","UserInfoDesc":"请输入您的信息。","UserInfoName":"用户名(&U):","UserInfoOrg":"组织(&O):","UserInfoSerial":"序列号(&S):","UserInfoNameRequired":"必须输入名称。","WizardSelectDir":"选择目标位置","SelectDirDesc":"应将 [name] 安装到哪里?","SelectDirLabel3":"安装程序会将 [name] 安装到以下文件夹。","SelectDirBrowseLabel":"若要继续，单击“下一步”。如果想选择其他文件夹，单击“浏览”。","DiskSpaceMBLabel":"需要至少 [mb] MB 可用磁盘空间。","CannotInstallToNetworkDrive":"安装程序无法安装到网络驱动器。","CannotInstallToUNCPath":"安装程序无法安装到 UNC 路径。","InvalidPath":"必须输入带驱动器号的完整路径(例如:%n%nC:\\\\APP%n%n)或以下格式的 UNC 路径:%n%n\\\\\\\\server\\\\share","InvalidDrive":"所选驱动器或 UNC 共享不存在或不可访问。请另外选择。","DiskSpaceWarningTitle":"磁盘空间不足","DiskSpaceWarning":"安装程序需要至少 %1 KB 可用空间来安装，但所选驱动器仅有 %2 KB 可用空间。%n%n是否仍要继续?","DirNameTooLong":"文件夹名称或路径太长。","InvalidDirName":"文件夹名称无效。","BadDirName32":"文件夹名不能包含以下任一字符:%n%n%1","DirExistsTitle":"文件夹存在","DirExists":"文件夹:%n%n%1%n%n已存在。是否仍要安装到该文件夹?","DirDoesntExistTitle":"文件夹不存在","DirDoesntExist":"文件夹:%n%n%1%n%n不存在。是否要创建该文件夹?","WizardSelectComponents":"选择组件","SelectComponentsDesc":"应安装哪些组件?","SelectComponentsLabel2":"选择希望安装的组件；清除不希望安装的组件。准备就绪后单击“下一步”以继续。","FullInstallation":"完全安装","CompactInstallation":"简洁安装","CustomInstallation":"自定义安装","NoUninstallWarningTitle":"组件存在","NoUninstallWarning":"安装程序检测到计算机上已安装以下组件:%n%n%1%n%n取消选择这些组件将不会卸载它们。%n%n是否仍要继续?","ComponentSize1":"%1 KB","ComponentSize2":"%1 MB","ComponentsDiskSpaceMBLabel":"当前选择需要至少 [mb] MB 磁盘空间。","WizardSelectTasks":"选择其他任务","SelectTasksDesc":"应执行哪些其他任务?","SelectTasksLabel2":"选择安装 [name] 时希望安装程序来执行的其他任务，然后单击“下一步”。","WizardSelectProgramGroup":"选择开始菜单文件夹","SelectStartMenuFolderDesc":"安装程序应将程序的快捷方式放置到哪里?","SelectStartMenuFolderLabel3":"安装程序将在以下开始菜单文件夹中创建该程序的快捷方式。","SelectStartMenuFolderBrowseLabel":"若要继续，单击“下一步”。如果想选择其他文件夹，单击“浏览”。","MustEnterGroupName":"必须输入文件夹名称。","GroupNameTooLong":"文件夹名称或路径太长。","InvalidGroupName":"文件夹名称无效。","BadGroupName":"文件夹名不能保护以下任一字符:%n%n%1","NoProgramGroupCheck2":"不创建开始菜单文件夹(&D)","WizardReady":"安装准备就绪","ReadyLabel1":"安装程序现已准备好在计算机上安装 [name]。","ReadyLabel2a":"单击“安装”以继续安装，如想查看或更改任何设置则单击\\"返回\\"。","ReadyLabel2b":"单击“安装”以继续安装。","ReadyMemoUserInfo":"用户信息:","ReadyMemoDir":"目标位置:","ReadyMemoType":"安装程序类型:","ReadyMemoComponents":"所选组件:","ReadyMemoGroup":"开始菜单文件夹:","ReadyMemoTasks":"其他任务:","WizardPreparing":"正在准备安装","PreparingDesc":"安装程序正准备在计算机上安装 [name]。","PreviousInstallNotCompleted":"上一个程序的安装/删除未完成。需重启计算机以完成该安装。%n%n重启计算机后，重新运行安装程序以完成 [name] 的安装。","CannotContinue":"安装程序无法继续。请单击“取消”以退出。","ApplicationsFound":"以下应用程序正在使用需要通过安装程序进行更新的文件。建议允许安装程序自动关闭这些应用程序。","ApplicationsFound2":"以下应用程序正在使用需要通过安装程序进行更新的文件。建议允许安装程序自动关闭这些应用程序。完成安装后，安装程序将尝试重启应用程序。","CloseApplications":"自动关闭应用程序(&A)","DontCloseApplications":"不关闭应用程序(&D)","ErrorCloseApplications":"安装程序无法自动关闭所有应用程序。建议在继续操作之前先关闭所有使用需通过安装程序进行更新的文件的应用程序。","WizardInstalling":"正在安装","InstallingLabel":"安装程序正在计算机上安装 [name]，请稍等。","FinishedHeadingLabel":"完成 [name] 安装向导","FinishedLabelNoIcons":"安装程序已在计算机上完成安装 [name]。","FinishedLabel":"安装程序已在计算机上完成安装 [name]。选择安装的图标即可以启动应用程序。","ClickFinish":"单击“完成”退出安装程序。","FinishedRestartLabel":"要完成 [name] 的安装，安装程序必须重启计算机。是否要立即重启?","FinishedRestartMessage":"要完成 [name] 的安装，安装程序必须重启计算机。%n%n是否要立即重启?","ShowReadmeCheck":"是，我希望查看 README 文件","YesRadio":"是，立即重启计算机(&Y)","NoRadio":"否，我将稍后重启计算机(&N)","RunEntryExec":"运行 %1","RunEntryShellExec":"查看 %1","ChangeDiskTitle":"安装程序需要下一个磁盘","SelectDiskLabel2":"请插入磁盘 %1 并点击“确定”。%n%n如果此磁盘上的文件可在以下文件夹外的其他文件夹中找到，请输入正确路径或单击“浏览”。","PathLabel":"路径(&P):","FileNotInDir2":"在“%2”中无法定位文件“%1”。请插入正确的磁盘或选择其他文件夹。","SelectDirectoryLabel":"请指定下一个磁盘的位置。","SetupAborted":"安装程序未完成。%n%n请更正问题并重新运行安装程序。","EntryAbortRetryIgnore":"单击“重试”以再次尝试，单击“忽略”以继续，或单击“中止”以取消安装。","StatusClosingApplications":"正在关闭应用程序...","StatusCreateDirs":"正在创建目录...","StatusExtractFiles":"正在解压缩文件...","StatusCreateIcons":"正在创建快捷方式...","StatusCreateIniEntries":"正在创建 INI 项...","StatusCreateRegistryEntries":"正在创建注册表项...","StatusRegisterFiles":"正在注册文件...","StatusSavingUninstall":"正在保存卸载信息...","StatusRunProgram":"正在完成安装...","StatusRestartingApplications":"正在重启应用程序...","StatusRollback":"正在回退更改...","ErrorInternal2":"内部错误: %1","ErrorFunctionFailedNoCode":"%1 失败","ErrorFunctionFailed":"%1 失败；代码 %2","ErrorFunctionFailedWithMessage":"%1 失败；代码 %2。%n%3","ErrorExecutingProgram":"无法执行文件:%n%1","ErrorRegOpenKey":"打开注册表项时出错:%n%1\\\\%2","ErrorRegCreateKey":"创建注册表项时出错:%n%1\\\\%2","ErrorRegWriteKey":"写入注册表项时出错:%n%1\\\\%2","ErrorIniEntry":"在文件“%1”中创建 INI 项时出错。","FileAbortRetryIgnore":"单击“重试”以再次操作，单击“忽略”以跳过此文件(不建议此操作)，或单击“中止”以取消安装。","FileAbortRetryIgnore2":"单击“重试”以再次操作，单击“忽略”以继续(不建议此操作)，或单击“中止”以取消安装。","SourceIsCorrupted":"源文件已损坏","SourceDoesntExist":"源文件“%1”不存在","ExistingFileReadOnly":"现有文件被标记为只读状态。%n%n单击“重试”以删除只读特性并重试，单击“忽略”以跳过此文件，或单击“中止”以取消安装。","ErrorReadingExistingDest":"尝试读取现有文件时出错:","FileExists":"该文件已存在。%n%n是否要安装程序覆盖它?","ExistingFileNewer":"现有文件比安装程序正尝试安装的文件更新。建议保留现有文件。%n%n是否要保留现有文件?","ErrorChangingAttr":"尝试更改现有文件特性出错:","ErrorCreatingTemp":"尝试在目标目录创建文件时出错:","ErrorReadingSource":"尝试读取源文件时出错:","ErrorCopying":"尝试复制文件时出错:","ErrorReplacingExistingFile":"尝试替换现有文件时出错:","ErrorRestartReplace":"RestartReplace 失败:","ErrorRenamingTemp":"尝试在目标目录重命名文件时出错:","ErrorRegisterServer":"无法注册 DLL/OCX: %1","ErrorRegSvr32Failed":"RegSvr32 失败，退出代码为 %1","ErrorRegisterTypeLib":"无法注册类型库: %1","ErrorOpeningReadme":"尝试打开 README 文件时出错。","ErrorRestartingComputer":"安装程序无法重启计算机。请手动执行此操作。","UninstallNotFound":"文件“%1”不存在。无法安装。","UninstallOpenError":"无法打开文件“%1”。无法卸载","UninstallUnsupportedVer":"卸载日志“%1”的格式无法被此版本的卸载程序识别。无法卸载","UninstallUnknownEntry":"卸载日志中发现未知条目(%1)","ConfirmUninstall":"确实要完全删除 %1 吗? 将不会删除扩展和设置。","UninstallOnlyOnWin64":"仅可在 64 位 Windows 上卸载此安装。","OnlyAdminCanUninstall":"仅具有管理权限的用户才可卸载此安装。","UninstallStatusLabel":"正从计算机删除 %1，请稍等。","UninstalledAll":"已成功从计算机上删除 %1。","UninstalledMost":"%1 卸载完成。%n%n无法删除一些元素。可将其手动删除。","UninstalledAndNeedsRestart":"要完成 %1 的卸载，必须重启计算机。%n%n是否要立即重启?","UninstallDataCorrupted":"“%1”文件已损坏。无法卸载","ConfirmDeleteSharedFileTitle":"删除共享文件?","ConfirmDeleteSharedFile2":"系统表示以下共享文件不再被任何程序使用。是否要卸载删除此共享文件?%n%n如果在有程序仍在使用此文件而它被删除，则程序可能不会正常运行。如果不确定，请选择“否”。将文件留住系统上不会造成任何问题。","SharedFileNameLabel":"文件名:","SharedFileLocationLabel":"位置:","WizardUninstalling":"卸载状态","StatusUninstalling":"正在卸载 %1...","ShutdownBlockReasonInstallingApp":"正在安装 %1。","ShutdownBlockReasonUninstallingApp":"正在卸载 %1。","NameAndVersion":"%1 版本 %2","AdditionalIcons":"其他图标:","CreateDesktopIcon":"创建桌面图标(&D)","CreateQuickLaunchIcon":"创建 \\"快速启动\\" 图标(&Q)","ProgramOnTheWeb":"Web 上的 %1","UninstallProgram":"卸载 %1","LaunchProgram":"启动 %1","AssocFileExtension":"将 %1 与 %2 文件扩展名关联(&A)","AssocingFileExtension":"正将 %1 与 %2 文件扩展名关联...","AutoStartProgramGroupDescription":"启动:","AutoStartProgram":"自动启动 %1","AddonHostProgramNotFound":"无法在所选文件夹中定位 %1。%n%n是否仍要继续?"},"win32/i18n/messages":{"FinishedLabel":"安装程序已在计算机上安装好 [name]。选择安装的快捷方式即可启动该应用程序。","ConfirmUninstall":"确定要完全删除 %1 及其所有组件?","AdditionalIcons":"其他图标:","CreateDesktopIcon":"创建桌面图标(&D)","CreateQuickLaunchIcon":"创建 \\"快速启动\\" 图标(&Q)","AddContextMenuFiles":"将“通过 %1 打开”操作添加到 Windows 资源管理器文件上下文菜单","AddContextMenuFolders":"将“通过 %1 打开”操作添加到 Windows 资源管理器目录上下文菜单","AssociateWithFiles":"将 %1 注册为受支持的文件类型的编辑器","AddToPath":"添加到 PATH (需要重启 shell)","RunAfter":"安装后运行 %1","Other":"其他:","SourceFile":"%1 源文件","OpenWithCodeContextMenu":"使用 %1 打开(&I)"},"vs/code/electron-main/main":{"secondInstanceAdmin":"{0} 的第二个实例已经以管理员身份运行。","secondInstanceAdminDetail":"请先关闭另一个实例，然后重试。","secondInstanceNoResponse":"{0} 的另一实例正在运行但没有响应","secondInstanceNoResponseDetail":"请先关闭其他所有实例，然后重试。","startupDataDirError":"无法写入程序用户数据。","startupUserDataAndExtensionsDirErrorDetail":"请确保以下目录是可写的:\\r\\n\\r\\n{0}","close":"关闭(&C)"},"vs/code/node/cliProcessMain":{"notFound":"找不到扩展“{0}”。","notInstalled":"未安装扩展“{0}”。","useId":"确认使用了包括发布者在内的完整扩展 ID，例如: {0}","installingExtensions":"正在安装扩展...","alreadyInstalled-checkAndUpdate":"已安装扩展 \\"{0}\\" v{1}。使用 \\"--force\\" 选项更新到最新版本，或提供 \\"@<version>\\" 以安装特定版本，例如: \\"{2}@1.2.3\\"。","alreadyInstalled":"已安装扩展“{0}”。","installation failed":"未能安装扩展: {0}","successVsixInstall":"已成功安装扩展“{0}”。","cancelVsixInstall":"已取消安装扩展“{0}”。","updateMessage":"将扩展 \\"{0}\\" 更新到版本 {1}","installing builtin ":"正在安装内置扩展“{0}”v{1}…","installing":"正在安装扩展“{0}”v{1}...","successInstall":"已成功安装扩展“{0}”v{1}。","cancelInstall":"已取消安装扩展“{0}”。","forceDowngrade":"已安装扩展“{0}”v{1} 的较新版本。请使用 \\"--force\\" 选项降级到旧版本。","builtin":"扩展“{0}”是内置扩展，无法安装","forceUninstall":"用户已将扩展“{0}”标记为内置扩展。请使用 \\"--force\\" 选项将其卸载。","uninstalling":"正在卸载 {0}...","successUninstall":"已成功卸载扩展“{0}”!"},"vs/code/electron-sandbox/issue/issueReporterMain":{"hide":"隐藏","show":"显示","previewOnGitHub":"在 GitHub 中预览","loadingData":"正在加载数据…","rateLimited":"超出 GitHub 查询限制。请稍候。","similarIssues":"类似的问题","open":"打开","closed":"已关闭","noSimilarIssues":"没有找到类似问题","bugReporter":"Bug 报告","featureRequest":"功能请求","performanceIssue":"性能问题","selectSource":"选择源","vscode":"Visual Studio Code","extension":"扩展","unknown":"不知道","stepsToReproduce":"重现步骤","bugDescription":"请分享能稳定重现此问题的必要步骤，并包含实际和预期的结果。我们支持 GitHub 版的 Markdown。您将能在 GitHub 上预览时编辑这个问题并添加截图。","performanceIssueDesciption":"这个性能问题是在什么时候发生的? 是在启动时，还是在一系列特定的操作之后? 我们支持 GitHub 版的 Markdown。您将能在 GitHub 上预览时编辑这个问题并添加截图。","description":"说明","featureRequestDescription":"请描述您希望能够使用的功能。我们支持 GitHub 版的 Markdown。您将能在 GitHub 上预览时编辑问题并添加截图。","pasteData":"所需的数据太大，无法直接发送。我们已经将其写入剪贴板，请粘贴。","disabledExtensions":"扩展已禁用","noCurrentExperiments":"无当前试验。"},"vs/code/electron-sandbox/processExplorer/processExplorerMain":{"cpu":"CPU %","memory":"内存(MB)","pid":"PID","name":"名称","killProcess":"结束进程","forceKillProcess":"强制结束进程","copy":"复制","copyAll":"全部复制","debug":"调试"},"vs/code/electron-main/app":{"trace.message":"已成功创建跟踪信息。","trace.detail":"请创建问题并手动附加以下文件:\\r\\n{0}","trace.ok":"确定","open":"是(&Y)","cancel":"否(&&N)","confirmOpenMessage":"外部应用程序想要在 {1} 中打开“{0}”。是否要打开此文件或文件夹?","confirmOpenDetail":"如果你未发起此请求，则可能表示有人试图攻击你的系统。除非你采取了明确操作来发起此请求，否则应按“否”"},"vs/code/electron-sandbox/issue/issueReporterPage":{"completeInEnglish":"请使用英文进行填写。","issueTypeLabel":"这是一个","issueSourceLabel":"提交到","issueSourceEmptyValidation":"问题源是必需的。","disableExtensionsLabelText":"请试着在{0}之后重现问题。如果此问题仅在扩展运行时才能重现，那么这可能是一个扩展的问题。","disableExtensions":"禁用所有扩展并重新加载窗口","chooseExtension":"扩展","extensionWithNonstandardBugsUrl":"问题报告程序无法为此扩展创建问题。请访问{0}报告问题。","extensionWithNoBugsUrl":"问题报告程序无法为此扩展创建问题，因为它没有指定用于报告问题的 URL。请查看此扩展的应用商店页面，以便查看是否有其他说明。","issueTitleLabel":"标题","issueTitleRequired":"请输入标题。","titleEmptyValidation":"标题是必需的。","titleLengthValidation":"标题太长。","details":"请输入详细信息。","descriptionEmptyValidation":"需要描述。","sendSystemInfo":"包含系统信息 ({0})","show":"显示","sendProcessInfo":"包含当前运行中的进程 ({0})","sendWorkspaceInfo":"包含工作区元数据 ({0})","sendExtensions":"包含已启用的扩展 ({0})","sendExperiments":"包括 A/B 试验信息({0}) "},"vs/code/electron-main/auth":{"authRequire":"需要代理身份验证","proxyauth":"{0} 代理需要身份验证。"},"vs/code/electron-main/window":{"reopen":"重新打开(&&R)","wait":"继续等待(&&K)","close":"关闭(&C)","appStalled":"窗口不再响应","appStalledDetail":"你可以重新打开或关闭窗口，或者保持等待。","appCrashedDetails":"窗口已崩溃(原因:“{0}”)","appCrashed":"窗口出现故障","appCrashedDetail":"我们对此引起的不便表示抱歉! 请重启该窗口从上次停止的位置继续。","hiddenMenuBar":"你仍可以通过 Alt 键访问菜单栏。"},"vs/workbench/electron-browser/actions/developerActions":{"toggleSharedProcess":"切换共享进程"},"vs/workbench/electron-sandbox/desktop.contribution":{"newTab":"新建窗口标签页","showPreviousTab":"显示上一个窗口选项卡","showNextWindowTab":"显示下一个窗口选项卡","moveWindowTabToNewWindow":"将窗口选项卡移动到新窗口","mergeAllWindowTabs":"合并所有窗口","toggleWindowTabsBar":"切换窗口选项卡栏","preferences":"首选项","miCloseWindow":"关闭窗口(&&W)","miExit":"退出(&&X)","miZoomIn":"放大(&&Z)","miZoomOut":"缩小(&&Z)","miZoomReset":"重置缩放(&&R)","miReportIssue":"使用英文报告问题(&&I)","miToggleDevTools":"切换开发人员工具(&&T)","miOpenProcessExplorerer":"打开进程管理器(&&P)","windowConfigurationTitle":"窗口","window.openWithoutArgumentsInNewWindow.on":"打开一个新的空窗口。","window.openWithoutArgumentsInNewWindow.off":"聚焦到上一活动的运行实例。","openWithoutArgumentsInNewWindow":"控制在启动不带参数的第二个实例时是应该打开一个新的空窗口，还是应由上一个运行的实例获得焦点。\\r\\n请注意，此设置可能会被忽略(例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。","window.reopenFolders.preserve":"始终重新打开所有窗口。如果打开文件夹或工作区(例如从命令行打开)，它将作为新窗口打开，除非它之前已打开。如果打开文件，则这些文件将在其中一个已还原的窗口中打开。","window.reopenFolders.all":"重新打开所有窗口，除非已打开文件夹、工作区或文件(例如从命令行)。","window.reopenFolders.folders":"重新打开已打开文件夹或工作区的所有窗口，除非已打开文件夹、工作区或文件(例如从命令行)。","window.reopenFolders.one":"重新打开上一个活动窗口，除非已打开文件夹、工作区或文件(例如从命令行)。","window.reopenFolders.none":"从不重新打开窗口。如果文件夹或工作区未打开(例如从命令行)，将出现一个空窗口。","restoreWindows":"控制在第一次启动后窗口重新打开的方式。如果应用程序已在运行，则此设置不起任何作用。","restoreFullscreen":"若窗口在处于全屏模式时退出，控制其在恢复时是否还原到全屏模式。","zoomLevel":"调整窗口的缩放级别。原始大小是 0，每次递增(例如 1)或递减(例如 -1)表示放大或缩小 20%。也可以输入小数以便以更精细的粒度调整缩放级别。","window.newWindowDimensions.default":"在屏幕中心打开新窗口。","window.newWindowDimensions.inherit":"以与上一个活动窗口相同的尺寸打开新窗口。","window.newWindowDimensions.offset":"打开与上次活动窗口具有相同尺寸的新窗口，并带有偏移位置。","window.newWindowDimensions.maximized":"打开最大化的新窗口。","window.newWindowDimensions.fullscreen":"在全屏模式下打开新窗口。","newWindowDimensions":"控制在已有窗口时新开窗口的尺寸。请注意，此设置对第一个打开的窗口无效。第一个窗口将始终恢复关闭前的大小和位置。","closeWhenEmpty":"控制在关闭最后一个编辑器时是否关闭整个窗口。此设置仅适用于没有显示文件夹的窗口。","window.doubleClickIconToClose":"如果启用, 双击标题栏中的应用程序图标将关闭窗口, 并且该窗口无法通过图标拖动。此设置仅在 \\"#window.titleBarStyle#\\" 设置为 \\"custom\\" 时生效。","titleBarStyle":"调整窗口标题栏的外观。在 Linux 和 Windows 上，此设置也会影响应用程序和上下文菜单的外观。更改需要完全重新启动才能应用。","dialogStyle":"调整对话框窗口的外观。","window.nativeTabs":"启用 macOS Sierra 窗口选项卡。请注意，更改在完全重新启动程序后才能生效。同时，开启原生选项卡将禁用自定义标题栏样式。","window.nativeFullScreen":"控制是否在 macOS 上使用原生全屏。禁用此设置可禁止 macOS 在全屏时创建新空间。","window.clickThroughInactive":"启用后，点击非活动窗口后将在激活窗口的同时触发光标之下的元素 (若可点击)。禁用后，点击非活动窗口仅能激活窗口，再次点击才能触发元素。","window.enableExperimentalProxyLoginDialog":"启用新的登录对话以实现代理身份验证。需要重启才能生效。","telemetryConfigurationTitle":"遥测","telemetry.enableCrashReporting":"将故障报告发送到 Microsoft 联机服务。\\r\\n此选项在重启后才能生效。","keyboardConfigurationTitle":"键盘","touchbar.enabled":"启用键盘上的 macOS 触控栏按钮 (若可用)。","touchbar.ignored":"触摸栏中不应显示的条目的一组标识符(例如\\"workbench.action.navigateBack\\")。","argv.locale":"要使用的显示语言。选取其他语言需要安装关联的语言包。","argv.disableHardwareAcceleration":"禁用硬件加速。仅当遇到图形问题时才更改此选项。","argv.disableColorCorrectRendering":"解决颜色配置文件选择问题。仅当您遇到图形问题时，才更改此选项。","argv.forceColorProfile":"允许替代要使用的颜色配置文件。如果发现颜色显示不佳，请尝试将此设置为 \\"srgb\\" 并重启。","argv.enableCrashReporter":"允许禁用崩溃报告；如果更改了值，则应重启应用。","argv.crashReporterId":"用于关联从此应用实例发送的崩溃报表的唯一 ID。","argv.enebleProposedApi":"为扩展 ID (如 \\"vscode.git\\")的列表启用建议的 API。建议的 API 不稳定，可能随时中断且不发出警告。仅应针对扩展开发和测试目的设置该项。","argv.force-renderer-accessibility":"强制渲染器可访问。仅当在 Linux 上使用屏幕阅读器时才更改此设置。在其他平台上，渲染器将自动可访问。如果已启用 editor.accessibilitySupport:，则会自动设置此标志。"},"vs/workbench/common/actions":{"view":"视图","help":"帮助","developer":"开发人员"},"vs/workbench/browser/workbench":{"loaderErrorNative":"未能加载所需文件。请重启应用程序重试。详细信息: {0}"},"vs/workbench/electron-sandbox/window":{"learnMode":"了解详细信息","shellEnvSlowWarning":"解析 shell 环境耗时太长。请检查 shell 配置。","shellEnvTimeoutError":"无法在合理的时间内解析 shell 环境。请检查 shell 配置。","proxyAuthRequired":"需要代理身份验证","loginButton":"登录(&&L)","cancelButton":"取消(&&C)","username":"用户名","password":"密码","proxyDetail":"代理 {0} 需要用户名和密码。","rememberCredentials":"记住我的凭据","runningAsRoot":"不建议以 root 用户身份运行 {0}。","mPreferences":"首选项"},"vs/workbench/common/theme":{"tabActiveBackground":"活动选项卡的背景色。在编辑器区域，选项卡是编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabUnfocusedActiveBackground":"非焦点组中的活动选项卡背景色。选项卡是编辑器区域中编辑器的容器。可以在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabInactiveBackground":"非活动选项卡的背景色。在编辑器区域，选项卡是编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabUnfocusedInactiveBackground":"不带焦点的组中处于非活动状态的选项卡的背景色。选项卡是编辑器区域中的编辑器的容器。可在一个编辑器组中打开多个选项卡。可存在多个编辑器组。","tabActiveForeground":"活动组中活动选项卡的前景色。在编辑器区域，选项卡是编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabInactiveForeground":"活动组中非活动选项卡的前景色。在编辑器区域，选项卡是编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabUnfocusedActiveForeground":"一个失去焦点的编辑器组中的活动选项卡的前景色。在编辑器区域，选项卡是编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabUnfocusedInactiveForeground":"在一个失去焦点的组中非活动选项卡的前景色。在编辑器区域，选项卡是编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabHoverBackground":"选项卡被悬停时的背景色。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabUnfocusedHoverBackground":"非焦点组选项卡被悬停时的背景色。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabHoverForeground":"悬停时选项卡的前景色。选项卡是编辑器区域中的编辑器的容器。可在一个编辑器组中打开多个选项卡。可存在多个编辑器组。","tabUnfocusedHoverForeground":"悬停时不带焦点的组中的选项卡前景色。选项卡是编辑器区域中的编辑器的容器。可在一个编辑器组中打开多个选项卡。可存在多个编辑器组。","tabBorder":"用于将选项卡彼此分隔开的边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以存在多个编辑器组。","lastPinnedTabBorder":"用于将固定的选项卡与其他选项卡隔开的边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabActiveBorder":"活动选项卡底部的边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以存在多个编辑器组。","tabActiveUnfocusedBorder":"在失去焦点的编辑器组中的活动选项卡底部的边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以存在多个编辑器组。","tabActiveBorderTop":"活动选项卡顶部的边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以存在多个编辑器组。","tabActiveUnfocusedBorderTop":"在失去焦点的编辑器组中的活动选项卡顶部的边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以存在多个编辑器组。","tabHoverBorder":"选项卡被悬停时用于突出显示的边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabUnfocusedHoverBorder":"非焦点组选项卡被悬停时用于突出显示的边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以有多个编辑器组。","tabActiveModifiedBorder":"在活动编辑器组中已修改 (存在更新) 的活动选项卡的顶部边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以存在多个编辑器组。","tabInactiveModifiedBorder":"在活动编辑器组中已修改 (存在更新) 的非活动选项卡的顶部边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以存在多个编辑器组。","unfocusedActiveModifiedBorder":"在未获焦点的编辑器组中已修改 (存在更新) 的活动选项卡的顶部边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以存在多个编辑器组。","unfocusedINactiveModifiedBorder":"在未获焦点的编辑器组中已修改 (存在更新) 的非活动选项卡的顶部边框。选项卡是编辑器区域中编辑器的容器。可在一个编辑器组中打开多个选项卡。可以存在多个编辑器组。","editorPaneBackground":"居中编辑器布局中左侧与右侧编辑器窗格的背景色。","editorGroupBackground":"编辑器组的背景色。(已弃用)","deprecatedEditorGroupBackground":"已弃用: 在引入网格编辑器布局后，将不再支持编辑器组的背景色。请使用 editorGroup.emptyBackground 设置空编辑器组的背景色。","editorGroupEmptyBackground":"空编辑器组的背景色。编辑器组是编辑器的容器。","editorGroupFocusedEmptyBorder":"空编辑器组被聚焦时的边框颜色。编辑组是编辑器的容器。","tabsContainerBackground":"启用选项卡时编辑器组标题的背景颜色。编辑器组是编辑器的容器。","tabsContainerBorder":"选项卡启用时编辑器组标题的边框颜色。编辑器组是编辑器的容器。","editorGroupHeaderBackground":"禁用选项卡 (\\"workbench.editor.showTabs\\": false) 时编辑器组标题颜色。编辑器组是编辑器的容器。","editorTitleContainerBorder":"编辑器组标题标头的边框颜色。编辑器组是编辑器的容器。","editorGroupBorder":"将多个编辑器组彼此分隔开的颜色。编辑器组是编辑器的容器。","editorDragAndDropBackground":"拖动编辑器时的背景颜色。此颜色应有透明度，以便编辑器内容能透过背景。","imagePreviewBorder":"图像预览中图像的边框颜色。","panelBackground":"面板的背景色。面板显示在编辑器区域下方，可包含输出和集成终端等视图。","panelBorder":"将面板与编辑器隔开的边框的颜色。面板显示在编辑区域下方，包含输出和集成终端等视图。","panelActiveTitleForeground":"活动面板的标题颜色。面板显示在编辑器区域下方，并包含输出和集成终端等视图。","panelInactiveTitleForeground":"非活动面板的标题颜色。面板显示在编辑器区域下方，并包含输出和集成终端等视图。","panelActiveTitleBorder":"活动面板标题的边框颜色。面板显示在编辑器区域下方，并包含输出和集成终端等视图。","panelInputBorder":"用于面板中输入内容的输入框边框。","panelDragAndDropBorder":"拖放面板标题的反馈颜色。面板显示在编辑器区域的下方，包含输出和集成终端等视图。","panelSectionDragAndDropBackground":"拖放面板区域的反馈颜色。颜色应具有透明度，以便面板区域仍可以显示出来。面板显示在编辑器区域的下方，包含输出和集成终端等视图。面板部分是嵌套在面板中的视图。","panelSectionHeaderBackground":"面板区域标题背景色。面板显示在编辑器区域的下方，包含输出和集成终端等视图。面板部分是嵌套在面板中的视图。","panelSectionHeaderForeground":"面板区域标题前景色。面板显示在编辑器区域的下方，包含输出和集成终端等视图。面板部分是嵌套在面板中的视图。","panelSectionHeaderBorder":"当多个视图在面板中垂直堆叠时使用的面板区域标题边框颜色。面板显示在编辑器区域下方，其中包含输出和集成终端等视图。面板部分是嵌套在面板中的视图。","panelSectionBorder":"当多个视图在面板中水平堆叠时使用的面板区域边框颜色。面板显示在编辑器区域下方，其中包含输出和集成终端等视图。面板部分是嵌套在面板中的视图。","statusBarForeground":"工作区打开时状态栏的前景色。状态栏显示在窗口底部。","statusBarNoFolderForeground":"没有打开文件夹时状态栏的前景色。状态栏显示在窗口底部。","statusBarBackground":"工作区打开时状态栏的背景色。状态栏显示在窗口底部。","statusBarNoFolderBackground":"没有打开文件夹时状态栏的背景色。状态栏显示在窗口底部。","statusBarBorder":"状态栏分隔侧边栏和编辑器的边框颜色。状态栏显示在窗口底部。","statusBarNoFolderBorder":"当没有打开文件夹时，用来使状态栏与侧边栏、编辑器分隔的状态栏边框颜色。状态栏显示在窗口底部。","statusBarItemActiveBackground":"单击时的状态栏项背景色。状态栏显示在窗口底部。","statusBarItemHoverBackground":"悬停时的状态栏项背景色。状态栏显示在窗口底部。","statusBarProminentItemForeground":"状态栏突出的项目前景色。突出的项目从其他状态栏条目中脱颖而出, 以表明重要性。从命令调色板中更改 \\"切换选项卡键移动焦点\\" 的模式以查看示例。状态栏显示在窗口的底部。","statusBarProminentItemBackground":"状态栏突出显示项的背景颜色。突出显示项比状态栏中的其他条目更醒目以表明其重要性。在命令面板中更改“切换 Tab 键是否移动焦点”可查看示例。状态栏显示在窗口底部。","statusBarProminentItemHoverBackground":"状态栏突出显示项在被悬停时的背景颜色。突出显示项比状态栏中的其他条目更醒目以表明其重要性。在命令面板中更改“切换 Tab 键是否移动焦点”可查看示例。状态栏显示在窗口底部。","statusBarErrorItemBackground":"状态栏错误项的背景颜色。错误项比状态栏中的其他条目更醒目以显示错误条件。状态栏显示在窗口底部。","statusBarErrorItemForeground":"状态错误项的前景色。错误项比状态栏中的其他条目更醒目以显示错误条件。状态栏显示在窗口底部。","activityBarBackground":"活动栏背景色。活动栏显示在最左侧或最右侧，并允许在侧边栏的视图间切换。","activityBarForeground":"活动栏项在活动时的前景色。活动栏显示在最左侧或最右侧，并允许在侧边栏的视图间切换。","activityBarInActiveForeground":"活动栏项在非活动时的前景色。活动栏显示在最左侧或最右侧，并允许在侧边栏的视图间切换。","activityBarBorder":"活动栏分隔侧边栏的边框颜色。活动栏显示在最左侧或最右侧，并可以切换侧边栏的视图。","activityBarActiveBorder":"活动项的活动栏边框颜色。活动栏显示在最左侧或右侧，并允许在侧栏视图之间切换。","activityBarActiveFocusBorder":"活动项的活动栏焦点边框颜色。活动栏显示在最左侧或右侧，并允许在侧栏视图之间切换。","activityBarActiveBackground":"活动项的活动栏背景颜色。活动栏显示在最左侧或右侧，并允许在侧栏视图之间切换。","activityBarDragAndDropBorder":"拖放活动栏项的反馈颜色。活动栏显示在最左侧或最右侧，并允许在侧边栏视图之间切换。","activityBarBadgeBackground":"活动通知徽章背景色。活动栏显示在最左侧或最右侧，并允许在侧边栏的视图间切换。","activityBarBadgeForeground":"活动通知徽章前景色。活动栏显示在最左侧或最右侧，并允许在侧边栏的视图间切换。","statusBarItemHostBackground":"状态栏上远程指示器的背景色。","statusBarItemHostForeground":"状态栏上远程指示器的前景色。","extensionBadge.remoteBackground":"扩展视图中远程徽标的背景色。","extensionBadge.remoteForeground":"扩展视图中远程徽标的前景色。","sideBarBackground":"侧边栏背景色。侧边栏是资源管理器和搜索等视图的容器。","sideBarForeground":"侧边栏前景色。侧边栏是资源管理器和搜索等视图的容器。","sideBarBorder":"侧边栏分隔编辑器的边框颜色。侧边栏包含资源管理器、搜索等视图。","sideBarTitleForeground":"侧边栏标题前景色。侧边栏是资源管理器和搜索等视图的容器。","sideBarDragAndDropBackground":"侧边栏中的部分在拖放时的反馈颜色。此颜色应有透明度，以便侧边栏中的部分仍能透过。侧边栏是资源管理器和搜索等视图的容器。侧边栏部分是嵌套在侧边栏中的视图。","sideBarSectionHeaderBackground":"侧边栏部分标题背景色。此侧边栏是资源管理器和搜索等视图的容器。侧边栏部分是在侧边栏中嵌套的视图。","sideBarSectionHeaderForeground":"侧边栏部分标题前景色。侧栏是类似资源管理器和搜索等视图的容器。侧栏部分是在侧栏中嵌套的视图。","sideBarSectionHeaderBorder":"侧边栏部分标题边界色。侧栏是类似资源管理器和搜索等视图的容器。侧栏部分是在侧栏中嵌套的视图。","titleBarActiveForeground":"窗口处于活动状态时的标题栏前景色。","titleBarInactiveForeground":"窗口处于非活动状态时的标题栏前景色。","titleBarActiveBackground":"窗口处于活动状态时的标题栏背景色。","titleBarInactiveBackground":"窗口处于非活动状态时的标题栏背景色。","titleBarBorder":"标题栏边框颜色。","menubarSelectionForeground":"菜单栏中选定菜单项的前景色。","menubarSelectionBackground":"菜单栏中选定菜单项的背景色。","menubarSelectionBorder":"菜单栏中所选菜单项的边框颜色。","notificationCenterBorder":"通知中心的边框颜色。通知从窗口右下角滑入。","notificationToastBorder":"通知横幅的边框颜色。通知从窗口右下角滑入。","notificationsForeground":"通知的前景色。通知从窗口右下角滑入。","notificationsBackground":"通知的背景色。通知从窗口右下角滑入。","notificationsLink":"通知链接的前景色。通知从窗口右下角滑入。","notificationCenterHeaderForeground":"通知中心头部的前景色。通知从窗口右下角滑入。","notificationCenterHeaderBackground":"通知中心头部的背景色。通知从窗口右下角滑入。","notificationsBorder":"通知中心中分隔通知的边框的颜色。通知从窗口右下角滑入。","notificationsErrorIconForeground":"用于错误通知图标的颜色。通知从窗口右下角滑入。","notificationsWarningIconForeground":"用于警告通知图标的颜色。通知从窗口右下角滑入。","notificationsInfoIconForeground":"用于信息通知图标的颜色。通知从窗口右下角滑入。","windowActiveBorder":"窗口处于活动状态时用于窗口边框的颜色。仅在使用自定义标题栏时在桌面客户端中支持。","windowInactiveBorder":"窗口处于非活动状态时用于边框的颜色。仅在使用自定义标题栏时在桌面客户端中支持。"},"vs/workbench/common/editor":{"sideBySideLabels":"{0} - {1}","preview":"{0}，预览","pinned":"{0}，已固定"},"vs/workbench/common/views":{"testViewIcon":"查看测试视图的图标。","defaultViewIcon":"默认视图图标。","duplicateId":"已注册 ID 为“{0}”的视图"},"vs/workbench/api/common/extHostExtensionService":{"extensionTestError":"路径 {0} 未指向有效的扩展测试运行程序。"},"vs/workbench/api/common/extHostTerminalService":{"launchFail.idMissingOnExtHost":"在扩展主机上找不到 ID 为 {0} 的终端"},"vs/workbench/api/common/extHostWorkspace":{"updateerror":"扩展“{0}”未能更新工作区文件夹: {1}"},"vs/workbench/browser/workbench.contribution":{"workbench.editor.titleScrollbarSizing.default":"默认大小。","workbench.editor.titleScrollbarSizing.large":"增加大小，以便更轻松地通过鼠标抓取","tabScrollbarHeight":"控制编辑器标题区域中用于选项卡和面包屑的滚动条的高度。","showEditorTabs":"控制打开的编辑器是否显示在选项卡中。","scrollToSwitchTabs":"控制在滚动到选项卡上方时是否打开这些选项卡。默认情况下，选项卡仅在鼠标滚动时呈现，但不打开。可通过在滚动时按住 Shift 键来更改滚动期间的此行为。当 \\"#workbench.editor.showTabs#\\" 设置为 \\"false\\" 时，将忽略此值。","highlightModifiedTabs":"控制是否在已修改的(脏)编辑器选项卡上绘制上边框。当 \\"#workbench.editor.showTabs#\\" 为 false 时，将忽略此值。","workbench.editor.labelFormat.default":"显示文件名。当启用选项卡且在同一组内有两个相同名称的文件时，将添加每个文件路径中可以用于区分的部分。在选项卡被禁用且编辑器活动时，将显示相对于工作区文件夹的路径。","workbench.editor.labelFormat.short":"在文件的目录名之后显示文件名。","workbench.editor.labelFormat.medium":"在文件相对当前工作区文件夹的路径之后显示文件名。","workbench.editor.labelFormat.long":"在文件的绝对路径之后显示文件名。","tabDescription":"控制编辑器标签的格式。","workbench.editor.untitled.labelFormat.content":"无标题文件的名称派生自其第一行的内容，除非它有关联的文件路径。如果行为空或不包含单词字符，它将回退到名称。","workbench.editor.untitled.labelFormat.name":"无标题文件的名称不是从文件的内容派生的。","untitledLabelFormat":"控制无标题编辑器的标签格式。","editorTabCloseButton":"控制编辑器的选项卡关闭按钮的位置，或者在设置为“关”时禁用它们。当 \\"#workbench.editor.showTabs#\\" 为 \\"false\\" 时，将忽略此值。","workbench.editor.tabSizing.fit":"始终将标签页保持足够大，能够完全显示编辑器标签。","workbench.editor.tabSizing.shrink":"在不能同时显示所有选项卡时，允许选项卡缩小。","tabSizing":"控制编辑器选项卡的大小调整。当 \\"#workbench.editor.showTabs#\\" 设置为 \\"false\\" 时，将忽略此值。","workbench.editor.pinnedTabSizing.normal":"固定的选项卡会继承未固定的选项卡的外观。","workbench.editor.pinnedTabSizing.compact":"固定的选项卡将以紧凑形式显示，其中只包含图标或编辑器名称的第一个字母。","workbench.editor.pinnedTabSizing.shrink":"固定的选项卡缩小至紧凑的固定大小，显示编辑器名称的各部分。","pinnedTabSizing":"控制固定的编辑器选项卡的大小。固定的选项卡排在所有打开的选项卡的开头，并且在取消固定之前，通常不会关闭。当 \\"#workbench.editor.showTabs#\\" 为 \\"false\\" 时，将忽略此值。","workbench.editor.splitSizingDistribute":"将所有编辑器组拆分为相等的部分。","workbench.editor.splitSizingSplit":"将活动编辑器组拆分为相等的部分。","splitSizing":"拆分编辑器组时控制编辑器组大小。","splitOnDragAndDrop":"通过将编辑器或文件放到编辑器区域的边缘，控制是否可以由拖放操作拆分编辑器组。","focusRecentEditorAfterClose":"控制是否按最常使用的顺序或从左到右的顺序关闭选项卡。","showIcons":"控制是否在打开的编辑器中显示图标。这要求同时启用文件图标主题。","enablePreview":"控制打开的编辑器是否显示为预览。预览编辑器不会保持打开，在将其显式设置为保持打开(例如通过双击或编辑)前将会重用它，其字体样式为斜体。","enablePreviewFromQuickOpen":"控制通过 Quick Open 打开的编辑器是否显示为预览。预览编辑器不会保持打开，在将其显式设置为保持打开(例如通过双击或编辑)前将会重用它。","closeOnFileDelete":"当文件被其他进程删除或重命名时，控制是否自动关闭在这个期间内打开了此文件的编辑器。若禁用此项，在这种情况下将保留编辑器。请注意，若从应用内部进行删除，将始终关闭编辑器，并且为了保护您的数据，已更新文件始终不会关闭。","editorOpenPositioning":"控制编辑器打开的位置。选择 `left` 或 `right` 可分别在当前活动编辑器的左侧或右侧打开。选择 `first` (最前) 或 `last` (最后) 打开的位置与当前活动编辑器无关。","sideBySideDirection":"控制编辑器在并排打开时 (比如从资源管理器) 出现的默认位置。默认在当前活动编辑器右侧打开。若更改为 `down`，则在当前活动编辑器下方打开。","closeEmptyGroups":"控制编辑器组中最后一个选项卡关闭时这个空组的行为。若启用，将自动关闭空组。若禁用，空组仍将保留在网格布局中。","revealIfOpen":"控制是否在打开的任何可见组中显示编辑器。如果禁用，编辑器将优先在当前活动的编辑器组中打开。如果启用，将会显示在已打开的编辑器，而不是在当前活动的编辑器组中再次打开。请注意，有些情况下会忽略此设置，例如，强制编辑器在特定组中打开或当前活动组的一侧时。","mouseBackForwardToNavigate":"使用鼠标按钮 4 和鼠标按钮 5 (如果提供)在打开的文件之间导航。","restoreViewState":"在重新打开已关闭的文本编辑器时，还原最后一个视图的状态 (如滚动位置)。","centeredLayoutAutoResize":"如果在居中布局中打开了超过一组编辑器，控制是否自动将宽度调整为最大宽度值。当回到只打开了一组编辑器的状态，将自动将宽度调整为原始的居中宽度值。","limitEditorsEnablement":"控制是否应限制打开的编辑器的数量。启用后，不脏的最近较少使用的编辑器将关闭，以便为新打开的编辑器腾出空间。","limitEditorsMaximum":"控制打开编辑器的最大数量。使用 \\"#workbench.editor.limit.perEditorGroup#\\" 设置控制每个编辑器组或跨所有组的限制。","perEditorGroup":"控制最大打开的编辑器的限制是否应应用于每个编辑器组或所有编辑器组。","commandHistory":"控制命令面板中保留最近使用命令的数量。设置为 0 时禁用命令历史功能。","preserveInput":"当再次打开命令面板时，控制是否恢复上一次输入的内容。","closeOnFocusLost":"控制 Quick Open 是否在其失去焦点时自动关闭。","workbench.quickOpen.preserveInput":"在打开 Quick Open 视图时，控制是否自动恢复上一次输入的值。","openDefaultSettings":"控制在打开设置时是否同时打开显示所有默认设置的编辑器。","useSplitJSON":"控制在将设置编辑为 json 时是否使用拆分 json 编辑器。","openDefaultKeybindings":"控制在打开按键绑定设置时是否同时打开显示所有默认按键绑定的编辑器。","sideBarLocation":"控制侧边栏和活动栏的位置。它们可以显示在工作台的左侧或右侧。","panelDefaultLocation":"控制面板的默认位置(终端、调试控制台、输出、问题)。它可以显示在工作台的底部、右侧或左侧。","panelOpensMaximized":"控制面板是否以最大化方式打开。它可以始终以最大化方式打开、永不以最大化方式打开或以关闭前的最后一个状态打开。","workbench.panel.opensMaximized.always":"始终以最大化方式打开面板。","workbench.panel.opensMaximized.never":"永不以最大化方式打开面板。面板将以非最大化方式打开。","workbench.panel.opensMaximized.preserve":"以关闭面板前的状态打开面板。","statusBarVisibility":"控制工作台底部状态栏的可见性。","activityBarVisibility":"控制工作台中活动栏的可见性。","activityBarIconClickBehavior":"控制在工作台中单击活动栏图标时出现的行为。","workbench.activityBar.iconClickBehavior.toggle":"如果单击的项已可见，则隐藏边栏。","workbench.activityBar.iconClickBehavior.focus":"如果单击的项已可见，则将焦点放在边栏上。","viewVisibility":"控制是否显示视图头部的操作项。视图头部操作项可以一直，或是仅当聚焦到和悬停在视图上时显示。","fontAliasing":"控制在工作台中字体的渲染方式。","workbench.fontAliasing.default":"次像素平滑字体。将在大多数非 retina 显示器上显示最清晰的文字。","workbench.fontAliasing.antialiased":"进行像素而不是次像素级别的字体平滑。可能会导致字体整体显示得更细。","workbench.fontAliasing.none":"禁用字体平滑。将显示边缘粗糙、有锯齿的文字。","workbench.fontAliasing.auto":"根据显示器 DPI 自动应用 `default` 或 `antialiased` 选项。","settings.editor.ui":"使用设置 ui 编辑器。","settings.editor.json":"使用 json 文件编辑器。","settings.editor.desc":"配置默认使用的设置编辑器。","windowTitle":"根据活动编辑器控制窗口标题。变量是根据上下文替换的:","activeEditorShort":"\\"${activeEditorShort}\\": 文件名 (例如 myFile.txt)。","activeEditorMedium":"\\"${activeEditorMedium}\\": 相对于工作区文件夹的文件路径 (例如, myFolder/myFileFolder/myFile.txt)。","activeEditorLong":"\\"${activeEditorLong}\\": 文件的完整路径 (例如 /Users/Development/myFolder/myFileFolder/myFile.txt)。","activeFolderShort":"\\"${activeFolderShort}\\": 文件所在的文件夹名称 (例如, myFileFolder)。","activeFolderMedium":"\\"${activeFolderMedium}\\": 相对于工作区文件夹的、包含文件的文件夹的路径, (例如 myFolder/myFileFolder)。","activeFolderLong":"\\"${activeFolderLong}\\": 文件所在文件夹的完整路径 (例如 /Users/Development/myFolder/myFileFolder)。","folderName":"\\"${folderName}\\": 文件所在工作区文件夹的名称 (例如 myFolder)。","folderPath":"\\"${folderpath}\\": 文件所在工作区文件夹的路径 (例如 /Users/Development/myFolder)。","rootName":"\\"${rootName}\\": 工作区的名称 (例如, myFolder 或 myWorkspace)。","rootPath":"\\"${rootPath}\\": 工作区的文件路径 (例如 /Users/Development/myWorkspace)。","appName":"\\"${appName}\\": 例如 VS Code。","remoteName":"“${remoteName}”: 例如 SSH","dirty":"\\"${dirty}\\": 表示活动编辑器为脏的脏指示器。","separator":"\\"${separator}\\": 一种条件分隔符 (\\"-\\"), 仅在被包含值或静态文本的变量包围时显示。","windowConfigurationTitle":"窗口","window.titleSeparator":"\\"window.title\\" 使用的分隔符。","window.menuBarVisibility.default":"菜单仅在全屏模式下隐藏。","window.menuBarVisibility.visible":"菜单始终可见，即使处于全屏模式下。","window.menuBarVisibility.toggle":"菜单隐藏，但可以通过 Alt 键显示。","window.menuBarVisibility.hidden":"菜单始终隐藏。","window.menuBarVisibility.compact":"菜单在侧边栏中显示为一个紧凑的按钮。当 \\"#window.titleBarStyle#\\" 为 \\"native\\" 时，将忽略此值。","menuBarVisibility":"控制菜单栏的可见性。“切换”设置表示隐藏菜单栏，按一次 Alt 键则将显示此菜单栏。默认情况下，除非窗口为全屏，否则菜单栏可见。","enableMenuBarMnemonics":"控制是否可通过 Alt 键快捷键打开主菜单。如果禁用助记符，则可将这些 Alt 键快捷键绑定到编辑器命令。","customMenuBarAltFocus":"控制是否通过按 Alt 键聚焦菜单栏。此设置对使用 Alt 键切换菜单栏没有任何影响。","window.openFilesInNewWindow.on":"在新窗口中打开文件。","window.openFilesInNewWindow.off":"在文件所在文件夹的已有窗口中或在上一个活动窗口中打开文件。","window.openFilesInNewWindow.defaultMac":"在文件所在文件夹的已有窗口中或在上一个活动窗口中打开文件，除非其通过“程序坞”(Dock) 或“访达”(Finder) 打开。","window.openFilesInNewWindow.default":"在新窗口中打开文件，除非文件从应用程序内进行选取 (例如，通过“文件”菜单)。","openFilesInNewWindowMac":"控制是否应在新窗口中打开文件。\\r\\n请注意，此设置可能会被忽略(例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。","openFilesInNewWindow":"控制是否应在新窗口中打开文件。\\r\\n请注意，此设置可能会被忽略(例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。","window.openFoldersInNewWindow.on":"在新窗口中打开文件夹。","window.openFoldersInNewWindow.off":"文件夹将替换上一个活动窗口。","window.openFoldersInNewWindow.default":"在新窗口中打开文件夹，除非文件夹从应用程序内进行选取 (例如，通过“文件”菜单)。","openFoldersInNewWindow":"控制文件夹是应在新窗口中打开，还是应替换上次处于活动状态的窗口。\\r\\n请注意，此设置可能会被忽略(例如，在使用 `--new-window` 或 `--reuse-window` 命令行选项时)。","window.confirmBeforeClose.always":"始终尝试请求确认。请注意，浏览器仍可能在未经确认的情况下决定关闭标签页或窗口。","window.confirmBeforeClose.keyboardOnly":"仅在检测到键绑定时请求确认。请注意，在某些情况下可能无法进行检测。","window.confirmBeforeClose.never":"除非即将丢失数据，否则绝不明确询问确认。","confirmBeforeCloseWeb":"控制在关闭浏览器选项卡或窗口之前是否显示确认对话框。请注意，即使已启用，浏览器仍可能决定在不进行确认的情况下关闭选项卡或窗口，并且此设置仅作为提示，并非在所有情况下都起作用。","zenModeConfigurationTitle":"禅模式","zenMode.fullScreen":"控制在打开禅模式时是否将工作台切换到全屏。","zenMode.centerLayout":"控制在打开禅模式时是否启用居中布局。","zenMode.hideTabs":"控制在打开禅模式时是否隐藏工作台选项卡。","zenMode.hideStatusBar":"控制在打开禅模式时是否隐藏工作台底部的状态栏。","zenMode.hideActivityBar":"控制在打开禅模式时是否隐藏工作台左侧或右侧的活动栏。","zenMode.hideLineNumbers":"控制在打开禅模式时是否隐藏编辑器行号。","zenMode.restore":"若窗口在处于禅模式时退出，控制其在恢复时是否还原到禅模式。","zenMode.silentNotifications":"控制在禅宗模式下是否显示通知。如果为 true，则只会弹出错误通知。"},"vs/workbench/browser/actions/textInputActions":{"undo":"撤消","redo":"恢复","cut":"剪切","copy":"复制","paste":"粘贴","selectAll":"选择全部"},"vs/workbench/browser/actions/developerActions":{"inspect context keys":"检查上下文键值","toggle screencast mode":"切换屏幕模式","logStorage":"记录存储数据库内容","logWorkingCopies":"日志工作副本","screencastModeConfigurationTitle":"截屏模式","screencastMode.location.verticalPosition":"控制截屏模式叠加的垂直偏移,从底部作为工作台高度的百分比。","screencastMode.fontSize":"控制截屏模式键盘的字体大小(以像素为单位)。","screencastMode.onlyKeyboardShortcuts":"仅在截屏模式下显示键盘快捷方式。","screencastMode.keyboardOverlayTimeout":"控制截屏模式下键盘覆盖显示的时长(以毫秒为单位)。","screencastMode.mouseIndicatorColor":"控制截屏视频模式下鼠标指示器的十六进制(#RGB、#RGBA、#RRGGBB 或 #RRGGBBAA)的颜色。","screencastMode.mouseIndicatorSize":"控制截屏模式下鼠标光标的大小(以像素为单位)。"},"vs/workbench/browser/actions/helpActions":{"keybindingsReference":"键盘快捷方式参考","openDocumentationUrl":"文档","openIntroductoryVideosUrl":"入门视频","openTipsAndTricksUrl":"提示与技巧","newsletterSignup":"订阅 VS Code 新闻邮件","openTwitterUrl":"在 Twitter 上和我们互动","openUserVoiceUrl":"搜索功能请求","openLicenseUrl":"查看许可证","openPrivacyStatement":"隐私声明","miDocumentation":"文档(&&D)","miKeyboardShortcuts":"键盘快捷方式参考(&&K)","miIntroductoryVideos":"介绍性视频(&&V)","miTipsAndTricks":"贴士和技巧(&&C)","miTwitter":"Twitter 上和我们互动(&&J)","miUserVoice":"搜索功能请求(&&S)","miLicense":"查看许可证(&&V)","miPrivacyStatement":"隐私声明(&&Y)"},"vs/workbench/browser/actions/layoutActions":{"closeSidebar":"关闭侧栏","toggleActivityBar":"切换活动栏可见性","miShowActivityBar":"显示活动栏(&&A)","toggleCenteredLayout":"切换居中布局","miToggleCenteredLayout":"居中布局(&&C)","flipLayout":"切换垂直/水平编辑器布局","miToggleEditorLayout":"翻转布局(&&L)","toggleSidebarPosition":"切换边栏位置","moveSidebarRight":"将侧边栏移动到右侧","moveSidebarLeft":"将侧边栏移动到左侧","miMoveSidebarRight":"向右移动侧边栏(&&M)","miMoveSidebarLeft":"向左移动侧边栏(&&M)","toggleEditor":"切换编辑器区域可见性","miShowEditorArea":"显示编辑区域(&&E)","toggleSidebar":"切换侧边栏可见性","miAppearance":"外观(&&A)","miShowSidebar":"显示侧栏(&&S)","toggleStatusbar":"切换状态栏可见性","miShowStatusbar":"显示状态栏(&&T)","toggleTabs":"切换标签页可见性","toggleZenMode":"切换禅模式","miToggleZenMode":"禅模式","toggleMenuBar":"切换菜单栏","miShowMenuBar":"显示菜单栏(&&B)","resetViewLocations":"重置视图位置","moveView":"移动视图","sidebarContainer":"侧边栏/{0}","panelContainer":"面板/{0}","moveFocusedView.selectView":"选择要移动的视图","moveFocusedView":"移动焦点视图","moveFocusedView.error.noFocusedView":"当前没有重点视图。","moveFocusedView.error.nonMovableView":"当前焦点视图不可移动。","moveFocusedView.selectDestination":"选择视图的目标","moveFocusedView.title":"视图: 移动 {0}","moveFocusedView.newContainerInPanel":"新建面板条目","moveFocusedView.newContainerInSidebar":"新侧边栏条目","sidebar":"侧边栏","panel":"面板","resetFocusedViewLocation":"重置焦点视图位置","resetFocusedView.error.noFocusedView":"当前没有重点视图。","increaseViewSize":"增加当前视图大小","increaseEditorWidth":"增加编辑器宽度","increaseEditorHeight":"增加编辑器高度","decreaseViewSize":"减小当前视图大小","decreaseEditorWidth":"降低编辑器宽度","decreaseEditorHeight":"降低编辑器高度"},"vs/workbench/browser/actions/navigationActions":{"navigateLeft":"导航到左侧视图","navigateRight":"导航到右侧视图","navigateUp":"导航到上方视图","navigateDown":"导航到下方视图","focusNextPart":"专注下一部分","focusPreviousPart":"专注上一部分"},"vs/workbench/browser/actions/windowActions":{"remove":"从最近打开中删除","dirtyRecentlyOpened":"带有已更新的文件的工作区","workspaces":"工作区","files":"文件","openRecentPlaceholderMac":"选中以打开(按 Cmd 键强制打开新窗口，或按 Alt 键打开同一窗口)","openRecentPlaceholder":"选中以打开(按 Ctrl 键强制打开新窗口，或按 Alt 键打开同一窗口)","dirtyWorkspace":"带有已更新的文件的工作区","dirtyWorkspaceConfirm":"是否要打开工作区以查看已更新文件？","dirtyWorkspaceConfirmDetail":"在保存或还原所有已更新文件之前，无法删除具有已更新文件的工作区。","recentDirtyAriaLabel":"{0}，存在更新的工作区","openRecent":"打开最近的文件…","quickOpenRecent":"快速打开最近的文件…","toggleFullScreen":"切换全屏","reloadWindow":"重新加载窗口","about":"关于","newWindow":"新建窗口","blur":"从具有焦点的元素中删除键盘焦点","file":"文件","miConfirmClose":"关闭前确认","miNewWindow":"新建窗口(&&W)","miOpenRecent":"打开最近的文件(&&R)","miMore":"更多(&&M)...","miToggleFullScreen":"全屏(&&F)","miAbout":"关于(&&A)"},"vs/workbench/browser/actions/workspaceActions":{"openFile":"打开文件...","openFolder":"打开文件夹...","openFileFolder":"打开...","openWorkspaceAction":"打开工作区...","closeWorkspace":"关闭工作区","noWorkspaceOpened":"此实例当前没有打开工作区，无法关闭。","openWorkspaceConfigFile":"打开工作区配置文件","globalRemoveFolderFromWorkspace":"将文件夹从工作区删除…","saveWorkspaceAsAction":"将工作区另存为...","duplicateWorkspaceInNewWindow":"复制此工作区并在新窗口打开","workspaces":"工作区","miAddFolderToWorkspace":"将文件夹添加到工作区(&&D)...","miSaveWorkspaceAs":"将工作区另存为...","miCloseFolder":"关闭文件夹(&&F)","miCloseWorkspace":"关闭工作区(&&W)"},"vs/workbench/browser/actions/workspaceCommands":{"addFolderToWorkspace":"将文件夹添加到工作区...","add":"添加(&&A)","addFolderToWorkspaceTitle":"将文件夹添加到工作区","workspaceFolderPickerPlaceholder":"选择工作区文件夹"},"vs/workbench/browser/actions/quickAccessActions":{"quickOpen":"转到文件...","quickNavigateNext":"在 Quick Open 中导航到下一个","quickNavigatePrevious":"在 Quick Open 中导航到上一个","quickSelectNext":"在 Quick Open 中选择“下一步”","quickSelectPrevious":"在 Quick Open 中选择“上一步”"},"vs/workbench/api/common/menusExtensionPoint":{"menus.commandPalette":"命令面板","menus.touchBar":"触控栏 (仅 macOS)","menus.editorTitle":"编辑器标题菜单","menus.editorContext":"编辑器上下文菜单","menus.explorerContext":"文件资源管理器上下文菜单","menus.editorTabContext":"编辑器选项卡上下文菜单","menus.debugCallstackContext":"调试调用堆栈视图上下文菜单","menus.debugVariablesContext":"调试变量视图上下文菜单","menus.debugToolBar":"调试工具栏菜单","menus.file":"顶级文件菜单","menus.home":"主指示器上下文菜单(仅限 Web)","menus.scmTitle":"源代码管理标题菜单","menus.scmSourceControl":"源代码管理菜单","menus.resourceGroupContext":"源代码管理资源组上下文菜单","menus.resourceStateContext":"源代码管理资源状态上下文菜单","menus.resourceFolderContext":"源代码管理资源文件夹上下文菜单","menus.changeTitle":"源代码管理内联更改菜单","menus.statusBarWindowIndicator":"状态栏中的窗口指示器菜单","view.viewTitle":"提供的视图的标题菜单","view.itemContext":"提供的视图中的项目的上下文菜单","commentThread.title":"贡献的注释线程标题菜单","commentThread.actions":"贡献的注释线程上下文菜单，呈现为注释编辑器下方的按钮","comment.title":"贡献的注释标题菜单","comment.actions":"贡献的注释上下文菜单，呈现为注释编辑器下方的按钮","notebook.cell.title":"贡献的笔记本单元格标题菜单","menus.extensionContext":"扩展上下文菜单","view.timelineTitle":"时间线视图标题菜单","view.timelineContext":"时间线视图项上下文菜单","requirestring":"属性 \\"{0}\\" 是必需项并且必须为 \\"string\\" 类型","optstring":"属性 \\"{0}\\" 可以省略，或者必须为 \\"string\\" 类型","requirearray":"子菜单项必须是数组","require":"子菜单项必须是对象","vscode.extension.contributes.menuItem.command":"要执行的命令的标识符。该命令必须在“命令”部分中声明","vscode.extension.contributes.menuItem.alt":"要执行的替代命令的标识符。该命令必须在 ”commands\\" 部分中声明","vscode.extension.contributes.menuItem.when":"此条件必须为 true 才能显示此项","vscode.extension.contributes.menuItem.group":"此项所属的组","vscode.extension.contributes.menuItem.submenu":"要在此项中显示的子菜单的标识符。","vscode.extension.contributes.submenu.id":"要显示为子菜单的菜单的标识符。","vscode.extension.contributes.submenu.label":"指向此子菜单的菜单项的标签。","vscode.extension.contributes.submenu.icon":"(可选)用于表示 UI 中的子菜单的图标。文件路径、具有深色和浅色主题的文件路径的对象，或者主题图标引用(如 \\"\\\\$(zap)\\")","vscode.extension.contributes.submenu.icon.light":"使用浅色主题时的图标路径","vscode.extension.contributes.submenu.icon.dark":"使用深色主题时的图标路径","vscode.extension.contributes.menus":"向编辑器提供菜单项","proposed":"建议的 API","vscode.extension.contributes.submenus":"将子菜单项分配到编辑器","nonempty":"应为非空值。","opticon":"可以省略属性 \\"icon\\"，若不省略则必须是字符串或文字，例如 \\"{dark, light}\\"","requireStringOrObject":"属性“{0}”是必要属性，其类型必须是 \\"string\\" 或 \\"object\\"","requirestrings":"属性“{0}”和“{1}”是必要属性，其类型必须是 \\"string\\"","vscode.extension.contributes.commandType.command":"要执行的命令的标识符","vscode.extension.contributes.commandType.title":"在 UI 中依据其表示命令的标题","vscode.extension.contributes.commandType.category":"(可选) 类别字符串，命令在界面中根据此项分组","vscode.extension.contributes.commandType.precondition":"(可选)必须为 true 才能启用 UI (菜单和键绑定)中命令的条件。不会阻止通过其他方式执行命令，例如 `executeCommand`-api。","vscode.extension.contributes.commandType.icon":"(可选)用于表示 UI 中的命令的图标。文件路径、具有深色和浅色主题的文件路径的对象，或者主题图标引用(如 \\"\\\\$(zap)\\")","vscode.extension.contributes.commandType.icon.light":"使用浅色主题时的图标路径","vscode.extension.contributes.commandType.icon.dark":"使用深色主题时的图标路径","vscode.extension.contributes.commands":"对命令面板提供命令。","dup":"命令“{0}”在 \\"commands\\" 部分重复出现。","submenuId.invalid.id":"“{0}”不是有效的子菜单标识符","submenuId.duplicate.id":"以前已注册 `{0}` 子菜单。","submenuId.invalid.label":"“{0}”不是有效的子菜单标签","menuId.invalid":"“{0}”为无效菜单标识符","proposedAPI.invalid":"{0} 是建议的菜单标识符, 仅在开发用完或使用以下命令行开关时可用:--enable-proposed-api {1}","missing.command":"菜单项引用未在“命令”部分进行定义的命令“{0}”。","missing.altCommand":"菜单项引用了未在 \\"commands\\" 部分定义的替代命令“{0}”。","dupe.command":"菜单项引用的命令中默认和替代命令相同","unsupported.submenureference":"菜单项引用了不具有子菜单支持的菜单的子菜单。","missing.submenu":"菜单项引用了未在“子菜单”部分定义的子菜单“{0}”。","submenuItem.duplicate":"`{0}` 子菜单已提供给 `{1}` 菜单。"},"vs/workbench/api/common/configurationExtensionPoint":{"vscode.extension.contributes.configuration.title":"设置摘要。此标签将在设置文件中用作分隔注释。","vscode.extension.contributes.configuration.properties":"配置属性的描述。","vscode.extension.contributes.configuration.property.empty":"属性不应为空。","scope.application.description":"只能在用户设置中进行配置的配置。","scope.machine.description":"只能在用户设置或远程设置中配置的配置。","scope.window.description":"可在用户、远程或工作区设置中对其进行配置的配置。","scope.resource.description":"可在用户、远程、工作区或文件夹设置中对其进行配置的配置。","scope.language-overridable.description":"可在语言特定设置中配置的资源配置。","scope.machine-overridable.description":"也可在工作区或文件夹设置中配置的计算机配置。","scope.description":"配置适用的作用域。可用作用域包括\\"application\\"、\\"machine\\"、\\"window\\"、\\"resource\\"和\\"machine-overridable\\"。","scope.enumDescriptions":"枚举值的说明","scope.markdownEnumDescriptions":"Markdown 格式的枚举值说明。","scope.markdownDescription":"Markdown 格式的说明。","scope.deprecationMessage":"设置后，该属性将被标记为已弃用，并将给定的消息显示为解释。","scope.markdownDeprecationMessage":"设置后，该属性将被标记为已弃用，并按 Markdown 格式显示给定的消息作为解释。","vscode.extension.contributes.defaultConfiguration":"按语言提供默认编辑器配置设置。","config.property.defaultConfiguration.languageExpected":"所需的语言选择器(例如 [\\"java\\"])","config.property.defaultConfiguration.warning":"无法注册“{0}”的配置默认值。仅支持特定于语言的设置的默认值。","vscode.extension.contributes.configuration":"用于配置字符串。","invalid.title":"configuration.title 必须是字符串","invalid.properties":"configuration.properties 必须是对象","invalid.property":"\\"configuration.property\\" 必须是对象","invalid.allOf":"\\"configuration.allOf\\" 已被弃用且不应被使用。你可以将多个配置单元作为数组传递给 \\"configuration\\" 参与点。","workspaceConfig.folders.description":"将载入到工作区的文件夹列表。","workspaceConfig.path.description":"文件路径。例如 \\"/root/folderA\\" 或 \\"./folderA\\"。后者表示根据工作区文件位置进行解析的相对路径。","workspaceConfig.name.description":"文件夹的可选名称。","workspaceConfig.uri.description":"文件夹的 URI","workspaceConfig.settings.description":"工作区设置","workspaceConfig.launch.description":"工作区启动配置","workspaceConfig.tasks.description":"工作区任务配置","workspaceConfig.extensions.description":"工作区扩展","workspaceConfig.remoteAuthority":"工作区所在的远程服务器。仅供未保存的远程工作区使用。","unknownWorkspaceProperty":"未知的工作区配置属性"},"vs/workbench/api/browser/viewsExtensionPoint":{"vscode.extension.contributes.views.containers.id":"用于标识容器的唯一 ID，视图能在容器内通过 \\"view\\" 参与点提供。","vscode.extension.contributes.views.containers.title":"人类可读的用于表示此容器的字符串","vscode.extension.contributes.views.containers.icon":"容器图标的路径。图标大小为 24x24，并居中放置在 50x40 的区域内，其填充颜色为 \\"rgb(215, 218, 224)\\" 或 \\"#d7dae0\\"。所有图片格式均可用，推荐使用 SVG 格式。","vscode.extension.contributes.viewsContainers":"向编辑器提供视图容器","views.container.activitybar":"向活动栏提供视图容器","views.container.panel":"向面板提供视图容器","vscode.extension.contributes.view.type":"视图的类型。对于基于树状视图的视图，这可以是 \\"tree\\"，对于基于 Web 视图的视图，这可以是 \\"webview\\"。默认值为 \\"tree\\"。","vscode.extension.contributes.view.tree":"该视图由 \\"createTreeView\\" 创建的 \\"TreeView\\" 提供支持。","vscode.extension.contributes.view.webview":"该视图由 \\"registerWebviewViewProvider\\" 注册的 \\"WebviewView\\" 提供支持。","vscode.extension.contributes.view.id":"视图的标识符。这在所有视图中都应是唯一的。建议将扩展 ID 包含在视图 ID 中。使用此选项通过 \\"vscode.window.registerTreeDataProviderForView\\" API 注册数据提供程序。也可通过将 \\"onView:${id}\\" 事件注册为 \\"activationEvents\\" 来触发激活扩展。","vscode.extension.contributes.view.name":"用户可读的视图名称。将显示它","vscode.extension.contributes.view.when":"为真时才显示此视图的条件","vscode.extension.contributes.view.icon":"视图图标的路径。无法显示视图名称时，将显示视图图标。可以接受任何图像文件类型，但建议图标采用 SVG 格式。","vscode.extension.contributes.view.contextualTitle":"当视图移出其原始位置时的用户可读上下文。默认情况下，将使用视图的容器名称。将显示此内容","vscode.extension.contributes.view.initialState":"首次安装扩展时视图的初始状态。用户一旦通过折叠、移动或隐藏视图更改视图状态，就不再使用初始状态。","vscode.extension.contributes.view.initialState.visible":"视图的默认初始状态。但在大多数容器中，视图将展开，但某些内置容器(资源管理器、scm 和调试)显示所有已折叠的参与视图，无论“可见性”如何，都是如此。","vscode.extension.contributes.view.initialState.hidden":"视图不会显示在视图容器中，但可通过视图菜单和其他视图入口点发现，而且用户可取消隐藏视图。","vscode.extension.contributes.view.initialState.collapsed":"视图将在视图容器中折叠显示。","vscode.extension.contributes.view.group":"视图中的嵌套组","vscode.extension.contributes.view.remoteName":"与此视图关联的远程类型的名称","vscode.extension.contributes.views":"向编辑器提供视图","views.explorer":"向活动栏中的“资源管理器”容器提供视图","views.debug":"向活动栏中的“调试”容器提供视图","views.scm":"向活动栏中的“源代码管理”容器提供视图","views.test":"向活动栏中的“测试”容器提供视图","views.remote":"在活动栏中为远程容器提供视图。要为此容器提供帮助，需要启用enableProposedApi。","views.contributed":"向“提供的视图”容器提供视图","test":"测试","viewcontainer requirearray":"视图容器必须为数组","requireidstring":"属性“{0}”是必要属性，其类型必须是 \\"string\\"。仅支持字母、数字、\\"_\\" 和 \\"-\\"。","requirestring":"属性 \\"{0}\\" 是必需项并且必须为 \\"string\\" 类型","showViewlet":"显示 {0}","ViewContainerRequiresProposedAPI":"查看容器\\"{0}\\"需要启用\\"enableProposedApi\\"以添加到\\"Remote\\"。","ViewContainerDoesnotExist":"视图容器“{0}”不存在。所有注册到其中的视图将被添加到“资源管理器”中。","duplicateView1":"无法注册具有相同 ID“{0}”的多个视图","duplicateView2":"已注册 ID 为“{0}”的视图。","unknownViewType":"未知视图类型“{0}”。","requirearray":"视图必须是一个数组","optstring":"属性 \\"{0}\\" 可以省略，或者必须为 \\"string\\" 类型","optenum":"属性“{0}”可被省略或必须是 {1} 之一"},"vs/workbench/browser/parts/activitybar/activitybarPart":{"settingsViewBarIcon":"视图栏中的“设置”图标。","accountsViewBarIcon":"视图栏中的“帐户”图标。","hideHomeBar":"隐藏主页按钮","showHomeBar":"显示主页按钮","hideMenu":"隐藏菜单","showMenu":"显示菜单","hideAccounts":"隐藏帐户","showAccounts":"显示帐户","hideActivitBar":"隐藏活动栏","resetLocation":"重置位置","homeIndicator":"主页","home":"主页","manage":"管理","accounts":"帐户","focusActivityBar":"将焦点放在活动栏上"},"vs/workbench/browser/parts/panel/panelPart":{"hidePanel":"\\"隐藏\\" 面板","panel.emptyMessage":"将视图拖动到要显示的面板中。"},"vs/workbench/browser/parts/sidebar/sidebarPart":{"focusSideBar":"聚焦到侧边栏"},"vs/workbench/browser/parts/statusbar/statusbarPart":{"hide":"隐藏“{0}”","hideStatusBar":"隐藏状态栏"},"vs/workbench/browser/parts/views/viewsService":{"focus view":"焦点在 {0} 视图上","resetViewLocation":"重置位置"},"vs/workbench/browser/parts/dialogs/dialogHandler":{"yesButton":"是(&&Y)","cancelButton":"取消","aboutDetail":"版本: {0}\\r\\n提交: {1}\\r\\n日期: {2}\\r\\n浏览器: {3}","copy":"复制","ok":"确定"},"vs/workbench/electron-sandbox/parts/dialogs/dialogHandler":{"yesButton":"是(&&Y)","cancelButton":"取消","aboutDetail":"版本: {0}\\r\\n提交: {1}\\r\\n日期: {2}\\r\\nElectron: {3}\\r\\nChrome: {4}\\r\\nNode.js: {5}\\r\\nV8: {6}\\r\\nOS: {7}","okButton":"确定","copy":"复制(&&C)"},"vs/workbench/electron-sandbox/actions/developerActions":{"toggleDevTools":"切换开发人员工具","configureRuntimeArguments":"配置运行时参数"},"vs/workbench/electron-sandbox/actions/windowActions":{"closeWindow":"关闭窗口","zoomIn":"放大","zoomOut":"缩小","zoomReset":"重置缩放","reloadWindowWithExtensionsDisabled":"在禁用扩展的情况下重新加载","close":"关闭窗口","switchWindowPlaceHolder":"选择切换的窗口","windowDirtyAriaLabel":"{0}，存在更新的窗口","current":"当前窗口","switchWindow":"切换窗口...","quickSwitchWindow":"快速切换窗口..."},"vs/workbench/browser/parts/notifications/notificationsCenter":{"notificationsEmpty":"无新通知","notifications":"通知","notificationsToolbar":"通知中心操作"},"vs/workbench/browser/parts/notifications/notificationsAlerts":{"alertErrorMessage":"错误: {0}","alertWarningMessage":"警告: {0}","alertInfoMessage":"信息: {0}"},"vs/workbench/browser/parts/notifications/notificationsStatus":{"status.notifications":"通知","hideNotifications":"隐藏通知","zeroNotifications":"没有通知","noNotifications":"无新通知","oneNotification":"1 条新通知","notifications":"{0} 条新通知","noNotificationsWithProgress":"无新通知({0} 正在进行中)","oneNotificationWithProgress":"1 条新通知({0} 条正在进行中)","notificationsWithProgress":"{0} 条新通知({1} 个正在进行中)","status.message":"状态消息"},"vs/workbench/browser/parts/notifications/notificationsCommands":{"notifications":"通知","showNotifications":"显示通知","hideNotifications":"隐藏通知","clearAllNotifications":"清除所有通知","focusNotificationToasts":"将焦点放在通知横幅上"},"vs/workbench/browser/parts/titlebar/menubarControl":{"mFile":"文件(&&F)","mEdit":"编辑(&&E)","mSelection":"选择(&&S)","mView":"查看(&&V)","mGoto":"转到(&&G)","mRun":"运行(&&R)","mTerminal":"终端(&&T)","mHelp":"帮助(&&H)","menubar.customTitlebarAccessibilityNotification":"为您启用了辅助功能支持。对于最易于访问的体验, 我们建议使用自定义标题栏样式。","goToSetting":"打开设置","focusMenu":"聚焦应用程序菜单","checkForUpdates":"检查更新(&&U)...","checkingForUpdates":"正在检查更新...","download now":"下载更新(&&O)","DownloadingUpdate":"正在下载更新...","installUpdate...":"安装更新(&&U)...","installingUpdate":"正在安装更新...","restartToUpdate":"重新启动以更新(&&U)"},"vs/workbench/api/common/extHostExtensionActivator":{"failedDep1":"无法激活扩展“{0}”，因为它依赖于未能激活的扩展“{1}”。","activationError":"激活扩展“{0}”失败: {1}。"},"vs/workbench/api/common/extHost.api.impl":{"extensionLabel":"{0} (扩展)"},"vs/workbench/api/node/extHostDebugService":{"debug.terminal.title":"调试对象"},"vs/workbench/api/common/jsonValidationExtensionPoint":{"contributes.jsonValidation":"用于 json 架构配置。","contributes.jsonValidation.fileMatch":"要匹配的文件模式(或模式数组)，例如\\"package.json\\"或\\"*. launch\\"。排除模式以\\"!\\"开头","contributes.jsonValidation.url":"到扩展文件夹(\'./\')的架构 URL (\\"http:\\"、\\"https:\\")或相对路径。","invalid.jsonValidation":"configuration.jsonValidation 必须是数组","invalid.fileMatch":"\\"configuration.jsonValidation.fileMatch\\"必须定义为字符串或字符串数组。","invalid.url":"configuration.jsonValidation.url 必须是 URL 或相对路径","invalid.path.1":"\\"contributes.{0}.url\\" ({1})应包含在扩展的文件夹({2})内。这可能会使扩展不可移植。","invalid.url.fileschema":"configuration.jsonValidation.url 是无效的相对 URL: {0}","invalid.url.schema":"\\"configuration.jsonValidation.url\\" 必须是绝对 URL 或者以 \\"./\\" 开头，以引用扩展中的架构。"},"vs/workbench/api/browser/mainThreadExtensionService":{"reload window":"无法激活 \\"{0}\\" 扩展, 因为它依赖于未加载的 \\"{1}\\" 扩展。是否要重新加载窗口以加载扩展名？","reload":"重新加载窗口","disabledDep":"无法激活 \\"{0}\\" 扩展, 因为它依赖于 \\"{1}\\" 扩展, 该扩展已禁用。是否要启用扩展并重新加载窗口？","enable dep":"启用和重新加载","uninstalledDep":"无法激活 \\"{0}\\" 扩展, 因为它依赖于未安装的 \\"{1}\\" 扩展。是否要安装扩展并重新加载窗口？","install missing dep":"安装并重新加载","unknownDep":"无法激活 \\"{0}\\" 扩展, 因为它依赖于未知的 \\"{1}\\" 扩展。"},"vs/workbench/api/browser/mainThreadFileSystemEventService":{"files.participants.timeout":"超时(以毫秒为单位)后，将取消创建、重命名和删除的文件参与者。使用\\"0\\"禁用参与者。"},"vs/workbench/api/browser/mainThreadMessageService":{"extensionSource":"{0} (扩展)","defaultSource":"扩展","manageExtension":"管理扩展","cancel":"取消","ok":"确定"},"vs/workbench/api/browser/mainThreadProgress":{"manageExtension":"管理扩展"},"vs/workbench/api/browser/mainThreadSaveParticipant":{"timeout.onWillSave":"在 1750ms 后终止了 onWillSaveTextDocument 事件"},"vs/workbench/api/browser/mainThreadWorkspace":{"folderStatusMessageAddSingleFolder":"扩展“{0}”添加了 1 个文件夹到工作区","folderStatusMessageAddMultipleFolders":"扩展“{0}”添加了 {1} 个文件夹到工作区","folderStatusMessageRemoveSingleFolder":"扩展“{0}”从工作区删除了 1 个文件夹","folderStatusMessageRemoveMultipleFolders":"扩展“{0}”从工作区删除了 {1} 个文件夹","folderStatusChangeFolder":"扩展“{0}”更改了工作区中的文件夹"},"vs/workbench/api/browser/mainThreadComments":{"commentsViewIcon":"查看备注视图的图标。"},"vs/workbench/api/browser/mainThreadTask":{"task.label":"{0}: {1}"},"vs/workbench/api/browser/mainThreadAuthentication":{"noTrustedExtensions":"尚无任何扩展使用此帐户。","accountLastUsedDate":"上次使用此帐户的时间: {0}","notUsed":"未使用此帐户","manageTrustedExtensions":"管理受信任的扩展","manageExensions":"选择可以访问此帐户的扩展","signOutConfirm":"注销 {0}","signOutMessagve":"帐户 {0} 已由以下功能使用: \\r\\n\\r\\n{1}\\r\\n\\r\\n 是否注销这些功能?","signOutMessageSimple":"注销 {0}?","signedOut":"已成功注销。","useOtherAccount":"登录到其他帐户","selectAccount":"扩展“{0}”要访问 {1} 帐户","getSessionPlateholder":"选择一个供“{0}”使用的帐户或按 Esc 取消","confirmAuthenticationAccess":"扩展“{0}”正在尝试访问 {1} 帐户“{2}”的身份验证信息。","allow":"允许","cancel":"取消","confirmLogin":"扩展\\"{0}\\"希望使用{1}登录。"},"vs/workbench/common/configuration":{"workbenchConfigurationTitle":"工作台"},"vs/workbench/browser/parts/views/treeView":{"no-dataprovider":"没有可提供视图数据的已注册数据提供程序。","refresh":"刷新","collapseAll":"全部折叠","command-error":"运行命令 {1} 错误: {0}。这可能是由提交 {1} 的扩展引起的。"},"vs/workbench/browser/viewlet":{"compositePart.hideSideBarLabel":"隐藏侧边栏","views":"视图","collapse":"全部折叠"},"vs/workbench/browser/parts/views/viewPaneContainer":{"viewPaneContainerExpandedIcon":"已展开的视图窗格容器的图标。","viewPaneContainerCollapsedIcon":"已折叠的视图窗格容器的图标。","viewToolbarAriaLabel":"{0}操作","hideView":"隐藏","viewMoveUp":"向上移动视图","viewMoveLeft":"向左移动视图","viewMoveDown":"向下移动视图","viewMoveRight":"向右移动视图"},"vs/workbench/browser/parts/editor/editorGroupView":{"ariaLabelGroupActions":"编辑器组操作","closeGroupAction":"关闭","emptyEditorGroup":"{0} (空)","groupLabel":"第 {0} 组","groupAriaLabel":"编辑器组{0}","ok":"确定","cancel":"取消","editorOpenErrorDialog":"无法打开\\"{0}\\"","editorOpenError":"无法打开“{0}”: {1}。"},"vs/workbench/browser/parts/editor/editorDropTarget":{"fileTooLarge":"文件太大，无法以无标题的编辑器形式打开。请先将其上传到文件资源管理器，然后重试。"},"vs/workbench/browser/parts/editor/editor.contribution":{"textEditor":"文本编辑器","textDiffEditor":"文本差异编辑器","binaryDiffEditor":"二进制差异编辑器","sideBySideEditor":"并排编辑器","editorQuickAccessPlaceholder":"键入要打开的编辑器名称。","activeGroupEditorsByMostRecentlyUsedQuickAccess":"按最近使用显示活动组中的编辑器","allEditorsByAppearanceQuickAccess":"按外观显示所有打开的编辑器","allEditorsByMostRecentlyUsedQuickAccess":"按最近使用显示所有打开的编辑器","file":"文件","splitUp":"向上拆分","splitDown":"向下拆分","splitLeft":"向左拆分","splitRight":"向右拆分","close":"关闭","closeOthers":"关闭其他","closeRight":"关闭到右侧","closeAllSaved":"关闭已保存","closeAll":"全部关闭","keepOpen":"保持打开状态","pin":"固定","unpin":"取消固定","toggleInlineView":"切换内联视图","showOpenedEditors":"显示打开的编辑器","toggleKeepEditors":"使编辑器保持打开","splitEditorRight":"向右拆分编辑器","splitEditorDown":"向下拆分编辑器","previousChangeIcon":"差异编辑器中上一个更改操作的图标","nextChangeIcon":"差异编辑器中下一个更改操作的图标","toggleWhitespace":"差异编辑器中“切换空白”操作的图标","navigate.prev.label":"上一个更改","navigate.next.label":"下一个更改","ignoreTrimWhitespace.label":"忽略前导/尾随空格差异","showTrimWhitespace.label":"显示前导/尾随空格差异","keepEditor":"保留编辑器","pinEditor":"固定编辑器","unpinEditor":"取消固定编辑器","closeEditor":"关闭编辑器","closePinnedEditor":"关闭固定的编辑器","closeEditorsInGroup":"关闭组中的所有编辑器","closeSavedEditors":"关闭组中已保存的编辑器","closeOtherEditors":"关闭组中其他编辑器","closeRightEditors":"关闭组中右侧编辑器","closeEditorGroup":"关闭编辑器组","miReopenClosedEditor":"重新打开已关闭的编辑器(&&R)","miClearRecentOpen":"清除最近打开记录(&&C)","miEditorLayout":"编辑器布局(&&L)","miSplitEditorUp":"向上拆分(&&U)","miSplitEditorDown":"向下拆分(&&D)","miSplitEditorLeft":"向左拆分(&&L)","miSplitEditorRight":"向右拆分(&&R)","miSingleColumnEditorLayout":"单列(&&S)","miTwoColumnsEditorLayout":"双列(&&T)","miThreeColumnsEditorLayout":"三列(&&H)","miTwoRowsEditorLayout":"双行(&&W)","miThreeRowsEditorLayout":"三行(&&R)","miTwoByTwoGridEditorLayout":"2x2 网格(&&G)","miTwoRowsRightEditorLayout":"右侧双行(&&O)","miTwoColumnsBottomEditorLayout":"底部双列(&&C)","miBack":"返回(&&B)","miForward":"前进(&&F)","miLastEditLocation":"上次编辑位置(&&L)","miNextEditor":"下一个编辑器(&&N)","miPreviousEditor":"上一个编辑器(&&P)","miNextRecentlyUsedEditor":"下一个使用过的编辑器(&&N)","miPreviousRecentlyUsedEditor":"上一个使用过的编辑器(&&P)","miNextEditorInGroup":"组中的下一个编辑器(&&N)","miPreviousEditorInGroup":"组中的上一个编辑器(&&P)","miNextUsedEditorInGroup":"组中下一个使用过的编辑器(&&N)","miPreviousUsedEditorInGroup":"组中上一个使用过的编辑器(&&P)","miSwitchEditor":"切换编辑器(&&E)","miFocusFirstGroup":"第 1 组(&&1)","miFocusSecondGroup":"第 2 组(&&2)","miFocusThirdGroup":"第 3 组(&&3)","miFocusFourthGroup":"第 4 组(&&4)","miFocusFifthGroup":"第 5 组(&&5)","miNextGroup":"下一个组(&&N)","miPreviousGroup":"上一个组(&&P)","miFocusLeftGroup":"左侧组(&&L)","miFocusRightGroup":"右侧组(&&R)","miFocusAboveGroup":"上方组(&&A)","miFocusBelowGroup":"下方组(&&B)","miSwitchGroup":"切换组(&&G)"},"vs/workbench/browser/parts/activitybar/activitybarActions":{"goHome":"转到主页","hide":"隐藏","manageTrustedExtensions":"管理受信任的扩展","signOut":"注销","authProviderUnavailable":"{0} 当前不可用","previousSideBarView":"前侧栏视图","nextSideBarView":"侧边条形图"},"vs/workbench/browser/parts/compositeBar":{"activityBarAriaLabel":"活动视图切换器"},"vs/workbench/browser/parts/compositeBarActions":{"badgeTitle":"{0} - {1}","additionalViews":"其他视图","numberBadge":"{0} ({1})","manageExtension":"管理扩展","titleKeybinding":"{0} ({1})","hide":"隐藏","keep":"保留","toggle":"切换已固定的视图"},"vs/workbench/browser/parts/compositePart":{"ariaCompositeToolbarLabel":"{0}操作","viewsAndMoreActions":"视图和更多操作…","titleTooltip":"{0} ({1})"},"vs/workbench/browser/parts/panel/panelActions":{"maximizeIcon":"用于最大化面板的图标。","restoreIcon":"用于还原面板的图标。","closeIcon":"用于关闭面板的图标。","closePanel":"关闭面板","togglePanel":"切换面板","focusPanel":"聚焦到面板中","toggleMaximizedPanel":"切换最大化面板","maximizePanel":"最大化面板大小","minimizePanel":"恢复面板大小","positionPanelLeft":"将面板移至左侧","positionPanelRight":"将面板移至右侧","positionPanelBottom":"将面板移至底部","previousPanelView":"上一个面板视图","nextPanelView":"下一个面板视图","miShowPanel":"显示面板(&&P)"},"vs/workbench/common/editor/diffEditorInput":{"sideBySideLabels":"{0} ↔ {1}"},"vs/workbench/browser/parts/editor/editorWidgets":{"openWorkspace":"打开工作区"},"vs/workbench/browser/parts/editor/editorCommands":{"editorCommand.activeEditorMove.description":"按标签或按组移动活动编辑器","editorCommand.activeEditorMove.arg.name":"活动编辑器移动参数","editorCommand.activeEditorMove.arg.description":"参数属性:\\r\\n\\t* \\"to\\": 表示移动目的地的字符串值。\\r\\n\\t* \\"by\\": 表示移动单位的字符串值(按选项卡或按组)。\\r\\n\\t* \\"value\\": 表示移动的位置数或移动的绝对位置的数值。","toggleInlineView":"切换内联视图","compare":"比较","enablePreview":"已在设置中启用预览编辑器。","disablePreview":"已在设置中禁用预览编辑器。","learnMode":"了解详细信息"},"vs/workbench/browser/parts/editor/textResourceEditor":{"textEditor":"文本编辑器"},"vs/workbench/browser/parts/titlebar/titlebarPart":{"patchedWindowTitle":"[不受支持]","userIsAdmin":"[管理员]","userIsSudo":"[超级用户]","devExtensionWindowTitlePrefix":"[扩展开发宿主]"},"vs/workbench/browser/parts/notifications/notificationsList":{"notificationAriaLabel":"{0}，通知","notificationWithSourceAriaLabel":"{0}，源: {1}，通知","notificationsList":"通知列表"},"vs/workbench/browser/parts/notifications/notificationsActions":{"clearIcon":"通知中“清除”操作的图标。","clearAllIcon":"通知中“全部清除”操作的图标。","hideIcon":"通知中“隐藏”操作的图标。","expandIcon":"通知中“展开”操作的图标。","collapseIcon":"通知中“折叠”操作的图标。","configureIcon":"通知中“配置”操作的图标。","clearNotification":"清除通知","clearNotifications":"清除所有通知","hideNotificationsCenter":"隐藏通知","expandNotification":"展开通知","collapseNotification":"折叠通知","configureNotification":"配置通知","copyNotification":"复制文本"},"vs/workbench/api/common/extHostDiagnostics":{"limitHit":"未显示 {0} 个进一步的错误和警告。"},"vs/workbench/api/common/extHostProgress":{"extensionSource":"{0} (扩展)"},"vs/workbench/api/common/extHostStatusBar":{"status.extensionMessage":"扩展状态"},"vs/workbench/api/common/extHostTreeViews":{"treeView.notRegistered":"未注册 ID 为 \\"{0}\\" 的树状视图。","treeView.duplicateElement":"ID 为 {0} 的元素已被注册"},"vs/workbench/browser/parts/editor/textEditor":{"editor":"编辑器"},"vs/workbench/api/browser/mainThreadCustomEditors":{"defaultEditLabel":"编辑"},"vs/workbench/api/browser/mainThreadWebviews":{"errorMessage":"还原视图时出错: {0}"},"vs/workbench/browser/parts/editor/tabsTitleControl":{"ariaLabelTabActions":"选项卡操作"},"vs/workbench/browser/parts/editor/textDiffEditor":{"textDiffEditor":"文本差异编辑器"},"vs/workbench/browser/parts/editor/binaryDiffEditor":{"metadataDiff":"{0} ↔ {1}"},"vs/workbench/browser/parts/editor/editorStatus":{"singleSelectionRange":"行 {0}，列 {1} (已选择{2})","singleSelection":"行 {0}，列 {1}","multiSelectionRange":"{0} 选择(已选择 {1} 个字符)","multiSelection":"{0} 选择","endOfLineLineFeed":"LF","endOfLineCarriageReturnLineFeed":"CRLF","screenReaderDetectedExplanation.question":"你正在使用屏幕阅读器来操作 VS Code? (使用屏幕阅读器时，会禁用自动换行功能)","screenReaderDetectedExplanation.answerYes":"是","screenReaderDetectedExplanation.answerNo":"否","noEditor":"当前没有活动的文本编辑器","noWritableCodeEditor":"活动代码编辑器为只读模式。","indentConvert":"转换文件","indentView":"更改视图","pickAction":"选择操作","tabFocusModeEnabled":"按 Tab 移动焦点","disableTabMode":"禁用辅助功能模式","status.editor.tabFocusMode":"辅助功能模式","columnSelectionModeEnabled":"列选择","disableColumnSelectionMode":"禁用列选择模式","status.editor.columnSelectionMode":"列选择模式","screenReaderDetected":"已为屏幕阅读器优化","status.editor.screenReaderMode":"屏幕阅读器模式","gotoLine":"转到行/列","status.editor.selection":"编辑器选择","selectIndentation":"选择缩进","status.editor.indentation":"编辑器缩进","selectEncoding":"选择编码","status.editor.encoding":"编辑器编码","selectEOL":"选择行尾序列","status.editor.eol":"编辑器结束行","selectLanguageMode":"选择语言模式","status.editor.mode":"编辑器语言","fileInfo":"文件信息","status.editor.info":"文件信息","spacesSize":"空格: {0}","tabSize":"制表符长度: {0}","currentProblem":"当前问题","showLanguageExtensions":"搜索“{0}”的应用市场扩展程序...","changeMode":"更改语言模式","languageDescription":"({0}) - 已配置的语言","languageDescriptionConfigured":"({0})","languagesPicks":"语言(标识符)","configureModeSettings":"配置“{0}”语言基础设置...","configureAssociationsExt":"“{0}”的配置文件关联...","autoDetect":"自动检测","pickLanguage":"选择语言模式","currentAssociation":"当前关联","pickLanguageToConfigure":"选择要与“{0}”关联的语言模式","changeEndOfLine":"更改行尾序列","pickEndOfLine":"选择行尾序列","changeEncoding":"更改文件编码","noFileEditor":"此时无活动文件","saveWithEncoding":"通过编码保存","reopenWithEncoding":"通过编码重新打开","guessedEncoding":"通过内容猜测","pickEncodingForReopen":"选择文件编码以重新打开文件","pickEncodingForSave":"选择用于保存的文件编码"},"vs/workbench/browser/parts/editor/editorActions":{"splitEditor":"拆分编辑器","splitEditorOrthogonal":"正交拆分编辑器","splitEditorGroupLeft":"向左拆分编辑器","splitEditorGroupRight":"向右拆分编辑器","splitEditorGroupUp":"向上拆分编辑器","splitEditorGroupDown":"向下拆分编辑器","joinTwoGroups":"将编辑器组与下一组合并","joinAllGroups":"合并所有编辑器组","navigateEditorGroups":"在编辑器组间进行导航","focusActiveEditorGroup":"聚焦到活动编辑器组","focusFirstEditorGroup":"聚焦于第一个编辑器组","focusLastEditorGroup":"聚焦到最终组编辑器","focusNextGroup":"聚焦到下一组编辑器","focusPreviousGroup":"聚焦到上一组编辑器","focusLeftGroup":"聚焦到左侧编辑器组","focusRightGroup":"聚焦到右侧编辑器组","focusAboveGroup":"聚焦到上方编辑器组","focusBelowGroup":"聚焦到下方编辑器组","closeEditor":"关闭编辑器","unpinEditor":"取消固定编辑器","closeOneEditor":"关闭","revertAndCloseActiveEditor":"还原并关闭编辑器","closeEditorsToTheLeft":"关闭组中左侧编辑器","closeAllEditors":"关闭所有编辑器","closeAllGroups":"关闭所有编辑器组","closeEditorsInOtherGroups":"关闭其他组中的编辑器","closeEditorInAllGroups":"在所有组中关闭此编辑器","moveActiveGroupLeft":"向左移动编辑器组","moveActiveGroupRight":"向右移动编辑器组","moveActiveGroupUp":"向上移动编辑器组","moveActiveGroupDown":"向下移动编辑器组","minimizeOtherEditorGroups":"最大化编辑器组","evenEditorGroups":"重置编辑器组大小","toggleEditorWidths":"切换编辑器组大小","maximizeEditor":"最大化编辑器组并隐藏侧边栏","openNextEditor":"打开下一个编辑器","openPreviousEditor":"打开上一个编辑器","nextEditorInGroup":"打开组中的下一个编辑器","openPreviousEditorInGroup":"打开组中上一个编辑器","firstEditorInGroup":"打开组中的第一个编辑器","lastEditorInGroup":"打开组中上一个编辑器","navigateNext":"前进","navigatePrevious":"后退","navigateToLastEditLocation":"转到上一编辑位置","navigateLast":"转到最后","reopenClosedEditor":"重新打开已关闭的编辑器","clearRecentFiles":"清除最近打开","showEditorsInActiveGroup":"按最近使用显示活动组中的编辑器","showAllEditors":"按外观显示所有编辑器","showAllEditorsByMostRecentlyUsed":"按最近使用显示所有编辑器","quickOpenPreviousRecentlyUsedEditor":"快速打开上一个最近使用过的编辑器","quickOpenLeastRecentlyUsedEditor":"快速打开最近使用频率最低的编辑器","quickOpenPreviousRecentlyUsedEditorInGroup":"快速打开组中上一个最近使用过的编辑器","quickOpenLeastRecentlyUsedEditorInGroup":"快速打开组中最近使用频率最低的编辑器","navigateEditorHistoryByInput":"从历史记录中快速打开上一个编辑器","openNextRecentlyUsedEditor":"打开下一个最近使用的编辑器","openPreviousRecentlyUsedEditor":"打开上一个最近使用的编辑器","openNextRecentlyUsedEditorInGroup":"打开组中下一个最近使用的编辑器","openPreviousRecentlyUsedEditorInGroup":"打开组中上一个最近使用的编辑器","clearEditorHistory":"清除编辑器历史记录","moveEditorLeft":"向左移动编辑器","moveEditorRight":"向右移动编辑器","moveEditorToPreviousGroup":"将编辑器移动到上一组","moveEditorToNextGroup":"将编辑器移动到下一组","moveEditorToAboveGroup":"将编辑器移动到上方组","moveEditorToBelowGroup":"将编辑器移动到下方组","moveEditorToLeftGroup":"将编辑器移动到左侧组","moveEditorToRightGroup":"将编辑器移动到右侧组","moveEditorToFirstGroup":"将编辑器移动到第一组","moveEditorToLastGroup":"将编辑器移动到最后一组","editorLayoutSingle":"单列编辑器布局","editorLayoutTwoColumns":"双列编辑器布局","editorLayoutThreeColumns":"三列编辑器布局","editorLayoutTwoRows":"双行编辑器布局","editorLayoutThreeRows":"三行编辑器布局","editorLayoutTwoByTwoGrid":"2x2 网格编辑器布局","editorLayoutTwoColumnsBottom":"底部双列编辑器布局","editorLayoutTwoRowsRight":"右侧双行编辑器布局","newEditorLeft":"在左侧新建编辑器组","newEditorRight":"在右侧新建编辑器组","newEditorAbove":"在上方新建编辑器组","newEditorBelow":"在下方新建编辑器组","workbench.action.reopenWithEditor":"重新打开编辑器的方式…","workbench.action.toggleEditorType":"切换编辑器类型"},"vs/workbench/browser/parts/editor/editorQuickAccess":{"noViewResults":"没有匹配的编辑器","entryAriaLabelWithGroupDirty":"{0}，存在更新，{1}","entryAriaLabelWithGroup":"{0}, {1}","entryAriaLabelDirty":"{0}，存在更新","closeEditor":"关闭编辑器"},"vs/workbench/browser/parts/editor/binaryEditor":{"binaryEditor":"二进制查看器","nativeFileTooLargeError":"文件太大，无法在编辑器中显示 ({0})。","nativeBinaryError":"此文件是二进制文件或使用了不支持的文本编码，无法在编辑器中显示。","openAsText":"是否仍要打开?"},"vs/workbench/browser/parts/notifications/notificationsViewer":{"executeCommand":"单击以执行命令 \\"{0}\\"","notificationActions":"通知操作","notificationSource":"来源: {0}"},"vs/workbench/browser/parts/editor/titleControl":{"ariaLabelEditorActions":"编辑器操作","draggedEditorGroup":"{0} (+{1})"},"vs/workbench/browser/parts/editor/breadcrumbsControl":{"cmd.toggle":"切换导航路径","miShowBreadcrumbs":"显示导航痕迹(&&B)","cmd.focus":"聚焦到“导航路径”视图"},"vs/workbench/browser/parts/editor/breadcrumbs":{"title":"导航路径","enabled":"启用/禁用导航路径。","filepath":"控制是否及如何在“导航路径”视图中显示文件路径。","filepath.on":"在导航路径视图中显示文件路径。","filepath.off":"不在导航路径视图中显示文件路径。","filepath.last":"在导航路径视图中仅显示文件路径的最后一个元素。","symbolpath":"控制是否及如何在“导航路径”视图中显示符号。","symbolpath.on":"在“导航路径”视图中显示所有符号。","symbolpath.off":"不在导航路径视图中显示符号。","symbolpath.last":"在导航路径视图中仅显示当前符号。","symbolSortOrder":"控制“导航路径”大纲视图中符号的排序方式。","symbolSortOrder.position":"以文件位置顺序显示符号大纲。","symbolSortOrder.name":"以字母顺序显示符号大纲。","symbolSortOrder.type":"以符号类型顺序显示符号大纲。","icons":"使用图标渲染面包屑导航项。","filteredTypes.file":"启用后，痕迹导航栏将显示“文件”符号。","filteredTypes.module":"启用后，痕迹导航栏将显示“模块”符号。","filteredTypes.namespace":"启用后，痕迹导航栏将显示“命名空间”符号。","filteredTypes.package":"启用后，痕迹导航栏将显示“包”符号。","filteredTypes.class":"启用后，痕迹导航栏显示“类”符号。","filteredTypes.method":"启用后，痕迹导航栏将显示“方法”符号。","filteredTypes.property":"启用后，痕迹导航栏将显示“属性”符号。","filteredTypes.field":"启用后，痕迹导航栏将显示“字段”符号。","filteredTypes.constructor":"启用后，痕迹符将显示“构造函数”符号。","filteredTypes.enum":"启用后，痕迹导航栏将显示“枚举”符号。","filteredTypes.interface":"启用后，痕迹导航栏将显示“接口”符号。","filteredTypes.function":"启用后，痕迹导航栏将显示“函数”符号。","filteredTypes.variable":"启用后，痕迹导航栏将显示“变量”符号。","filteredTypes.constant":"启用后，痕迹导航栏将显示“常量”符号。","filteredTypes.string":"启用后，痕迹导航栏将显示“字符串”符号。","filteredTypes.number":"启用后，痕迹导航栏将显示“数字”符号。","filteredTypes.boolean":"启用后，痕迹导航栏将显示“布尔”符号。","filteredTypes.array":"启用后，痕迹导航栏将显示“数组”符号。","filteredTypes.object":"启用后，痕迹导航栏将显示“对象”符号。","filteredTypes.key":"启用后，痕迹导航栏将显示“键”符号。","filteredTypes.null":"启用后，痕迹导航栏将显示 \\"null\\" 符号。","filteredTypes.enumMember":"启用后，痕迹导航栏将显示 \\"enumMember\\" 符号。","filteredTypes.struct":"启用后，痕迹导航栏将显示“结构”符号。","filteredTypes.event":"启用后，痕迹导航栏将显示“事件”符号。","filteredTypes.operator":"启用后，痕迹导航栏将显示“运算符”符号。","filteredTypes.typeParameter":"启用后，痕迹导航栏将显示 \\"typeParameter\\" 符号。"},"vs/workbench/browser/parts/editor/breadcrumbsPicker":{"breadcrumbs":"痕迹导航"},"vs/workbench/contrib/backup/electron-sandbox/backupTracker":{"backupTrackerBackupFailed":"一个或多个未保存的编辑器无法保存到备份位置。","backupTrackerConfirmFailed":"无法保存或还原一个或多个未保存的编辑器。","ok":"确定","backupErrorDetails":"请尝试先保存或还原未保存的编辑器，然后重试。"},"vs/workbench/contrib/bulkEdit/browser/bulkEditService":{"summary.0":"未做编辑","summary.nm":"在 {1} 个文件中进行了 {0} 次编辑","summary.n0":"在 1 个文件中进行了 {0} 次编辑","workspaceEdit":"工作区编辑","nothing":"未做编辑"},"vs/workbench/contrib/bulkEdit/browser/preview/bulkEdit.contribution":{"overlap":"正在预览另一个重构。","cancel":"取消","continue":"继续","detail":"按\\"继续\\"放弃以前的重构，继续当前重构。","apply":"应用重构","cat":"重构预览","Discard":"放弃重构","toogleSelection":"切换更改","groupByFile":"按文件分组更改","groupByType":"按类型分组更改","refactorPreviewViewIcon":"查看重构预览视图的图标。","panel":"重构预览"},"vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPane":{"empty.msg":"调用代码操作(如重命名操作)，在此处查看其更改的预览。","conflict.1":"无法应用重构，因为“{0}”在此期间进行了修改。","conflict.N":"无法应用重构，因为其他 {0} 个文件在此期间进行了修改。","edt.title.del":"{0}(删除、重构预览)","rename":"重命名","create":"创建","edt.title.2":"{0}({1}、重构预览)","edt.title.1":"{0}(重构预览)"},"vs/workbench/contrib/bulkEdit/browser/preview/bulkEditPreview":{"default":"其他"},"vs/workbench/contrib/bulkEdit/browser/preview/bulkEditTree":{"bulkEdit":"批量编辑","aria.renameAndEdit":"将{0}重命名为{1}，同时进行文本编辑","aria.createAndEdit":"创建{0}，同时进行文本编辑","aria.deleteAndEdit":"正在删除 {0}，同时进行文本编辑","aria.editOnly":"{0}，进行文本编辑","aria.rename":"将 {0} 重命名为 {1}","aria.create":"创建{0}","aria.delete":"删除 {0}","aria.replace":"行{0}，用{2}替换{1}","aria.del":"行 {0}，正在删除 {1}","aria.insert":"行{0}，插入{1}","rename.label":"{0} → {1}","detail.rename":"(重命名)","detail.create":"(正在创建)","detail.del":"(删除)","title":"{0} - {1}"},"vs/workbench/contrib/callHierarchy/browser/callHierarchy.contribution":{"no.item":"无结果","error":"未能显示调用层次结构","title":"速览调用层次结构","title.incoming":"显示来电","showIncomingCallsIcons":"“调用层次结构”视图中传入调用的图标。","title.outgoing":"显示去电","showOutgoingCallsIcon":"“调用层次结构”视图中传出调用的图标。","title.refocus":"重新聚焦调用层次结构","close":"关闭"},"vs/workbench/contrib/callHierarchy/browser/callHierarchyPeek":{"callFrom":"来自\\"{0}\\"的调用","callsTo":"\\"{0}\\"的调用方","title.loading":"正在加载...","empt.callsFrom":"没有来自 \\"{0}\\" 的调用","empt.callsTo":"没有\\"{0}\\"的调用方"},"vs/workbench/contrib/callHierarchy/browser/callHierarchyTree":{"tree.aria":"调用层次结构","from":"来自 {0} 的调用","to":"{0} 的调用方"},"vs/workbench/contrib/cli/node/cli.contribution":{"shellCommand":"Shell 命令","install":"在 PATH 中安装“{0}”命令","not available":"此命令不可用","ok":"确定","cancel2":"取消","warnEscalation":"代码将通过 \\"osascript\\" 提示需要管理员权限才可安装 shell 命令。","cantCreateBinFolder":"无法创建 \\"/usr/local/bin\\"。","aborted":"已中止","successIn":"已成功在 PATH 中安装了 Shell 命令“{0}”。","uninstall":"从 PATH 中卸载“{0}”命令","warnEscalationUninstall":"Code 将使用 \\"osascript\\" 来提示获取管理员权限，从而卸载 Shell 命令。","cantUninstall":"无法卸载 Shell 命令“{0}”。","successFrom":"已成功从 PATH 卸载 Shell 命令“{0}”。"},"vs/workbench/contrib/codeActions/common/codeActionsContribution":{"codeActionsOnSave.fixAll":"控制是否应在文件保存时运行自动修复操作。","codeActionsOnSave":"在保存时运行的代码操作类型。","codeActionsOnSave.generic":"控制是否应在文件保存时运行\\"{0}\\"操作。"},"vs/workbench/contrib/codeActions/common/codeActionsExtensionPoint":{"contributes.codeActions":"配置资源要使用的编辑器。","contributes.codeActions.languages":"启用代码操作的语言模式。","contributes.codeActions.kind":"贡献代码操作的\\"代码操作种类\\"。","contributes.codeActions.title":"UI 中使用的代码操作的标签。","contributes.codeActions.description":"代码操作的说明。"},"vs/workbench/contrib/codeActions/common/documentationExtensionPoint":{"contributes.documentation":"贡献的文档。","contributes.documentation.refactorings":"为重构提供了文档。","contributes.documentation.refactoring":"为重构提供了文档。","contributes.documentation.refactoring.title":"UI 中使用的文档的标签。","contributes.documentation.refactoring.when":"当子句。","contributes.documentation.refactoring.command":"命令已执行。"},"vs/workbench/contrib/codeEditor/electron-browser/startDebugTextMate":{"startDebugTextMate":"启动文本配对语法语法日志记录"},"vs/workbench/contrib/codeEditor/electron-sandbox/selectionClipboard":{"actions.pasteSelectionClipboard":"粘贴选择剪贴板"},"vs/workbench/contrib/codeEditor/browser/languageConfigurationExtensionPoint":{"parseErrors":"错误分析 {0}: {1}","formatError":"{0}: 格式无效，应为 JSON 对象。","schema.openBracket":"左方括号字符或字符串序列。","schema.closeBracket":"右方括号字符或字符串序列。","schema.comments":"定义注释符号","schema.blockComments":"定义块注释的标记方式。","schema.blockComment.begin":"作为块注释开头的字符序列。","schema.blockComment.end":"作为块注释结尾的字符序列。","schema.lineComment":"作为行注释开头的字符序列。","schema.brackets":"定义增加和减少缩进的括号。","schema.autoClosingPairs":"定义括号对。当输入左方括号时，将自动插入右方括号。","schema.autoClosingPairs.notIn":"定义禁用了自动配对的作用域列表。","schema.autoCloseBefore":"在自动闭合设置为 \\"languageDefined\\" 时，定义使括号或引号自动闭合的光标后面的字符。通常是不会成为表达式开头的一组字符。","schema.surroundingPairs":"定义可用于包围所选字符串的括号对。","schema.wordPattern":"定义一下在编程语言里什么东西会被当做是一个单词。","schema.wordPattern.pattern":"用于匹配文本的正则表达式模式。","schema.wordPattern.flags":"用于匹配文本的正则表达式标志。","schema.wordPattern.flags.errorMessage":"必须匹配模式“/^([gimuy]+)$/”。","schema.indentationRules":"语言的缩进设置。","schema.indentationRules.increaseIndentPattern":"如果一行文本匹配此模式，则之后所有内容都应被缩进一次(直到匹配其他规则)。","schema.indentationRules.increaseIndentPattern.pattern":"increaseIndentPattern 的正则表达式模式。","schema.indentationRules.increaseIndentPattern.flags":"increaseIndentPattern 的正则表达式标志。","schema.indentationRules.increaseIndentPattern.errorMessage":"必须匹配模式“/^([gimuy]+)$/”。","schema.indentationRules.decreaseIndentPattern":"如果某行文本匹配此模式，则其后所有行都应被取消缩进一次 (直到匹配其他规则)。","schema.indentationRules.decreaseIndentPattern.pattern":"decreaseIndentPattern 的正则表达式模式。","schema.indentationRules.decreaseIndentPattern.flags":"decreaseIndentPattern 的正则表达式标志。","schema.indentationRules.decreaseIndentPattern.errorMessage":"必须匹配模式“/^([gimuy]+)$/”。","schema.indentationRules.indentNextLinePattern":"如果某一行匹配此模式，那么仅此行之后的**下一行**应缩进一次。","schema.indentationRules.indentNextLinePattern.pattern":"indentNextLinePattern 的正则表达式模式。","schema.indentationRules.indentNextLinePattern.flags":"indentNextLinePattern 的正则表达式标志。","schema.indentationRules.indentNextLinePattern.errorMessage":"必须匹配模式“/^([gimuy]+)$/”。","schema.indentationRules.unIndentedLinePattern":"如果某一行匹配此模式，那么不应更改此行的缩进，且不应针对其他规则对其进行计算。","schema.indentationRules.unIndentedLinePattern.pattern":"unIndentedLinePattern 的正则表达式模式。","schema.indentationRules.unIndentedLinePattern.flags":"unIndentedLinePattern 的正则表达式标志。","schema.indentationRules.unIndentedLinePattern.errorMessage":"必须匹配模式“/^([gimuy]+)$/”。","schema.folding":"此语言的折叠设置。","schema.folding.offSide":"若一种语言使用缩进表示其代码块，它将遵循越位规则 (off-side rule)。若设置此项，空白行将属于其之后的代码块。","schema.folding.markers":"语言特定的折叠标记。例如，\\"#region\\" 与 \\"#endregion\\"。开始与结束标记的正则表达式需设计得效率高，因其将对每一行的内容进行测试。","schema.folding.markers.start":"开始标记的正则表达式模式。其应以 \\"^\\" 开始。","schema.folding.markers.end":"结束标记的正则表达式模式。其应以 \\"^\\" 开始。"},"vs/workbench/contrib/codeEditor/browser/quickaccess/gotoSymbolQuickAccess":{"empty":"无匹配项","gotoSymbolQuickAccessPlaceholder":"键入要转到的符号的名称。","gotoSymbolQuickAccess":"转到编辑器中的符号","gotoSymbolByCategoryQuickAccess":"按类别转到编辑器中的符号","gotoSymbol":"转到编辑器中的符号..."},"vs/workbench/contrib/codeEditor/browser/accessibility/accessibility":{"emergencyConfOn":"现在将设置 \\"editor.accessibilitySupport\\" 更改为 \\"on\\"。","openingDocs":"正在打开 VS Code 辅助功能文档页面。","introMsg":"感谢试用 VS Code 的辅助功能选项。","status":"状态:","changeConfigToOnMac":"要配置编辑器对屏幕阅读器进行永久优化，请按 Command+E。","changeConfigToOnWinLinux":"要配置编辑器对屏幕阅读器进行永久优化，请按 Ctrl+E。","auto_unknown":"编辑器被配置为使用平台 API 以检测是否附加了屏幕阅读器，但当前运行时不支持此功能。","auto_on":"编辑器自动检测到已附加屏幕阅读器。","auto_off":"编辑器被配置为自动检测是否附加了屏幕阅读器，当前未检测到。","configuredOn":"已配置编辑器对屏幕阅读器进行永久优化 — 您可以更改 \\"editor.accessibilitySupport\\" 设置进行调整。","configuredOff":"编辑器被配置为不对屏幕阅读器的使用进行优化。","tabFocusModeOnMsg":"在当前编辑器中按 Tab 会将焦点移动到下一个可聚焦的元素。通过按 {0} 切换此行为。","tabFocusModeOnMsgNoKb":"在当前编辑器中按 Tab 会将焦点移动到下一个可聚焦的元素。当前无法通过按键绑定触发命令 {0}。","tabFocusModeOffMsg":"在当前编辑器中按 Tab 将插入制表符。通过按 {0} 切换此行为。","tabFocusModeOffMsgNoKb":"在当前编辑器中按 Tab 会插入制表符。当前无法通过键绑定触发命令 {0}。","openDocMac":"按 Command+H 以打开浏览器窗口，其中包含更多有关 VS Code 辅助功能的信息。","openDocWinLinux":"按 Ctrl+H 以打开浏览器窗口，其中包含更多有关 VS Code 辅助功能的信息。","outroMsg":"你可以按 Esc 或 Shift+Esc 消除此工具提示并返回到编辑器。","ShowAccessibilityHelpAction":"显示辅助功能帮助"},"vs/workbench/contrib/codeEditor/browser/diffEditorHelper":{"hintTimeout":"差异算法已提前停止(在 {0} ms 之后)","removeTimeout":"删除限制","hintWhitespace":"显示空白差异"},"vs/workbench/contrib/codeEditor/browser/inspectKeybindings":{"workbench.action.inspectKeyMap":"开发人员: 检查按键映射","workbench.action.inspectKeyMapJSON":"检查按键映射(JSON)"},"vs/workbench/contrib/codeEditor/browser/largeFileOptimizations":{"largeFile":"{0}: 为减少内存使用并避免卡顿或崩溃，我们已关闭对此大型文件内容的标记、折行和折叠。","removeOptimizations":"强制启用功能","reopenFilePrompt":"请重新打开文件以使此设置生效。"},"vs/workbench/contrib/codeEditor/browser/inspectEditorTokens/inspectEditorTokens":{"inspectEditorTokens":"开发人员: 检查编辑器标记和作用域","inspectTMScopesWidget.loading":"正在加载..."},"vs/workbench/contrib/codeEditor/browser/quickaccess/gotoLineQuickAccess":{"gotoLineQuickAccessPlaceholder":"键入要转到的行号和可选列(例如，42:5表示第 42 行和第 5 列)。","gotoLineQuickAccess":"转到行/列","gotoLine":"转到行/列..."},"vs/workbench/contrib/codeEditor/browser/saveParticipants":{"formatting":"正在运行“{0}”格式化程序([配置](command:workbench.action.openSettings?%5B%22editor.formatOnSave%22%5D))。","codeaction":"快速修复","codeaction.get":"正在从“{0}”获取代码操作([配置](command:workbench.action.openSettings?%5B%22editor.codeActionsOnSave%22%5D))。","codeAction.apply":"正在应用代码操作“{0}”。"},"vs/workbench/contrib/codeEditor/browser/toggleColumnSelection":{"toggleColumnSelection":"切换列选择模式","miColumnSelection":"列选择模式(&&S)"},"vs/workbench/contrib/codeEditor/browser/toggleMinimap":{"toggleMinimap":"切换到迷你地图","miShowMinimap":"显示缩略图(&&M)"},"vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier":{"toggleLocation":"切换多行修改键","miMultiCursorAlt":"切换为“Alt+单击”进行多光标功能","miMultiCursorCmd":"切换为“Cmd+单击”进行多光标功能","miMultiCursorCtrl":"切换为“Ctrl+单击”进行多光标功能"},"vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter":{"toggleRenderControlCharacters":"切换控制字符","miToggleRenderControlCharacters":"呈现控制字符(&&C)"},"vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace":{"toggleRenderWhitespace":"切换呈现空格","miToggleRenderWhitespace":"呈现空格(&&R)"},"vs/workbench/contrib/codeEditor/browser/toggleWordWrap":{"toggle.wordwrap":"查看: 切换自动换行","unwrapMinified":"在此文件禁用折行","wrapMinified":"在此文件启用折行","miToggleWordWrap":"切换自动换行(&&W)"},"vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget":{"label.find":"查找","placeholder.find":"查找","label.previousMatchButton":"上一个匹配项","label.nextMatchButton":"下一个匹配项","label.closeButton":"关闭"},"vs/workbench/contrib/codeEditor/browser/find/simpleFindReplaceWidget":{"label.find":"查找","placeholder.find":"查找","label.previousMatchButton":"上一个匹配项","label.nextMatchButton":"下一个匹配项","label.closeButton":"关闭","label.toggleReplaceButton":"切换替换模式","label.replace":"替换","placeholder.replace":"替换","label.replaceButton":"替换","label.replaceAllButton":"全部替换"},"vs/workbench/contrib/comments/browser/comments.contribution":{"commentsConfigurationTitle":"评论","openComments":"控制评论面板应何时打开。"},"vs/workbench/contrib/comments/browser/commentsEditorContribution":{"pickCommentService":"选择 \\"注释提供程序\\"","nextCommentThreadAction":"转到下一条评论串"},"vs/workbench/contrib/comments/browser/commentsView":{"collapseAll":"全部折叠","rootCommentsLabel":"当前工作区的注释","resourceWithCommentThreadsLabel":"{0} 中的注释，完整路径: {1}","resourceWithCommentLabel":"{3} 中第 {1} 行第 {2} 列中来自 ${0} 的注释，源: {4}"},"vs/workbench/contrib/comments/browser/commentsTreeViewer":{"imageWithLabel":"图片: {0}","image":"图片"},"vs/workbench/contrib/comments/browser/commentGlyphWidget":{"editorGutterCommentRangeForeground":"编辑器导航线中表示评论范围的颜色。"},"vs/workbench/contrib/comments/browser/commentThreadWidget":{"collapseIcon":"用于折叠审阅注释的图标。","label.collapse":"折叠","startThread":"开始讨论","reply":"回复...","newComment":"键入新注释"},"vs/workbench/contrib/comments/common/commentModel":{"noComments":"此工作区中尚无注释。"},"vs/workbench/contrib/comments/browser/commentNode":{"commentToggleReaction":"切换反应","commentToggleReactionError":"切换注释反应失败: {0}。","commentToggleReactionDefaultError":"切换注释反应失败","commentDeleteReactionError":"未能删除评论回应: {0}。","commentDeleteReactionDefaultError":"未能删除评论回应","commentAddReactionError":"未能删除评论回应: {0}。","commentAddReactionDefaultError":"未能删除评论回应"},"vs/workbench/contrib/comments/browser/reactionsAction":{"pickReactions":"选取反应..."},"vs/workbench/contrib/customEditor/browser/customEditors":{"openWithCurrentlyActive":"当前处于活动状态","promptOpenWith.setDefaultTooltip":"设置为“{0}”文件的默认编辑器","promptOpenWith.placeHolder":"选择要用于“{0}”的编辑器..."},"vs/workbench/contrib/customEditor/common/contributedCustomEditors":{"builtinProviderDisplayName":"内置","promptOpenWith.defaultEditor.displayName":"文本编辑器"},"vs/workbench/contrib/customEditor/common/extensionPoint":{"contributes.customEditors":"提供的自定义编辑器。","contributes.viewType":"自定义编辑器的标识符。它在所有自定义编辑器中都必须是唯一的，因此建议将扩展 ID 作为 \\"viewType\\" 的一部分包括在内。在使用 \\"vscode.registerCustomEditorProvider\\" 和在 \\"onCustomEditor:${id}\\" [激活事件](https://code.visualstudio.com/api/references/activation-events)中注册自定义编辑器时，使用 \\"viewType\\"。","contributes.displayName":"自定义编辑器的用户可读名称。当选择要使用的编辑器时，向用户显示此名称。","contributes.selector":"为其启用了自定义编辑器的一组 glob。","contributes.selector.filenamePattern":"为其启用了自定义编辑器的 glob。","contributes.priority":"控制在用户打开文件时是否自动启用自定义编辑器。用户可能会使用 \\"workbench.editorAssociations\\" 设置覆盖此项。","contributes.priority.default":"在用户打开资源时自动使用此编辑器，前提是没有为该资源注册其他默认的自定义编辑器。","contributes.priority.option":"在用户打开资源时不会自动使用此编辑器，但用户可使用 `Reopen With` 命令切换到此编辑器。"},"vs/workbench/contrib/debug/common/debug":{"internalConsoleOptions":"控制何时打开内部调试控制台。"},"vs/workbench/contrib/debug/browser/debug.contribution":{"debugCategory":"调试","runCategory":"运行","startDebugPlaceholder":"键入准备运行的启动配置的名称。","startDebuggingHelp":"开始调试","terminateThread":"终止线程","debugFocusConsole":"聚焦到“调试控制台”视图","jumpToCursor":"跳转到光标","SetNextStatement":"设置下一语句","inlineBreakpoint":"内联断点","stepBackDebug":"后退","reverseContinue":"反向","restartFrame":"重启框架","copyStackTrace":"复制调用堆栈","setValue":"设置值","copyValue":"复制值","copyAsExpression":"复制表达式","addToWatchExpressions":"添加到监视","breakWhenValueChanges":"值更改时中断","miViewRun":"运行(&&R)","miToggleDebugConsole":"调试控制台(&&B)","miStartDebugging":"启动调试(&&S)","miRun":"以非调试模式运行(&&W)","miStopDebugging":"停止调试(&&S)","miRestart Debugging":"重启调试(&&R)","miOpenConfigurations":"打开配置(&&C)","miAddConfiguration":"添加配置(&&D)...","miStepOver":"单步跳过(&&O)","miStepInto":"单步执行(&&I)","miStepOut":"单步停止(&&U)","miContinue":"继续(&&C)","miToggleBreakpoint":"切换断点(&&B)","miConditionalBreakpoint":"条件断点(&&C)...","miInlineBreakpoint":"内联断点(&&O)","miFunctionBreakpoint":"函数断点(&&F)...","miLogPoint":"记录点(&&L)...","miNewBreakpoint":"新建断点(&&N)","miEnableAllBreakpoints":"启用所有断点(&&E)","miDisableAllBreakpoints":"禁用所有断点(&&L)","miRemoveAllBreakpoints":"删除所有断点(&&A)","miInstallAdditionalDebuggers":"安装附加调试器(&&I)...","debugPanel":"调试控制台","run":"运行","variables":"变量","watch":"监视","callStack":"调用堆栈","breakpoints":"断点","loadedScripts":"已载入的脚本","debugConfigurationTitle":"调试","allowBreakpointsEverywhere":"允许在任何文件中设置断点。","openExplorerOnEnd":"在调试会话结束时自动打开资源管理器视图。","inlineValues":"当处于调试过程中时，在编辑器中内联显示变量值。","toolBarLocation":"控制调试工具栏的位置。可在所有视图中“浮动”、在调试视图中“停靠”，也可“隐藏”。","never":"在状态栏中不再显示调试","always":"始终在状态栏中显示调试","onFirstSessionStart":"仅于第一次启动调试后在状态栏中显示调试","showInStatusBar":"控制何时显示调试状态栏。","debug.console.closeOnEnd":"控制调试控制台是否应在调试会话结束时自动关闭。","openDebug":"控制何时打开“调试”视图。","showSubSessionsInToolBar":"控制调试子会话是否显示在调试工具栏中。当此设置为 false 时, 子会话上的 stop 命令也将停止父会话。","debug.console.fontSize":"控制调试控制台中的字体大小(以像素为单位)。","debug.console.fontFamily":"控制调试控制台中的字体系列。","debug.console.lineHeight":"设置调试控制台中的行高(以像素为单位)。使用 0 来计算从字体大小开始的行高。","debug.console.wordWrap":"控制是否应在调试控制台中换行。","debug.console.historySuggestions":"控制调试控制台是否应建议以前键入的输入。","launch":"全局调试启动配置。应当作为跨工作区共享的 \\\\\\"launch.json\\\\\\" 的替代方法。","debug.focusWindowOnBreak":"控制当调试器中断时，工作台窗口是否应获得焦点。","debugAnyway":"忽略任务错误并开始调试。","showErrors":"显示问题视图且不开始调试。","prompt":"提示用户。","cancel":"取消调试。","debug.onTaskErrors":"控制在运行预启动任务后遇到错误时应该怎么做。","showBreakpointsInOverviewRuler":"控制断点是否应显示在概览标尺中。","showInlineBreakpointCandidates":"控制调试时是否应在编辑器中显示内联断点候选修饰。"},"vs/workbench/contrib/debug/browser/debugEditorContribution":{"addConfiguration":"添加配置…"},"vs/workbench/contrib/debug/browser/breakpointEditorContribution":{"logPoint":"记录点","breakpoint":"断点","breakpointHasConditionDisabled":"此{0}的{1}将在删除后丢失。请考虑仅启用此{0}。","message":"消息","condition":"条件","breakpointHasConditionEnabled":"此{0}的{1}将在删除后丢失。请考虑仅禁用此{0}。","removeLogPoint":"删除 {0}","disableLogPoint":"{0} {1}","disable":"禁用","enable":"启用","cancel":"取消","removeBreakpoint":"删除 {0}","editBreakpoint":"编辑 {0}…","disableBreakpoint":"禁用{0}","enableBreakpoint":"启用 {0}","removeBreakpoints":"删除断点","removeInlineBreakpointOnColumn":"删除第 {0} 列的内联断点","removeLineBreakpoint":"删除行断点","editBreakpoints":"编辑断点","editInlineBreakpointOnColumn":"编辑第 {0} 列的内联断点","editLineBrekapoint":"编辑行断点","enableDisableBreakpoints":"启用/禁用断点","disableInlineColumnBreakpoint":"禁用第 {0} 列的内联断点","disableBreakpointOnLine":"禁用行断点","enableBreakpoints":"启用第 {0} 列的内联断点","enableBreakpointOnLine":"启用行断点","addBreakpoint":"添加断点","addConditionalBreakpoint":"添加条件断点...","addLogPoint":"添加记录点...","debugIcon.breakpointForeground":"断点图标颜色。","debugIcon.breakpointDisabledForeground":"禁用断点的图标颜色。","debugIcon.breakpointUnverifiedForeground":"未验证断点的图标颜色。","debugIcon.breakpointCurrentStackframeForeground":"当前断点堆栈帧的图标颜色。","debugIcon.breakpointStackframeForeground":"所有断点堆栈帧的图标颜色。"},"vs/workbench/contrib/debug/browser/callStackEditorContribution":{"topStackFrameLineHighlight":"堆栈帧中顶部一行的高亮背景色。","focusedStackFrameLineHighlight":"堆栈帧中焦点一行的高亮背景色。"},"vs/workbench/contrib/debug/browser/repl":{"workbench.debug.filter.placeholder":"筛选器(例如 text、!exclude)","debugConsole":"调试控制台","copy":"复制","copyAll":"全部复制","paste":"粘贴","collapse":"全部折叠","startDebugFirst":"请发起调试会话来对表达式求值","actions.repl.acceptInput":"接受 REPL 的输入","repl.action.filter":"REPL 将内容聚焦到筛选器","actions.repl.copyAll":"调试: 复制控制台所有内容","selectRepl":"选择调试控制台","clearRepl":"清除控制台","debugConsoleCleared":"调试控制台已清除"},"vs/workbench/contrib/debug/browser/debugViewlet":{"startAdditionalSession":"启动其他会话","toggleDebugPanel":"调试控制台","toggleDebugViewlet":"显示运行和调试"},"vs/workbench/contrib/debug/common/abstractDebugAdapter":{"timeout":"对于“{1}”，{0} 毫秒后超时 "},"vs/workbench/contrib/debug/browser/breakpointsView":{"editCondition":"编辑条件","Logpoint":"记录点","Breakpoint":"断点","editBreakpoint":"编辑 {0}…","removeBreakpoint":"删除 {0}","expressionCondition":"表达式条件: {0}","functionBreakpointsNotSupported":"此调试类型不支持函数断点","dataBreakpointsNotSupported":"此调试类型不支持数据断点","functionBreakpointPlaceholder":"要断开的函数","functionBreakPointInputAriaLabel":"键入函数断点","exceptionBreakpointPlaceholder":"在表达式结果为 true 时中断","exceptionBreakpointAriaLabel":"类型异常断点条件","breakpoints":"断点","disabledLogpoint":"已禁用的记录点","disabledBreakpoint":"已禁用的断点","unverifiedLogpoint":"未验证的记录点","unverifiedBreakopint":"未验证的断点","functionBreakpointUnsupported":"不受此调试类型支持的函数断点","functionBreakpoint":"函数断点","dataBreakpointUnsupported":"此调试类型不支持数据断点","dataBreakpoint":"数据断点","breakpointUnsupported":"调试器不支持此类型的断点","logMessage":"日志消息: {0}","expression":"表达式条件: {0}","hitCount":"命中次数: {0}","breakpoint":"断点"},"vs/workbench/contrib/debug/browser/callStackView":{"running":"正在运行","showMoreStackFrames2":"显示更多堆栈框架","session":"会话","thread":"线程","restartFrame":"重启框架","loadAllStackFrames":"加载所有堆栈帧","showMoreAndOrigin":"显示另外 {0} 个: {1}","showMoreStackFrames":"显示另外 {0} 个堆栈帧","callStackAriaLabel":"调试调用堆栈","threadAriaLabel":"线程 {0} {1}","stackFrameAriaLabel":"堆栈帧 {0}，行 {1}，{2}","sessionLabel":"会话 {0} {1}"},"vs/workbench/contrib/debug/browser/debugActions":{"openLaunchJson":"打开 {0}","launchJsonNeedsConfigurtion":"配置或修复 \\"launch.json\\"","noFolderDebugConfig":"要执行高级调试配置，请先打开一个文件夹。","selectWorkspaceFolder":"选择工作区文件夹以在其中创建 launch.json 文件或将其添加到工作区配置文件","startDebug":"开始调试","startWithoutDebugging":"开始执行(不调试)","selectAndStartDebugging":"选择并开始调试","removeBreakpoint":"删除断点","removeAllBreakpoints":"删除所有断点","enableAllBreakpoints":"启用所有断点","disableAllBreakpoints":"禁用所有断点","activateBreakpoints":"激活断点","deactivateBreakpoints":"停用断点","reapplyAllBreakpoints":"重新应用所有断点","addFunctionBreakpoint":"添加函数断点","addWatchExpression":"添加表达式","removeAllWatchExpressions":"删除所有表达式","focusSession":"聚焦到“会话”视图","copyValue":"复制值"},"vs/workbench/contrib/debug/browser/debugToolBar":{"debugToolBarBackground":"调试工具栏背景颜色。","debugToolBarBorder":"调试工具栏边框颜色。","debugIcon.startForeground":"用于开始调试的调试工具栏图标。","debugIcon.pauseForeground":"用于暂停的调试工具栏图标。","debugIcon.stopForeground":"用于停止的调试工具栏图标。","debugIcon.disconnectForeground":"用于断开连接的调试工具栏图标。","debugIcon.restartForeground":"用于重启的调试工具栏图标。","debugIcon.stepOverForeground":"用于单步执行的调试工具栏图标。","debugIcon.stepIntoForeground":"用于单步执行的调试工具栏图标。","debugIcon.stepOutForeground":"用于跳过的调试工具栏图标。","debugIcon.continueForeground":"用于继续的调试工具栏图标。","debugIcon.stepBackForeground":"用于后退的调试工具栏图标。"},"vs/workbench/contrib/debug/browser/debugService":{"1activeSession":"1 个活动会话","nActiveSessions":"{0}个活动会话","configurationAlreadyRunning":"调试配置“{0}”已在运行。","compoundMustHaveConfigurations":"复合项必须拥有 \\"configurations\\" 属性集，才能启动多个配置。","noConfigurationNameInWorkspace":"在工作区中找不到启动配置“{0}”。","multipleConfigurationNamesInWorkspace":"工作区中存在多个启动配置“{0}”。请使用文件夹名称来限定配置。","noFolderWithName":"无法在复合项“{2}”中为配置“{1}”找到名为“{0}”的文件夹。","configMissing":"\\"launch.json\\" 中缺少配置“{0}”。","launchJsonDoesNotExist":"传递的工作区文件夹没有 \\"launch.json\\"。","debugRequestNotSupported":"所选调试配置的属性“{0}”的值“{1}”不受支持。","debugRequesMissing":"所选的调试配置缺少属性“{0}”。","debugTypeNotSupported":"配置的类型“{0}”不受支持。","debugTypeMissing":"所选的启动配置缺少属性 \\"type\\"。","installAdditionalDebuggers":"安装 {0} 扩展","noFolderWorkspaceDebugError":"无法调试活动文件。请确保它已保存且你已为该文件类型安装了调试扩展。","debugAdapterCrash":"调试适配器进程意外终止 ({0})","cancel":"取消","debuggingPaused":"{0}:{1}，调试已暂停 {2}，{3}","breakpointAdded":"已添加断点，行 {0}，文件 {1}","breakpointRemoved":"已删除断点，行 {0}，文件 {1}"},"vs/workbench/contrib/debug/browser/statusbarColorProvider":{"statusBarDebuggingBackground":"调试程序时状态栏的背景色。状态栏显示在窗口底部","statusBarDebuggingForeground":"调试程序时状态栏的前景色。状态栏显示在窗口底部","statusBarDebuggingBorder":"调试程序时区别于侧边栏和编辑器的状态栏边框颜色。状态栏显示在窗口底部。"},"vs/workbench/contrib/debug/browser/debugStatus":{"status.debug":"调试","debugTarget":"调试: {0}","selectAndStartDebug":"选择并启动调试配置"},"vs/workbench/contrib/debug/browser/debugCommands":{"restartDebug":"重启","stepOverDebug":"单步跳过","stepIntoDebug":"单步调试","stepOutDebug":"单步跳出","pauseDebug":"暂停","disconnect":"断开连接","stop":"停止","continueDebug":"继续","chooseLocation":"选择特定位置","noExecutableCode":"当前光标位置没有关联的可执行代码。","jumpToCursor":"跳转到光标","debug":"调试","noFolderDebugConfig":"要执行高级调试配置，请先打开一个文件夹。","addInlineBreakpoint":"添加内联断点"},"vs/workbench/contrib/debug/browser/loadedScriptsView":{"loadedScriptsSession":"调试会话","loadedScriptsAriaLabel":"在调试中已加载的脚本","loadedScriptsRootFolderAriaLabel":"工作区文件夹 {0}，已加载的脚本，调试","loadedScriptsSessionAriaLabel":"会话 {0}，已加载的脚本，调试","loadedScriptsFolderAriaLabel":"文件夹 {0}，已加载的脚本，调试","loadedScriptsSourceAriaLabel":"{0}，已加载的脚本，调试"},"vs/workbench/contrib/debug/browser/debugEditorActions":{"toggleBreakpointAction":"调试: 切换断点","conditionalBreakpointEditorAction":"调试: 添加条件断点...","logPointEditorAction":"调试: 添加记录点...","runToCursor":"运行到光标处","evaluateInDebugConsole":"在调试控制台中评估","addToWatch":"添加到监视","showDebugHover":"调试: 显示悬停","stepIntoTargets":"直奔目标...","goToNextBreakpoint":"调试: 转到下一个断点","goToPreviousBreakpoint":"调试:到前面的断点","closeExceptionWidget":"关闭异常小组件"},"vs/workbench/contrib/debug/browser/watchExpressionsView":{"editWatchExpression":"编辑表达式","removeWatchExpression":"删除表达式","watchExpressionInputAriaLabel":"键入监视表达式","watchExpressionPlaceholder":"要监视的表达式","watchAriaTreeLabel":"调试监视表达式","watchExpressionAriaLabel":"{0}，值 {1}","watchVariableAriaLabel":"{0}，值 {1}"},"vs/workbench/contrib/debug/browser/variablesView":{"variableValueAriaLabel":"键入新的变量值","variablesAriaTreeLabel":"调试变量","variableScopeAriaLabel":"范围 {0}","variableAriaLabel":"{0}，值 {1}"},"vs/workbench/contrib/debug/common/debugContentProvider":{"unable":"无法解析无调试会话的资源","canNotResolveSourceWithError":"无法加载源“{0}”: {1}。","canNotResolveSource":"无法加载源“{0}”。"},"vs/workbench/contrib/debug/browser/welcomeView":{"run":"运行","openAFileWhichCanBeDebugged":"[打开文件](command:{0})，可调试或运行。","runAndDebugAction":"[运行和调试{0}](command:{1})","detectThenRunAndDebug":"[显示](command:{0})所有自动调试配置。","customizeRunAndDebug":"要自定义运行和调试[创建 launch.json 文件](command:{0})。","customizeRunAndDebugOpenFolder":"要自定义运行和调试，请[打开文件夹](command:{0}) 并创建一个启动.json 文件。"},"vs/workbench/contrib/debug/browser/debugQuickAccess":{"noDebugResults":"没有匹配的启动配置","customizeLaunchConfig":"配置启动配置","contributed":"已提供","providerAriaLabel":"{0} 已提供的配置","configure":"配置","addConfigTo":"添加配置({0})…","addConfiguration":"添加配置…"},"vs/workbench/contrib/debug/browser/debugIcons":{"debugConsoleViewIcon":"查看调试控制台视图的图标。","runViewIcon":"查看运行视图的图标。","variablesViewIcon":"查看变量视图的图标。","watchViewIcon":"查看监视视图的图标。","callStackViewIcon":"查看调用堆栈视图的图标。","breakpointsViewIcon":"查看断点视图的图标。","loadedScriptsViewIcon":"查看已加载脚本视图的图标。","debugBreakpoint":"断点的图标。","debugBreakpointDisabled":"已禁用的断点的图标。","debugBreakpointUnverified":"未验证的断点的图标。","debugBreakpointHint":"在编辑器字形边距中悬停时显示的断点提示的图标。","debugBreakpointFunction":"函数断点的图标。","debugBreakpointFunctionUnverified":"未验证的函数断点的图标。","debugBreakpointFunctionDisabled":"已禁用的函数断点的图标。","debugBreakpointUnsupported":"不受支持的断点的图标。","debugBreakpointConditionalUnverified":"未验证的条件断点的图标。","debugBreakpointConditional":"条件断点的图标。","debugBreakpointConditionalDisabled":"已禁用的条件断点的图标。","debugBreakpointDataUnverified":"未验证的数据断点的图标。","debugBreakpointData":"数据断点的图标。","debugBreakpointDataDisabled":"已禁用的数据断点的图标。","debugBreakpointLogUnverified":"未验证的日志断点的图标。","debugBreakpointLog":"日志断点的图标。","debugBreakpointLogDisabled":"已禁用的日志断点的图标。","debugStackframe":"编辑器字形边距中显示的堆栈帧的图标。","debugStackframeFocused":"编辑器字形边距中显示的具有焦点的堆栈帧的图标。","debugGripper":"调试条控制手柄的图标。","debugRestartFrame":"“调试重启帧”操作的图标。","debugStop":"“调试停止”操作的图标。","debugDisconnect":"“调试断开”操作的图标。","debugRestart":"“调试重启”操作的图标。","debugStepOver":"“调试越过子函数”操作的图标。","debugStepInto":"“调试进入子函数”的图标。","debugStepOut":"“调试跳出子函数”操作的图标。","debugStepBack":"“调试单步后退”操作的图标。","debugPause":"“调试暂停”操作的图标。","debugContinue":"“调试继续”操作的图标。","debugReverseContinue":"“调试反向继续”操作的图标。","debugStart":"“调试启动”操作的图标。","debugConfigure":"“调试配置”操作的图标。","debugConsole":"调试控制台的“打开”操作的图标。","debugCollapseAll":"调试视图中“全部折叠”操作的图标。","callstackViewSession":"“调用堆栈”视图中会话图标的图标。","debugConsoleClearAll":"调试控制台中“全部清除”操作的图标。","watchExpressionsRemoveAll":"监视视图中“全部删除”操作的图标。","watchExpressionsAdd":"监视视图中“添加”操作的图标。","watchExpressionsAddFuncBreakpoint":"监视视图中“添加函数断点”操作的图标。","breakpointsRemoveAll":"“断点”视图中“全部删除”操作的图标。","breakpointsActivate":"“断点”视图中“激活”操作的图标。","debugConsoleEvaluationInput":"调试评估输入标记的图标。","debugConsoleEvaluationPrompt":"调试评估提示的图标。"},"vs/workbench/contrib/debug/browser/exceptionWidget":{"debugExceptionWidgetBorder":"异常小组件边框颜色。","debugExceptionWidgetBackground":"异常小组件背景颜色。","exceptionThrownWithId":"发生异常: {0}","exceptionThrown":"出现异常。","close":"关闭"},"vs/workbench/contrib/debug/browser/debugHover":{"quickTip":"按住 {0} 键可切换到编辑器语言悬停","treeAriaLabel":"调试悬停","variableAriaLabel":"{0}，值 {1}，变量，调试"},"vs/workbench/contrib/debug/browser/breakpointWidget":{"breakpointWidgetLogMessagePlaceholder":"断点命中时记录的消息。{} 内的表达式将被替换。按 \\"Enter\\" 键确认，\\"Esc\\" 键取消。","breakpointWidgetHitCountPlaceholder":"在命中次数条件满足时中断。按 \\"Enter\\" 键确认，\\"Esc\\" 键取消。","breakpointWidgetExpressionPlaceholder":"在表达式结果为真时中断。按 \\"Enter\\" 键确认，\\"Esc\\" 键取消。","expression":"表达式","hitCount":"命中次数","logMessage":"日志消息","breakpointType":"断点类型"},"vs/workbench/contrib/debug/browser/debugActionViewItems":{"debugLaunchConfigurations":"调试启动配置","noConfigurations":"没有配置","addConfigTo":"添加配置({0})…","addConfiguration":"添加配置…","debugSession":"调试会话"},"vs/workbench/contrib/debug/browser/linkDetector":{"fileLinkMac":"按住 Cmd 并单击可访问链接","fileLink":"按住 Ctrl 并单击可访问链接"},"vs/workbench/contrib/debug/browser/replViewer":{"debugConsole":"调试控制台","replVariableAriaLabel":"变量 {0}，值 {1}","occurred":"，发生 {0} 次","replRawObjectAriaLabel":"调试控制台变量 {0}，值 {1}","replGroup":"调试控制器组 {0}"},"vs/workbench/contrib/debug/common/replModel":{"consoleCleared":"控制台已清除","snapshotObj":"仅显示了此对象的基元值。"},"vs/workbench/contrib/debug/browser/replFilter":{"showing filtered repl lines":"正在显示第 {0} 页(共 {1} 页)"},"vs/workbench/contrib/debug/node/debugAdapter":{"debugAdapterBinNotFound":"调试适配器可执行的“{0}”不存在。","debugAdapterCannotDetermineExecutable":"无法确定调试适配器“{0}”的可执行文件。","unableToLaunchDebugAdapter":"无法从“{0}”启动调试适配器。","unableToLaunchDebugAdapterNoArgs":"无法启动调试适配器。"},"vs/workbench/contrib/debug/common/debugModel":{"invalidVariableAttributes":"无效的变量属性","startDebugFirst":"请发起调试会话来对表达式求值","notAvailable":"不可用","pausedOn":"因 {0} 已暂停","paused":"已暂停","running":"正在运行","breakpointDirtydHover":"未验证的断点。对文件进行了修改，请重启调试会话。"},"vs/workbench/contrib/debug/browser/debugConfigurationManager":{"selectConfiguration":"选择启动配置","editLaunchConfig":"在 launch.json 中编辑调试配置","DebugConfig.failed":"无法在 \\".vscode\\" 文件夹({0})内创建 \\"launch.json\\" 文件。","workspace":"工作区","user settings":"用户设置"},"vs/workbench/contrib/debug/browser/debugSession":{"noDebugAdapter":"没有可用的调试程序，无法发送“{0}”","sessionNotReadyForBreakpoints":"会话还没有为断点做好准备","debuggingStarted":"已开始调试。","debuggingStopped":"已停止调试。"},"vs/workbench/contrib/debug/browser/debugTaskRunner":{"preLaunchTaskErrors":"运行 preLaunchTask“{0}”后存在错误。","preLaunchTaskError":"运行 preLaunchTask“{0}”后存在错误。","preLaunchTaskExitCode":"preLaunchTask“{0}”已终止，退出代码为 {1}。","preLaunchTaskTerminated":"启动前任务\\"{0}\\"终止。","debugAnyway":"仍要调试","showErrors":"显示错误","abort":"中止","remember":"记住我在用户设置中的选择","invalidTaskReference":"无法在其他工作区文件夹的启动配置中引用任务“{0}”。","DebugTaskNotFoundWithTaskId":"找不到任务“{0}”。","DebugTaskNotFound":"找不到指定的任务。","taskNotTrackedWithTaskId":"无法跟踪指定的任务。","taskNotTracked":"无法跟踪任务“{0}”。"},"vs/workbench/contrib/debug/browser/debugAdapterManager":{"debugNoType":"不可省略调试器的 \\"type\\" 属性，且其类型必须是 \\"string\\" 。","more":"更多...","selectDebug":"选择环境"},"vs/workbench/contrib/debug/common/debugSource":{"unknownSource":"未知源"},"vs/workbench/contrib/debug/common/debugSchemas":{"vscode.extension.contributes.debuggers":"用于调试适配器。","vscode.extension.contributes.debuggers.type":"此调试适配器的唯一标识符。","vscode.extension.contributes.debuggers.label":"显示此调试适配器的名称。","vscode.extension.contributes.debuggers.program":"调试适配器程序的路径。该路径是绝对路径或相对于扩展文件夹的相对路径。","vscode.extension.contributes.debuggers.args":"要传递给适配器的可选参数。","vscode.extension.contributes.debuggers.runtime":"可选运行时，以防程序属性不可执行，但需要运行时。","vscode.extension.contributes.debuggers.runtimeArgs":"可选运行时参数。","vscode.extension.contributes.debuggers.variables":"正在将 \\"launch. json\\" 中的交互式变量(例如 ${action.pickProcess})映射到命令。","vscode.extension.contributes.debuggers.initialConfigurations":"用于生成初始 \\"launch.json\\" 的配置。","vscode.extension.contributes.debuggers.languages":"可能被视为“默认调试程序”的调试扩展的语言列表。","vscode.extension.contributes.debuggers.configurationSnippets":"用于在 \\"launch.json\\" 中添加新配置的代码段。","vscode.extension.contributes.debuggers.configurationAttributes":"用于验证 \\"launch.json\\" 的 JSON 架构配置。","vscode.extension.contributes.debuggers.windows":"Windows 特定的设置。","vscode.extension.contributes.debuggers.windows.runtime":"用于 Windows 的运行时。","vscode.extension.contributes.debuggers.osx":"macOS 特定的设置。","vscode.extension.contributes.debuggers.osx.runtime":"用于 macOS 的运行时。","vscode.extension.contributes.debuggers.linux":"Linux 特定的设置。","vscode.extension.contributes.debuggers.linux.runtime":"用于 Linux 的运行时。","vscode.extension.contributes.breakpoints":"添加断点。","vscode.extension.contributes.breakpoints.language":"对此语言允许断点。","presentation":"有关如何在调试配置下拉列表和命令面板中显示此配置的演示选项。","presentation.hidden":"控制此配置是否应显示在配置下拉列表和命令面板中。","presentation.group":"此配置所属的组。用于在配置下拉列表和命令面板中分组和排序。","presentation.order":"此配置在组内的顺序。用于在配置下拉列表和命令面板中分组和排序。","app.launch.json.title":"启动","app.launch.json.version":"此文件格式的版本。","app.launch.json.configurations":"配置列表。使用 IntelliSense 添加新配置或编辑现有配置。","app.launch.json.compounds":"复合列表。每个复合可引用多个配置，这些配置将一起启动。","app.launch.json.compound.name":"复合的名称。在启动配置下拉菜单中显示。","useUniqueNames":"配置名称必须唯一。","app.launch.json.compound.folder":"复合项所在的文件夹的名称。","app.launch.json.compounds.configurations":"将作为此复合的一部分启动的配置名称。","app.launch.json.compound.stopAll":"控制手动终止一个会话是否将停止所有复合会话。","compoundPrelaunchTask":"要在任何复合配置开始之前运行的任务。"},"vs/workbench/contrib/debug/browser/rawDebugSession":{"noDebugAdapterStart":"没有调试适配器，无法启动调试会话。","noDebugAdapter":"未找到任何调试程序。无法发送“{0}”。","moreInfo":"详细信息"},"vs/workbench/contrib/debug/common/debugger":{"cannot.find.da":"找不到类型为 \\"{0}\\" 的调试适配器。","launch.config.comment1":"使用 IntelliSense 了解相关属性。 ","launch.config.comment2":"悬停以查看现有属性的描述。","launch.config.comment3":"欲了解更多信息，请访问: {0}","debugType":"配置类型。","debugTypeNotRecognised":"无法识别此调试类型。确保已经安装并启用相应的调试扩展。","node2NotSupported":"不再支持 \\"node2\\"，改用 \\"node\\"，并将 \\"protocol\\" 属性设为 \\"inspector\\"。","debugName":"配置名称；显示在启动配置下拉菜单中。","debugRequest":"请求配置类型。可以是“启动”或“附加”。","debugServer":"仅用于调试扩展开发: 如果已指定端口，VS 代码会尝试连接到在服务器模式中运行的调试适配器","debugPrelaunchTask":"调试会话开始前要运行的任务。","debugPostDebugTask":"调试会话结束后运行的任务。","debugWindowsConfiguration":"特定于 Windows 的启动配置属性。","debugOSXConfiguration":"特定于 OS X 的启动配置属性。","debugLinuxConfiguration":"特定于 Linux 的启动配置属性。"},"vs/workbench/contrib/dialogs/browser/dialogHandler":{"yesButton":"是(&&Y)","cancelButton":"取消","aboutDetail":"版本: {0}\\r\\n提交: {1}\\r\\n日期: {2}\\r\\n浏览器: {3}","copy":"复制","ok":"确定"},"vs/workbench/contrib/dialogs/electron-sandbox/dialogHandler":{"yesButton":"是(&&Y)","cancelButton":"取消","aboutDetail":"版本: {0}\\r\\n提交: {1}\\r\\n日期: {2}\\r\\nElectron: {3}\\r\\nChrome: {4}\\r\\nNode.js: {5}\\r\\nV8: {6}\\r\\nOS: {7}","okButton":"确定","copy":"复制(&&C)"},"vs/workbench/contrib/emmet/browser/actions/expandAbbreviation":{"expandAbbreviationAction":"Emmet: 展开缩写","miEmmetExpandAbbreviation":"Emmet: 展开缩写(&&X)"},"vs/workbench/contrib/experiments/browser/experiments.contribution":{"workbench.enableExperiments":"从 Microsoft 联机服务中获取要进行的实验。"},"vs/workbench/contrib/extensions/electron-browser/extensions.contribution":{"runtimeExtension":"正在运行的扩展"},"vs/workbench/contrib/extensions/electron-browser/runtimeExtensionsEditor":{"extensionHostProfileStart":"开始分析扩展宿主","stopExtensionHostProfileStart":"停止分析扩展宿主","saveExtensionHostProfile":"保存扩展宿主分析文件"},"vs/workbench/contrib/extensions/electron-browser/debugExtensionHostAction":{"debugExtensionHost":"启动调试扩展宿主","restart1":"分析扩展","restart2":"需要重启，才能分析扩展。是否要立即重启“{0}”?","restart3":"重启(&&R)","cancel":"取消(&&C)","debugExtensionHost.launch.name":"附加扩展主机"},"vs/workbench/contrib/extensions/electron-browser/extensionProfileService":{"profilingExtensionHost":"分析扩展主机","selectAndStartDebug":"单击可停止分析。","profilingExtensionHostTime":"分析扩展主机({0} 秒)","status.profiler":"扩展探查器","restart1":"分析扩展","restart2":"需要重启，才能分析扩展。是否要立即重启“{0}”?","restart3":"重启(&&R)","cancel":"取消(&&C)"},"vs/workbench/contrib/extensions/common/runtimeExtensionsInput":{"extensionsInputName":"正在运行的扩展"},"vs/workbench/contrib/extensions/electron-browser/extensionsAutoProfiler":{"unresponsive-exthost":"扩展“{0}”的上一次操作花费时间较长，阻碍了其他扩展的运行。","show":"显示扩展程序"},"vs/workbench/contrib/extensions/electron-sandbox/extensionsActions":{"openExtensionsFolder":"打开扩展文件夹"},"vs/workbench/contrib/extensions/browser/extensions.contribution":{"manageExtensionsQuickAccessPlaceholder":"按 Enter 以管理扩展。","manageExtensionsHelp":"管理扩展","installVSIX":"安装扩展 VSIX","extension":"扩展","extensions":"扩展","extensionsConfigurationTitle":"扩展","extensionsAutoUpdate":"启用后，将自动安装扩展更新。更新将从 Microsoft 联机服务中获取。","extensionsCheckUpdates":"启用后，将自动检查扩展更新。若扩展存在更新，将在“扩展”视图中将其标记为过时扩展。更新将从 Microsoft 联机服务中获取。","extensionsIgnoreRecommendations":"启用后，将不会显示扩展建议的通知。","extensionsShowRecommendationsOnlyOnDemand_Deprecated":"已弃用此设置。使用 extensions.ignoreRecommendations 设置来控制建议通知。默认使用“扩展”视图的可见性操作来隐藏“建议”视图。","extensionsCloseExtensionDetailsOnViewChange":"启用后，将在离开“扩展”视图时，自动关闭扩展详细信息页面。","handleUriConfirmedExtensions":"当此处列出扩展名时，该扩展名处理URI时将不会显示确认提示。","extensionsWebWorker":"启用 Web Worker 扩展主机。","workbench.extensions.installExtension.description":"安装给定的扩展","workbench.extensions.installExtension.arg.name":"扩展 ID 或 VSIX 资源 URI","notFound":"找不到扩展“{0}”。","InstallVSIXAction.successReload":"已完成从 VSIX 安装 {0} 扩展的过程。请重新加载 Visual Studio Code 以启用它。","InstallVSIXAction.success":"已完成从 VSIX 安装 {0} 扩展的过程。","InstallVSIXAction.reloadNow":"立即重载","workbench.extensions.uninstallExtension.description":"卸载给定的扩展","workbench.extensions.uninstallExtension.arg.name":"要卸载的扩展的 id","id required":"扩展 ID 是必需的。","notInstalled":"未安装扩展“{0}”。请确保你使用包括发布者的完整的扩展 ID，例如 ms-vscode.csharp。","builtin":"扩展“{0}”是内置扩展，无法安装","workbench.extensions.search.description":"搜索特定扩展","workbench.extensions.search.arg.name":"要在搜索中使用的查询","miOpenKeymapExtensions":"键映射(&&K)","miOpenKeymapExtensions2":"键映射","miPreferencesExtensions":"扩展(&&E)","miViewExtensions":"扩展(&&X)","showExtensions":"扩展","installExtensionQuickAccessPlaceholder":"键入要安装或搜索的扩展的名称。","installExtensionQuickAccessHelp":"安装或搜索扩展","workbench.extensions.action.copyExtension":"复制","extensionInfoName":"名称: {0}","extensionInfoId":"ID: {0}","extensionInfoDescription":"说明: {0}","extensionInfoVersion":"版本: {0}","extensionInfoPublisher":"发布者: {0}","extensionInfoVSMarketplaceLink":"VS Marketplace 链接: {0}","workbench.extensions.action.copyExtensionId":"复制扩展 ID","workbench.extensions.action.configure":"扩展设置","workbench.extensions.action.toggleIgnoreExtension":"同步此扩展","workbench.extensions.action.ignoreRecommendation":"忽略建议","workbench.extensions.action.undoIgnoredRecommendation":"撤消已忽略的建议","workbench.extensions.action.addExtensionToWorkspaceRecommendations":"添加到工作区建议","workbench.extensions.action.removeExtensionFromWorkspaceRecommendations":"从工作区建议中删除","workbench.extensions.action.addToWorkspaceRecommendations":"将扩展添加到工作区“建议”","workbench.extensions.action.addToWorkspaceFolderRecommendations":"将扩展添加到工作区文件夹“建议”","workbench.extensions.action.addToWorkspaceIgnoredRecommendations":"将扩展添加到工作区“已忽略的建议”","workbench.extensions.action.addToWorkspaceFolderIgnoredRecommendations":"将扩展添加到工作区文件夹“已忽略的建议”"},"vs/workbench/contrib/extensions/browser/extensionsViewlet":{"installed":"已安装","popularExtensions":"热门","recommendedExtensions":"推荐","enabledExtensions":"已启用","disabledExtensions":"已禁用","marketPlace":"商店","enabled":"已启用","disabled":"已禁用","outdated":"已过期","builtin":"内置","workspaceRecommendedExtensions":"工作区推荐","otherRecommendedExtensions":"其他推荐","builtinFeatureExtensions":"功能","builtInThemesExtensions":"主题","builtinProgrammingLanguageExtensions":"编程语言","sort by installs":"安装计数","sort by rating":"评分","sort by name":"名称","sort by date":"发布日期","searchExtensions":"在应用商店中搜索扩展","builtin filter":"内置","installed filter":"已安装","enabled filter":"已启用","disabled filter":"已禁用","outdated filter":"已过期","featured filter":"特色","most popular filter":"最热门","most popular recommended":"推荐","recently published filter":"最近发布","filter by category":"类别","sorty by":"排序依据","filterExtensions":"筛选器扩展…","extensionFoundInSection":"在“{0}”小节中找到 1 个扩展。","extensionFound":"找到 1 个扩展。","extensionsFoundInSection":"在“{1}”小节中找到 {0} 个扩展。","extensionsFound":"找到 {0} 个扩展。","suggestProxyError":"市场返回了 \\"ECONNREFUSED\\"。请检查 \\"http.proxy\\" 设置。","open user settings":"打开用户设置","outdatedExtensions":"{0} 个过时的扩展","malicious warning":"我们卸载了“{0}”，它被报告存在问题。","reloadNow":"立即重新加载"},"vs/workbench/contrib/extensions/electron-browser/extensionsSlowActions":{"cmd.reportOrShow":"性能问题","cmd.report":"报告问题","attach.title":"您是否附上了 cpu 配置文件？","ok":"确定","attach.msg":"这是一个提醒, 以确保您没有忘记将 \\"{0}\\" 附加到刚刚创建的问题。","cmd.show":"显示问题","attach.msg2":"这是一个提醒, 以确保您没有忘记将 \\"{0}\\" 归入现有的性能问题中。"},"vs/workbench/contrib/extensions/electron-browser/reportExtensionIssueAction":{"reportExtensionIssue":"报告问题"},"vs/workbench/contrib/extensions/browser/abstractRuntimeExtensionsEditor":{"starActivation":"已在启动时由 {0} 激活","workspaceContainsGlobActivation":"已由 {1} 激活，因为你的工作区中存在与 {1} 匹配的文件","workspaceContainsFileActivation":"已由 {1} 激活，因为你的工作区中存在文件 {0}","workspaceContainsTimeout":"因搜索 {0} 耗时太长而被 {1} 激活","startupFinishedActivation":"启动完成后已由 {0} 激活","languageActivation":"因你打开 {0} 文件而被 {1} 激活","workspaceGenericActivation":"已由 {1} 在 {0} 时激活","unresponsive.title":"扩展已导致扩展主机冻结。","errors":"{0} 个未捕获的错误","runtimeExtensions":"运行时扩展","disable workspace":"禁用(工作区)","disable":"禁用","showRuntimeExtensions":"显示正在运行的扩展"},"vs/workbench/contrib/extensions/common/extensionsInput":{"extensionsInputName":"扩展: {0}"},"vs/workbench/contrib/extensions/browser/extensionsActions":{"noOfYearsAgo":"{0} 年前","one year ago":"1年前","noOfMonthsAgo":"{0} 个月前","one month ago":"1个月前","noOfDaysAgo":"{0} 天前","one day ago":"1天前","noOfHoursAgo":"{0} 小时前","one hour ago":"1小时前","just now":"刚刚","update operation":"更新 \\"{0}\\" 扩展时出错。","install operation":"安装 \\"{0}\\" 扩展时出错。","download":"请尝试手动下载…","install vsix":"下载后，请手动安装“{0}”的 VSIX。","check logs":"有关更多详细信息，请查看[日志]({0})。","installExtensionStart":"已启动安装扩展 {0}。将打开编辑器，显示此扩展的更多详细信息。","installExtensionComplete":"已完成安装扩展 {0}。","install":"安装","install and do no sync":"安装(不同步)","install in remote and do not sync":"在 {0} 中安装(不同步)","install in remote":"在 {0} 中安装","install locally and do not sync":"本地安装(不同步)","install locally":"本地安装","install everywhere tooltip":"在所有同步的 {0} 实例中安装此扩展","installing":"正在安装","install browser":"在浏览器中安装","uninstallAction":"卸载","Uninstalling":"正在卸载","uninstallExtensionStart":"开始卸载扩展{0}。","uninstallExtensionComplete":"请重新加载 Visual Studio Code 以完成对扩展 {0} 的卸载。","updateExtensionStart":"已启动更新扩展 {0} 到版本 {1}。","updateExtensionComplete":"已完成更新扩展 {0} 到版本 {1}。","updateTo":"更新到 {0}","updateAction":"更新","manage":"管理","ManageExtensionAction.uninstallingTooltip":"正在卸载","install another version":"安装另一个版本…","selectVersion":"选择要安装的版本","current":"当前","enableForWorkspaceAction":"启用(工作区)","enableForWorkspaceActionToolTip":"仅在此工作区中启用此扩展","enableGloballyAction":"启用","enableGloballyActionToolTip":"启用此扩展","disableForWorkspaceAction":"禁用(工作区)","disableForWorkspaceActionToolTip":"仅在此工作区中禁用此扩展","disableGloballyAction":"禁用","disableGloballyActionToolTip":"禁用此扩展","enableAction":"启用","disableAction":"禁用","checkForUpdates":"检查扩展更新","noUpdatesAvailable":"所有扩展都是最新的。","singleUpdateAvailable":"1 个扩展存在更新。","updatesAvailable":"{0} 个扩展存在更新。","singleDisabledUpdateAvailable":"1 个禁用扩展存在更新。","updatesAvailableOneDisabled":"{0} 个扩展存在更新。其中 1 个是禁用扩展。","updatesAvailableAllDisabled":"{0} 个扩展存在更新。其全部为禁用扩展。","updatesAvailableIncludingDisabled":"{0} 个扩展存在更新。其中 {1} 个是禁用扩展。","enableAutoUpdate":"启用自动更新扩展","disableAutoUpdate":"禁用自动更新扩展","updateAll":"更新所有扩展","reloadAction":"重新加载","reloadRequired":"需要重新加载","postUninstallTooltip":"请重新加载 Visual Studio Code 以完成此扩展的卸载。","postUpdateTooltip":"请重新启动 Visual Studio Code 以完成对此扩展的更新。","enable locally":"请重载 Visual Studio Code 以在本地启用此扩展。","enable remote":"请重载 Visual Studio Code 以在 {0} 中启用此扩展。","postEnableTooltip":"请重新加载 Visual Studio Code 以启用此扩展。","postDisableTooltip":"请重新加载 Visual Studio Code 以禁用此扩展。","installExtensionCompletedAndReloadRequired":"已完成安装扩展 {0}。请重载 Visual Studio Code 以启用。","color theme":"设置颜色主题","select color theme":"选择颜色主题","file icon theme":"设置文件图标主题","select file icon theme":"选择文件图标主题","product icon theme":"设置产品图标主题","select product icon theme":"选择产品图标主题","toggleExtensionsViewlet":"显示扩展程序","installExtensions":"安装扩展","showEnabledExtensions":"显示启用的扩展","showInstalledExtensions":"显示已安装扩展","showDisabledExtensions":"显示已禁用的扩展","clearExtensionsSearchResults":"清除扩展搜索结果","refreshExtension":"刷新","showBuiltInExtensions":"显示内置的扩展","showOutdatedExtensions":"显示过时的扩展","showPopularExtensions":"显示常用的扩展","recentlyPublishedExtensions":"最近发布的扩展","showRecommendedExtensions":"显示推荐的扩展","showRecommendedExtension":"显示推荐的扩展","installRecommendedExtension":"安装推荐的扩展","ignoreExtensionRecommendation":"不再推荐此扩展","undo":"撤消","showRecommendedKeymapExtensionsShort":"键映射","showLanguageExtensionsShort":"语言扩展","search recommendations":"搜索扩展","OpenExtensionsFile.failed":"无法在 \\".vscode\\" 文件夹({0})内创建 \\"extensions.json\\" 文件。","configureWorkspaceRecommendedExtensions":"配置建议的扩展(工作区)","configureWorkspaceFolderRecommendedExtensions":"配置建议的扩展(工作区文件夹)","updated":"已更新","installed":"已安装","uninstalled":"已卸载","enabled":"已启用","disabled":"已禁用","malicious tooltip":"此扩展被报告存在问题。","malicious":"恶意","ignored":"同步时将忽略此扩展","synced":"已同步此扩展","sync":"同步此扩展","do not sync":"不同步此扩展","extension enabled on remote":"已在“{0}”上启用扩展","globally enabled":"此扩展已全局启用。","workspace enabled":"用户已为此工作区启用此扩展。","globally disabled":"用户已全局禁用此扩展。","workspace disabled":"用户已为此工作区禁用此扩展。","Install language pack also in remote server":"在“{0}”上安装语言包扩展，使其还在此处启用。","Install language pack also locally":"在本地安装语言包扩展，使其还在此处启用。","Install in other server to enable":"在“{0}”上安装扩展以启用。","disabled because of extension kind":"此扩展已定义指示它无法在远程服务器上运行","disabled locally":"已在“{0}”上启用此扩展，且已在本地禁用它。","disabled remotely":"已在本地启用此扩展，且已在“{0}”上禁用它。","disableAll":"禁用所有已安装的扩展","disableAllWorkspace":"禁用此工作区的所有已安装的扩展","enableAll":"启用所有扩展","enableAllWorkspace":"启用这个工作区的所有扩展","installVSIX":"从 VSIX 安装...","installFromVSIX":"从 VSIX 文件安装","installButton":"安装(&&I)","reinstall":"重新安装扩展...","selectExtensionToReinstall":"选择要重新安装的扩展","ReinstallAction.successReload":"请重新加载 Visual Studio Code 以完成扩展 {0} 的重新安装。","ReinstallAction.success":"扩展 {0} 重新安装完毕。","InstallVSIXAction.reloadNow":"立即重新加载","install previous version":"安装特定版本的扩展…","selectExtension":"选择扩展","InstallAnotherVersionExtensionAction.successReload":"请重新加载 Visual Studio Code 以完成扩展 {0} 的安装。","InstallAnotherVersionExtensionAction.success":"扩展 {0} 安装完毕。","InstallAnotherVersionExtensionAction.reloadNow":"立即重新加载","select extensions to install":"选择要安装的扩展","no local extensions":"没有要安装的扩展。","installing extensions":"正在安装扩展...","finished installing":"已成功安装扩展。","select and install local extensions":"在“{0}”中安装本地扩展…","install local extensions title":"在“{0}”中安装本地扩展","select and install remote extensions":"本地安装远程扩展…","install remote extensions":"本地安装远程扩展","extensionButtonProminentBackground":"扩展中突出操作的按钮背景色(比如 安装按钮)。","extensionButtonProminentForeground":"扩展中突出操作的按钮前景色(比如 安装按钮)。","extensionButtonProminentHoverBackground":"扩展中突出操作的按钮被悬停时的颜色(比如 安装按钮)。"},"vs/workbench/contrib/extensions/common/extensionsFileTemplate":{"app.extensions.json.title":"扩展","app.extensions.json.recommendations":"向此工作区的用户推荐的扩展列表。扩展的标识符始终为 \\"${publisher}.${name}\\"。例如: \\"vscode.csharp\\"。","app.extension.identifier.errorMessage":"预期的格式 \\"${publisher}.${name}\\"。例如: \\"vscode.csharp\\"。","app.extensions.json.unwantedRecommendations":"不应向此工作区的用户推荐的扩展列表。扩展的标识符始终为 \\"${publisher}.${name}\\"。例如: \\"vscode.csharp\\"。"},"vs/workbench/contrib/extensions/browser/extensionEditor":{"name":"扩展名","extension id":"扩展标识符","preview":"预览版","builtin":"内置","publisher":"发布者名称","install count":"安装计数","rating":"评分","repository":"存储库","license":"许可证","version":"版本","details":"细节","detailstooltip":"扩展详细信息，显示扩展的 \\"README.md\\" 文件。","contributions":"功能贡献","contributionstooltip":"包含此扩展向 VS Code 编辑器提供的功能","changelog":"更改日志","changelogtooltip":"扩展的更新历史，显示扩展的 \\"CHANGELOG.md\\" 文件。","dependencies":"依赖项","dependenciestooltip":"包含此扩展依赖的扩展","recommendationHasBeenIgnored":"您已选择不接收此扩展的推荐。","noReadme":"无可用自述文件。","extension pack":"扩展包({0})","noChangelog":"无可用的更改日志。","noContributions":"没有发布内容","noDependencies":"没有依赖项","settings":"设置({0})","setting name":"名称","description":"说明","default":"默认值","debuggers":"调试程序({0})","debugger name":"名称","debugger type":"类型","viewContainers":"视图容器 ({0})","view container id":"ID","view container title":"标题","view container location":"位置","views":"视图 ({0})","view id":"ID","view name":"名称","view location":"位置","localizations":"本地化 ({0})","localizations language id":"语言 ID","localizations language name":"语言名称","localizations localized language name":"语言本地名称","customEditors":"自定义编辑器({0})","customEditors view type":"视图类型","customEditors priority":"优先级","customEditors filenamePattern":"文件名模式","codeActions":"代码操作({0})","codeActions.title":"标题","codeActions.kind":"种类","codeActions.description":"说明","codeActions.languages":"语言","authentication":"身份验证({0})","authentication.label":"标签","authentication.id":"ID","colorThemes":"颜色主题 ({0})","iconThemes":"图标主题 ({0})","colors":"颜色 ({0})","colorId":"ID","defaultDark":"深色默认","defaultLight":"浅色默认","defaultHC":"高对比度默认","JSON Validation":"JSON 验证({0})","fileMatch":"匹配文件","schema":"结构","commands":"命令({0})","command name":"名称","keyboard shortcuts":"键盘快捷方式","menuContexts":"菜单上下文","languages":"语言({0})","language id":"ID","language name":"名称","file extensions":"文件扩展名","grammar":"语法","snippets":"片段","activation events":"激活事件({0})","find":"查找","find next":"查找下一个","find previous":"查找前一个"},"vs/workbench/contrib/extensions/common/extensionsUtils":{"disableOtherKeymapsConfirmation":"是否禁用其他按键映射扩展 ({0})，从而避免按键绑定之间的冲突?","yes":"是","no":"否"},"vs/workbench/contrib/extensions/browser/extensionsActivationProgress":{"activation":"正在激活扩展..."},"vs/workbench/contrib/extensions/browser/extensionsDependencyChecker":{"extensions":"扩展","auto install missing deps":"安装缺少的依赖项","finished installing missing deps":"缺少的依赖项已安装完毕。请立即重新加载窗口。","reload":"重新加载窗口","no missing deps":"没有任何缺少的依赖项待安装。"},"vs/workbench/contrib/extensions/browser/remoteExtensionsInstaller":{"remote":"远程","install remote in local":"本地安装远程扩展…"},"vs/workbench/contrib/extensions/browser/extensionsWorkbenchService":{"Manifest is not found":"未找到清单文件","malicious":"报告称该扩展存在问题。","uninstallingExtension":"正在卸载扩展...","incompatible":"无法安装扩展名\'{0}\'，因为它不兼容 VS Code \'{1}\'。","installing named extension":"正在安装 \\"{0}\\" 扩展...","installing extension":"正在安装扩展...","disable all":"全部禁用","singleDependentError":"无法单独禁用 \\"{0}\\" 扩展。\\"{1}\\" 扩展依赖于此扩展。要禁用所有这些扩展吗?","twoDependentsError":"无法单独禁用 \\"{0}\\" 扩展。\\"{1}\\" 和 \\"{2}\\" 扩展依赖于此扩展。要禁用所有这些扩展吗?","multipleDependentsError":"无法单独禁用 \\"{0}\\" 扩展。\\"{1}\\"、\\"{2}\\" 和其他扩展依赖于此扩展。要禁用所有这些扩展吗?"},"vs/workbench/contrib/extensions/browser/extensionsQuickAccess":{"type":"键入扩展名称进行安装或搜索。","searchFor":"按 Enter 以搜索扩展\\"{0}\\"。","install":"按 Enter 来安装扩展“{0}”。","manage":"按 Enter 来管理扩展。"},"vs/workbench/contrib/extensions/browser/extensionRecommendationNotificationService":{"neverShowAgain":"不再显示","ignoreExtensionRecommendations":"是否要忽略所有扩展建议?","ignoreAll":"是，全部忽略","no":"否","workspaceRecommended":"是否要为此存储库安装推荐的扩展?","install":"安装","install and do no sync":"安装(不同步)","show recommendations":"显示建议"},"vs/workbench/contrib/extensions/browser/extensionsIcons":{"extensionsViewIcon":"查看扩展视图的图标。","manageExtensionIcon":"扩展视图中“管理”操作的图标。","clearSearchResultsIcon":"扩展视图中“清除搜索结果”操作的图标。","refreshIcon":"扩展视图中“刷新”操作的图标。","filterIcon":"扩展视图中“筛选器”操作的图标。","installLocalInRemoteIcon":"扩展视图中“在远程安装本地扩展”操作的图标。","installWorkspaceRecommendedIcon":"扩展视图中“安装工作区建议的扩展”操作的图标。","configureRecommendedIcon":"扩展视图中“配置建议的扩展”操作的图标。","syncEnabledIcon":"用于指示扩展已同步的图标。","syncIgnoredIcon":"用于指示在同步时忽略扩展的图标。","remoteIcon":"用于在扩展视图和编辑器中指示扩展是远程内容的图标。","installCountIcon":"扩展视图和编辑器中随安装计数一起显示的图标。","ratingIcon":"扩展视图和编辑器中随评级一起显示的图标。","starFullIcon":"扩展编辑器中用于评级的实心星形图标。","starHalfIcon":"扩展编辑器中用于评级的半星图标。","starEmptyIcon":"扩展编辑器中用于评级的中空星形图标。","warningIcon":"扩展编辑器中随警告消息一同显示的图标。","infoIcon":"扩展编辑器中随信息消息一同显示的图标。"},"vs/workbench/contrib/extensions/browser/extensionsViews":{"extension-arialabel":"{0}，{1}，{2}，按 Enter 获取扩展详细信息。","extensions":"扩展","galleryError":"现在无法连接到扩展商店，请稍后再试。","error":"加载扩展时出错。{0}","no extensions found":"找不到扩展。","suggestProxyError":"市场返回了 \\"ECONNREFUSED\\"。请检查 \\"http.proxy\\" 设置。","open user settings":"打开用户设置","installWorkspaceRecommendedExtensions":"安装工作区建议的扩展"},"vs/workbench/contrib/extensions/browser/extensionsWidgets":{"ratedBySingleUser":"评价来自 1 位用户","ratedByUsers":"评价来自 {0} 位用户","noRating":"没有评分","remote extension title":"{0} 中的扩展","syncingore.label":"此扩展在同步期间被忽略。"},"vs/workbench/contrib/extensions/browser/extensionsViewer":{"error":"错误","Unknown Extension":"未知扩展:","extension-arialabel":"{0}，{1}，{2}，按 Enter 获取扩展详细信息。","extensions":"扩展"},"vs/workbench/contrib/extensions/browser/dynamicWorkspaceRecommendations":{"dynamicWorkspaceRecommendation":"你可能有兴趣了解此扩展，因为它在 {0} 存储库的用户当中备受欢迎。"},"vs/workbench/contrib/extensions/browser/exeBasedRecommendations":{"exeBasedRecommendation":"由于你已安装 {0}，建议使用此扩展。"},"vs/workbench/contrib/extensions/browser/workspaceRecommendations":{"workspaceRecommendation":"当前工作区的用户建议使用此扩展。"},"vs/workbench/contrib/extensions/browser/fileBasedRecommendations":{"searchMarketplace":"在市场中搜索","fileBasedRecommendation":"根据你最近打开的文件，建议使用此扩展。","reallyRecommended":"是否要为 {0} 安装推荐的扩展?","showLanguageExtensions":"市场具有可在“.{0}”文件方面提供帮助的扩展","dontShowAgainExtension":"不再为“.{0}”文件显示"},"vs/workbench/contrib/extensions/browser/configBasedRecommendations":{"exeBasedRecommendation":"由于当前工作区配置，建议使用此扩展"},"vs/workbench/contrib/externalTerminal/node/externalTerminal.contribution":{"globalConsoleAction":"打开新的外部终端","terminalConfigurationTitle":"外部终端","terminal.explorerKind.integrated":"使用 VS Code 的集成终端。","terminal.explorerKind.external":"使用设定的外部终端。","explorer.openInTerminalKind":"自定义要启动的终端类型。","terminal.external.windowsExec":"自定义要在 Windows 上运行的终端。","terminal.external.osxExec":"定义在 macOS 上运行的终端应用程序。","terminal.external.linuxExec":"自定义要在 Linux 上运行的终端。"},"vs/workbench/contrib/externalTerminal/node/externalTerminalService":{"console.title":"VS Code 控制台","mac.terminal.script.failed":"脚本“{0}”失败，退出代码为 {1}","mac.terminal.type.not.supported":"不支持“{0}”","press.any.key":"按任意键继续...","linux.term.failed":"“{0}”失败，退出代码为 {1}","ext.term.app.not.found":"找不到终端应用程序 \\"{0}\\""},"vs/workbench/contrib/externalTerminal/browser/externalTerminal.contribution":{"scopedConsoleAction":"在终端中打开","scopedConsoleAction.integrated":"在集成终端中打开","scopedConsoleAction.wt":"在 Windows 终端中打开","scopedConsoleAction.external":"在外部终端中打开"},"vs/workbench/contrib/feedback/browser/feedbackStatusbarItem":{"status.feedback":"Tweet 反馈"},"vs/workbench/contrib/feedback/browser/feedback":{"sendFeedback":"Tweet 反馈","label.sendASmile":"通过 Tweet 向我们发送反馈。","close":"关闭","patchedVersion1":"安装已损坏。","patchedVersion2":"如果提交了 bug，请指定此项。","sentiment":"您的体验如何?","smileCaption":"正面反馈情绪","frownCaption":"负面反馈情绪","other ways to contact us":"联系我们的其他方式","submit a bug":"提交 bug","request a missing feature":"请求缺失功能","tell us why":"告诉我们原因?","feedbackTextInput":"告诉我们您的反馈意见","showFeedback":"在状态栏中显示反馈图标","tweet":"推文","tweetFeedback":"Tweet 反馈","character left":"剩余字符","characters left":"剩余字符"},"vs/workbench/contrib/files/electron-sandbox/files.contribution":{"textFileEditor":"文本文件编辑器"},"vs/workbench/contrib/files/electron-sandbox/fileActions.contribution":{"revealInWindows":"在文件资源管理器中显示","revealInMac":"在 Finder 中显示","openContainer":"打开所在的文件夹","filesCategory":"文件"},"vs/workbench/contrib/files/browser/explorerViewlet":{"explorerViewIcon":"查看资源管理器视图的图标。","folders":"文件夹","explore":"资源管理器","noWorkspaceHelp":"尚未将文件夹添加到工作区。\\r\\n[添加文件夹](command:{0})","remoteNoFolderHelp":"已连接到远程。\\r\\n[打开文件夹](command:{0})","noFolderHelp":"尚未打开文件夹。\\r\\n[打开文件夹](command:{0})"},"vs/workbench/contrib/files/browser/files.contribution":{"showExplorerViewlet":"显示资源管理器","binaryFileEditor":"二进制文件编辑器","hotExit.off":"禁用热退出。尝试关闭带有已更新文件的窗口时，将显示提示。","hotExit.onExit":"触发 \\"workbench.action.quit\\" 命令(命令面板、键绑定、菜单)或在 Windows/Linux 上关闭最后一个窗口时，将触发热退出。所有未打开文件夹的窗口都将在下次启动时恢复。可通过“文件”>“打开最近使用的文件”>“更多...”，访问包含未保存的文件的工作区列表。","hotExit.onExitAndWindowClose":"触发 \\"workbench.action.quit\\" 命令(命令面板、键绑定、菜单)或在 Windows/Linux 上关闭最后一个窗口时将触发热退出，还将对已打开文件夹的所有窗口触发热退出(无论是否是最后一个窗口)。所有未打开文件夹的窗口将在下次启动时恢复。可通过“文件”>“打开最近使用的文件”>“更多…”，访问包含未保存的文件的工作区列表。","hotExit":"控制是否在会话间记住未保存的文件，以允许在退出编辑器时跳过保存提示。","hotExit.onExitAndWindowCloseBrowser":"当浏览器退出或窗口或选项卡关闭时，将触发热退出。","filesConfigurationTitle":"文件","exclude":"配置用于排除文件和文件夹的 glob 模式。例如，文件资源管理器根据此设置决定要显示或隐藏的文件和文件夹。请参阅 `#search.exclude#` 设置以定义特定于搜索的排除。在[此处](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options)详细了解 glob 模式。","files.exclude.boolean":"匹配文件路径所依据的 glob 模式。设置为 true 或 false 可启用或禁用该模式。","files.exclude.when":"对匹配文件的同级文件的其他检查。使用 $(basename) 作为匹配文件名的变量。","associations":"配置语言的文件关联 (如: `\\"*.extension\\": \\"html\\"`)。这些关联的优先级高于已安装语言的默认关联。","encoding":"在读取和写入文件时使用的默认字符集编码。可以按语言对此项进行配置。","autoGuessEncoding":"启用后，将在文件打开时尝试猜测字符集编码。可以按语言对此项进行配置。","eol.LF":"LF","eol.CRLF":"CRLF","eol.auto":"使用具体操作系统规定的行末字符。","eol":"默认行尾字符。","useTrash":"在删除文件或文件夹时，将它们移动到操作系统的“废纸篓”中 (Windows 为“回收站”)。禁用此设置将永久删除文件或文件夹。","trimTrailingWhitespace":"启用后，将在保存文件时删除行尾的空格。","insertFinalNewline":"启用后，保存文件时在文件末尾插入一个最终新行。","trimFinalNewlines":"启用后，保存文件时将删除在最终新行后的所有新行。","files.autoSave.off":"未保存的编辑器永远不会自动保存。","files.autoSave.afterDelay":"将在配置的 \\"#files.autoSaveDelay#\\" 后自动保存未保存的编辑器。","files.autoSave.onFocusChange":"当编辑器失去焦点时，将自动保存未保存的编辑器。","files.autoSave.onWindowChange":"当窗口失去焦点时，将自动保存未保存的编辑器。","autoSave":"控制自动保存未保存的编辑器。有关自动保存的详细信息，请参阅[此处](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save)。","autoSaveDelay":"控制自动保存未保存的编辑器之前经过的延迟(以毫秒为单位)。仅当 `#files.autoSave#` 设置为`{0}`时才适用。","watcherExclude":"配置文件路径的 glob 模式以从文件监视排除。模式必须在绝对路径上匹配(例如 ** 前缀或完整路径需正确匹配)。更改此设置需要重启。如果在启动时遇到 Code 消耗大量 CPU 时间，则可以排除大型文件夹以减少初始加载。","defaultLanguage":"分配给新文件的默认语言模式。如果配置为\\"${activeEditorLanguage}\\"，将使用当前活动文本编辑器的语言模式(如果有)。","maxMemoryForLargeFilesMB":"在打开大型文件时，控制 VS Code 可在重启后使用的内存。在命令行中指定 `--max-memory=新的大小` 参数可达到相同效果。","files.restoreUndoStack":"重新打开文件后，还原撤消堆栈。","askUser":"将拒绝保存并请求手动解决保存冲突。","overwriteFileOnDisk":"将通过在编辑器中用更改覆盖磁盘上的文件来解决保存冲突。","files.saveConflictResolution":"当文件保存到磁盘上并被另一个程序更改时，可能会发生保存冲突。 为了防止数据丢失，要求用户将编辑器中的更改与磁盘上的版本进行比较。 仅当经常遇到保存冲突错误时，才应更改此设置；如果不谨慎使用，可能会导致数据丢失。","files.simpleDialog.enable":"启用简单文件对话框。启用时，简单文件对话框将替换系统文件对话框。","formatOnSave":"在保存时格式化文件。格式化程序必须可用，延迟后文件不能保存，并且编辑器不能关闭。","everything":"设置整个文件的格式。","modification":"格式修改(需要源代码管理)。","formatOnSaveMode":"控制在保存时设置格式是设置整个文件格式还是仅设置修改内容的格式。仅当 \\"#editor.formatOnSave#\\" 为 \\"true\\" 时应用。","explorerConfigurationTitle":"文件资源管理器","openEditorsVisible":"“打开编辑器”窗格中显示的编辑器的数量。将其设置为 0 将隐藏“打开编辑器”窗格。","openEditorsSortOrder":"控制编辑器在“打开编辑器”窗格中的排序顺序。","sortOrder.editorOrder":"编辑器按编辑器标签显示的顺序排列。","sortOrder.alphabetical":"编辑器按字母顺序在每个编辑器组中进行排序。","autoReveal.on":"将显示和选择文件。","autoReveal.off":"不会显示和选择文件。","autoReveal.focusNoScroll":"文件不会滚动到视图中，但仍会获得焦点。","autoReveal":"控制资源管理器是否在打开文件时自动显示并选择。","enableDragAndDrop":"控制浏览器是否允许通过拖放移动文件和文件夹。此设置仅影响从浏览器内部拖放。","confirmDragAndDrop":"控制在资源管理器内拖放移动文件或文件夹时是否进行确认。","confirmDelete":"控制资源管理器是否在把文件删除到废纸篓时进行确认。","sortOrder.default":"按名称的字母顺序排列文件和文件夹。文件夹显示在文件前。","sortOrder.mixed":"按名称的字母顺序排列文件和文件夹。两者穿插显示。","sortOrder.filesFirst":"按名称的字母顺序排列文件和文件夹。文件显示在文件夹前。","sortOrder.type":"按扩展名的字母顺序排列文件和文件夹。文件夹显示在文件前。","sortOrder.modified":"按最后修改日期降序排列文件和文件夹。文件夹显示在文件前。","sortOrder":"控制文件和文件夹在资源管理器中的排列顺序。","explorer.decorations.colors":"控制文件修饰是否应使用颜色。","explorer.decorations.badges":"控制文件修饰是否应使用徽章。","simple":"在重复名称的末尾附加单词“copy”，后面可能跟一个数字","smart":"在重复名称的末尾添加一个数字。如果某个号码已经是名称的一部分，请尝试增加该号码","explorer.incrementalNaming":"选择在粘贴同名文件(夹)时要使用的重命名方式。","compressSingleChildFolders":"控制资源管理器是否应以紧凑形式呈现文件夹。在这种形式中，单个子文件夹将被压缩在组合的树元素中。例如，对 Java 包结构很有用。","miViewExplorer":"资源管理器(&&E)"},"vs/workbench/contrib/files/browser/fileActions.contribution":{"filesCategory":"文件","workspaces":"工作区","file":"文件","copyPath":"复制路径","copyRelativePath":"复制相对路径","revealInSideBar":"在侧边栏中显示","acceptLocalChanges":"使用所做的更改并覆盖文件内容","revertLocalChanges":"放弃所做的更改并恢复到文件内容","copyPathOfActive":"复制活动文件的路径","copyRelativePathOfActive":"复制活动文件的相对路径","saveAllInGroup":"全部保存在组中","saveFiles":"保存所有文件","revert":"还原文件","compareActiveWithSaved":"比较活动与已保存的文件","openToSide":"在侧边打开","saveAll":"全部保存","compareWithSaved":"与已保存文件比较","compareWithSelected":"与已选项目进行比较","compareSource":"选择以进行比较","compareSelected":"将已选项进行比较","close":"关闭","closeOthers":"关闭其他","closeSaved":"关闭已保存","closeAll":"全部关闭","explorerOpenWith":"打开方式…","cut":"剪切","deleteFile":"永久删除","newFile":"新建文件","openFile":"打开文件...","miNewFile":"新建文件(&&N)","miSave":"保存(&&S)","miSaveAs":"另存为(&&A)...","miSaveAll":"全部保存(&&L)","miOpen":"打开(&&O)...","miOpenFile":"打开文件(&&O)...","miOpenFolder":"打开文件夹(&&F)...","miOpenWorkspace":"打开工作区(&&K)...","miAutoSave":"自动保存(&&U)","miRevert":"还原文件(&&V)","miCloseEditor":"关闭编辑器(&&C)","miGotoFile":"转到文件(&&F)..."},"vs/workbench/contrib/files/electron-sandbox/fileCommands":{"openFileToReveal":"首先打开文件以展现"},"vs/workbench/contrib/files/common/editors/fileEditorInput":{"orphanedReadonlyFile":"{0} (已删除，只读)","orphanedFile":"{0} (已删除)","readonlyFile":"{0} (只读)"},"vs/workbench/contrib/files/electron-sandbox/textFileEditor":{"fileTooLargeForHeapError":"要打开此大小的文件, 您需要重新启动并允许它使用更多内存","relaunchWithIncreasedMemoryLimit":"以 {0}MB 重启","configureMemoryLimit":"配置内存限制"},"vs/workbench/contrib/files/browser/views/emptyView":{"noWorkspace":"无打开的文件夹"},"vs/workbench/contrib/files/browser/views/explorerView":{"explorerSection":"资源管理器部分: {0}"},"vs/workbench/contrib/files/browser/views/openEditorsView":{"openEditors":"打开的编辑器","dirtyCounter":"{0} 个未保存"},"vs/workbench/contrib/files/browser/editors/textFileSaveErrorHandler":{"userGuide":"通过编辑器工具栏中的操作，可撤消所做的更改，也可使用所做的更改覆盖文件的内容。","staleSaveError":"无法保存\\"{0}\\": 文件的内容较新。请将您的版本与文件内容进行比较，或用您的更改覆盖文件内容。","retry":"重试","discard":"放弃","readonlySaveErrorAdmin":"未能保存 \\"{0}\\": 文件是只读的。以管理员身份选择 \\"以管理员身份覆盖\\" 重试。","readonlySaveErrorSudo":"保存\\"{0}\\"失败: 文件为只读。选择“覆盖为Sudo”以用超级用户身份重试。","readonlySaveError":"未能保存 \\"{0}\\": 文件是只读的。可选择 \\"覆盖\\" 以尝试使其可写。","permissionDeniedSaveError":"无法保存“{0}”: 权限不足。选择“以管理员身份覆盖”可作为管理员重试。","permissionDeniedSaveErrorSudo":"保存 \\"{0}\\"失败: 权限不足。选择 \\"以超级用户身份重试\\" 以超级用户身份重试。","genericSaveError":"未能保存“{0}”: {1}","learnMore":"了解详细信息","dontShowAgain":"不再显示","compareChanges":"比较","saveConflictDiffLabel":"{0} (在文件中) ↔ {1} (在 {2} 中) - 解决保存冲突","overwriteElevated":"以管理员身份覆盖...","overwriteElevatedSudo":"以超级用户身份覆盖...","saveElevated":"以管理员身份重试...","saveElevatedSudo":"以用户…重试。","overwrite":"覆盖","configure":"配置"},"vs/workbench/contrib/files/browser/editors/binaryFileEditor":{"binaryFileEditor":"二进制文件查看器"},"vs/workbench/contrib/files/common/workspaceWatcher":{"netVersionError":"需要 Microsoft .NET Framework 4.5。请访问链接安装它。","installNet":"下载 .NET Framework 4.5","enospcError":"无法在这个大型工作区中监视文件更改。请按照说明链接来解决此问题。","learnMore":"说明"},"vs/workbench/contrib/files/common/dirtyFilesIndicator":{"dirtyFile":"1 个未保存的文件","dirtyFiles":"{0} 个未保存的文件"},"vs/workbench/contrib/files/browser/fileActions":{"newFile":"新建文件","newFolder":"新建文件夹","rename":"重命名","delete":"删除","copyFile":"复制","pasteFile":"粘贴","download":"下载...","createNewFile":"新建文件","createNewFolder":"新建文件夹","deleteButtonLabelRecycleBin":"移动到回收站(&&M)","deleteButtonLabelTrash":"移动到废纸篓(&&M)","deleteButtonLabel":"删除(&&D)","dirtyMessageFilesDelete":"你删除的文件中具有未保存的更改。是否继续?","dirtyMessageFolderOneDelete":"你正在删除文件夹 {0}，但其中 1 个文件中有未保存的更改。是否要继续?","dirtyMessageFolderDelete":"你正在删除文件夹 {0}，其中 {1} 个文件中有未保存的更改。是否要继续?","dirtyMessageFileDelete":"你正在删除具有未保存更改的 {0}。是否要继续?","dirtyWarning":"如果不保存，你的更改将丢失。","undoBinFiles":"您可以从回收站还原这些文件。","undoBin":"您可以从回收站还原此文件。","undoTrashFiles":"您可以从回收站还原这些文件。","undoTrash":"您可以从回收站还原此文件。","doNotAskAgain":"不再询问","irreversible":"此操作不可逆!","deleteBulkEdit":"删除 {0} 个文件","deleteFileBulkEdit":"删除{0}","deletingBulkEdit":"正在删除 {0} 文件","deletingFileBulkEdit":"正在删除 {0}","binFailed":"无法删除到回收站。是否永久删除？","trashFailed":"无法删除到废纸篓。是否永久删除？","deletePermanentlyButtonLabel":"永久删除(&&D)","retryButtonLabel":"重试(&&R)","confirmMoveTrashMessageFilesAndDirectories":"是否确定要删除以下 {0} 个文件或文件夹 (包括其内容)?","confirmMoveTrashMessageMultipleDirectories":"是否确定要删除以下 {0} 个文件夹及其内容?","confirmMoveTrashMessageMultiple":"是否确定要删除以下 {0} 个文件?","confirmMoveTrashMessageFolder":"是否确实要删除“{0}”及其内容?","confirmMoveTrashMessageFile":"是否确实要删除“{0}”?","confirmDeleteMessageFilesAndDirectories":"是否确定要永久删除以下 {0} 个文件或文件夹 (包括其内容)?","confirmDeleteMessageMultipleDirectories":"是否确定要永久删除以下 {0} 个目录及其内容?","confirmDeleteMessageMultiple":"是否确定要永久删除以下 {0} 个文件?","confirmDeleteMessageFolder":"是否确定要永久删除“{0}”及其内容?","confirmDeleteMessageFile":"是否确定要永久删除“{0}”?","globalCompareFile":"比较活动文件与...","fileToCompareNoFile":"请选择要比较的文件。","openFileToCompare":"首先打开文件以将其与另外一个文件比较。","toggleAutoSave":"切换开关自动保存","saveAllInGroup":"全部保存在组中","closeGroup":"关闭组","focusFilesExplorer":"聚焦到“文件资源管理器”视图","showInExplorer":"在侧边栏中显示活动文件","openFileToShow":"请先打开要在浏览器中显示的文件","collapseExplorerFolders":"在资源管理器中折叠文件夹","refreshExplorer":"刷新资源管理器","openFileInNewWindow":"在新窗口中打开活动文件","openFileToShowInNewWindow.unsupportedschema":"活动编辑器必须包含可打开的资源。","openFileToShowInNewWindow.nofile":"请先打开要在新窗口中打开的文件","emptyFileNameError":"必须提供文件或文件夹名。","fileNameStartsWithSlashError":"文件或文件夹名称不能以斜杠开头。","fileNameExistsError":"此位置已存在文件或文件夹 **{0}**。请选择其他名称。","invalidFileNameError":"名称 **{0}** 作为文件或文件夹名无效。请选择其他名称。","fileNameWhitespaceWarning":"在文件或文件夹名称中检测到的前导或尾随空格。","compareWithClipboard":"比较活动文件与剪贴板","clipboardComparisonLabel":"剪贴板 ↔ {0}","retry":"重试","createBulkEdit":"创建 {0}","creatingBulkEdit":"正在创建 {0}","renameBulkEdit":"将 {0} 重命名为 {1}","renamingBulkEdit":"将 {0} 重命名为 {1}","downloadingFiles":"正在下载","downloadProgressSmallMany":"{0} 个文件，共 {1} 个({2}/秒)","downloadProgressLarge":"{0} ({1}/{2}，{3}/秒)","downloadButton":"下载","downloadFolder":"下载文件夹","downloadFile":"下载文件","downloadBulkEdit":"下载 {0}","downloadingBulkEdit":"正在下载 {0}","fileIsAncestor":"粘贴的项目是目标文件夹的上级","movingBulkEdit":"正在移动 {0} 文件","movingFileBulkEdit":"正在移动 {0}","moveBulkEdit":"移动 {0} 个文件","moveFileBulkEdit":"移动 {0}","copyingBulkEdit":"正在复制 {0} 文件","copyingFileBulkEdit":"正在复制 {0}","copyBulkEdit":"复制 {0} 文件","copyFileBulkEdit":"复制 {0}","fileDeleted":"复制后要粘贴的文件已被删除或移动。{0}"},"vs/workbench/contrib/files/browser/fileCommands":{"saveAs":"另存为...","save":"保存","saveWithoutFormatting":"保存但不更改格式","saveAll":"全部保存","removeFolderFromWorkspace":"将文件夹从工作区删除","newUntitledFile":"新的无标题文件","modifiedLabel":"{0} (在文件中) ↔ {1}","openFileToCopy":"首先打开文件以复制其路径","genericSaveError":"未能保存“{0}”: {1}","genericRevertError":"未能还原“{0}”: {1}"},"vs/workbench/contrib/files/browser/editors/textFileEditor":{"textFileEditor":"文本文件编辑器","openFolderError":"文件是目录","createFile":"创建文件"},"vs/workbench/contrib/files/browser/views/explorerDecorationsProvider":{"canNotResolve":"无法解析工作区文件夹","symbolicLlink":"符号链接","unknown":"未知文件类型","label":"资源管理器"},"vs/workbench/contrib/files/browser/views/explorerViewer":{"treeAriaLabel":"文件资源管理器","fileInputAriaLabel":"输入文件名。按 \\"Enter\\" 键确认或按 \\"Esc\\" 键取消。","confirmOverwrite":"目标文件夹中已存在名称为\\"{0}\\"的文件或文件夹。是否要替换它？","irreversible":"此操作不可逆!","replaceButtonLabel":"替换(&&R)","confirmManyOverwrites":"目标文件夹中已存在以下 {0} 个文件和/或文件夹。是否要替换它们?","uploadingFiles":"正在上传","overwrite":"覆盖 {0}","overwriting":"正在覆盖 {0}","uploadProgressSmallMany":"{0} 个文件，共 {1} 个({2}/秒)","uploadProgressLarge":"{0} ({1}/{2}，{3}/秒)","copyFolders":"复制文件夹(&&C)","copyFolder":"复制文件夹(&&C)","cancel":"取消","copyfolders":"确定要复制文件夹吗?","copyfolder":"确定要复制“{0}”吗?","addFolders":"将文件夹添加到工作区(&&A)","addFolder":"将文件夹添加到工作区(&&A)","dropFolders":"是否要复制文件夹或将其添加到工作区?","dropFolder":"是否要复制“{0}”或将“{0}”作为文件夹添加工作区?","copyFile":"复制 {0}","copynFile":"复制 {0} 资源","copyingFile":"正在复制 {0}","copyingnFile":"正在复制 {0} 资源","confirmRootsMove":"是否确定要更改工作区中多个根文件夹的顺序?","confirmMultiMove":"确定要将以下文件{0}移动至{1}？","confirmRootMove":"是否确定要更改工作区中根文件夹“{0}”的顺序?","confirmMove":"是否确定要将\\"{0}\\"移到\\"{1}\\"？","doNotAskAgain":"不再询问","moveButtonLabel":"移动(&&M)","copy":"复制 {0}","copying":"正在复制 {0}","move":"移动 {0}","moving":"正在移动 {0}"},"vs/workbench/contrib/format/browser/formatActionsMultiple":{"nullFormatterDescription":"没有","miss":"扩展 \\"{0}\\" 无法格式化 \\"{1}\\"","config.needed":"“{0}”文件有多个格式化程序。选择默认格式化程序以继续。","config.bad":"扩展 \\"{0}\\" 配置为格式化程序, 但不可用。选择其他默认格式化程序以继续。","do.config":"配置...","select":"为“{0}”文件选择默认的格式化程序","formatter.default":"定义一个默认格式化程序, 该格式化程序优先于所有其他格式化程序设置。必须是提供格式化程序的扩展的标识符。","def":"(默认值)","config":"配置默认格式化程序...","format.placeHolder":"选择格式化程序","formatDocument.label.multiple":"格式化文档的方式...","formatSelection.label.multiple":"格式化选定内容的方式..."},"vs/workbench/contrib/format/browser/formatActionsNone":{"formatDocument.label.multiple":"格式化文档","too.large":"此文件过大，无法进行格式设置","no.provider":"没有安装用于“{0}”文件的格式化程序。","install.formatter":"安装格式化程序..."},"vs/workbench/contrib/format/browser/formatModified":{"formatChanges":"设置修改过的行的格式"},"vs/workbench/contrib/issue/electron-sandbox/issue.contribution":{"reportIssueInEnglish":"报告问题…"},"vs/workbench/contrib/issue/electron-sandbox/issueActions":{"openProcessExplorer":"打开进程资源管理器","reportPerformanceIssue":"报告性能问题"},"vs/workbench/contrib/keybindings/browser/keybindings.contribution":{"toggleKeybindingsLog":"切换键盘快捷方式疑难解答"},"vs/workbench/contrib/localizations/browser/localizations.contribution":{"updateLocale":"是否将 VS Code 的界面语言更换为 {0} 并重新启动?","activateLanguagePack":"为了将 VS Code 的显示语言更换为 {0}，需要重新启动 VS Code。","yes":"是","restart now":"立即重新启动","neverAgain":"不再显示","vscode.extension.contributes.localizations":"向编辑器提供本地化内容","vscode.extension.contributes.localizations.languageId":"显示字符串翻译的目标语言 ID。","vscode.extension.contributes.localizations.languageName":"语言的英文名称。","vscode.extension.contributes.localizations.languageNameLocalized":"提供语言的名称。","vscode.extension.contributes.localizations.translations":"与语言关联的翻译的列表。","vscode.extension.contributes.localizations.translations.id":"使用此翻译的 VS Code 或扩展的 ID。VS Code 的 ID 总为 \\"vscode\\"，扩展的 ID 的格式应为 \\"publisherId.extensionName\\"。","vscode.extension.contributes.localizations.translations.id.pattern":"翻译 VS Code 或者扩展，ID 分别应为 \\"vscode\\" 或格式为 \\"publisherId.extensionName\\"。","vscode.extension.contributes.localizations.translations.path":"包含语言翻译的文件的相对路径。"},"vs/workbench/contrib/localizations/browser/localizationsActions":{"configureLocale":"配置显示语言","installAdditionalLanguages":"安装其他语言...","chooseDisplayLanguage":"选择显示语言","relaunchDisplayLanguageMessage":"要使显示语言的更改生效, 需要重新启动。","relaunchDisplayLanguageDetail":"按下重启按钮来重新启动 {0} 并更改显示语言。","restart":"重启(&&R)"},"vs/workbench/contrib/localizations/browser/minimalTranslations":{"showLanguagePackExtensions":"在商店中搜索语言包并将显示语言更改为 {0}。","searchMarketplace":"搜索商店","installAndRestartMessage":"安装语言包并将显示语言更改为 {0}。","installAndRestart":"安装并重启"},"vs/workbench/contrib/logs/common/logs.contribution":{"userDataSyncLog":"设置同步","rendererLog":"窗口","telemetryLog":"遥测","show window log":"显示窗口日志","mainLog":"主进程","sharedLog":"共享进程"},"vs/workbench/contrib/logs/electron-sandbox/logsActions":{"openLogsFolder":"打开日志文件夹","openExtensionLogsFolder":"打开扩展日志文件夹"},"vs/workbench/contrib/logs/common/logsActions":{"setLogLevel":"设置日志级别...","trace":"跟踪","debug":"调试","info":"信息","warn":"警告","err":"错误","critical":"严重","off":"关","selectLogLevel":"选择日志级别","default and current":"默认值和当前值","default":"默认值","current":"当前","openSessionLogFile":"打开窗口日志文(会话)...","sessions placeholder":"选择会话","log placeholder":"选择日志文件"},"vs/workbench/contrib/markers/browser/markers.contribution":{"markersViewIcon":"查看标记视图的图标。","copyMarker":"复制","copyMessage":"复制消息","focusProblemsList":"聚焦到问题视图","focusProblemsFilter":"焦点问题筛选器","show multiline":"在多行中显示消息","problems":"问题","show singleline":"在单行中显示消息","clearFiltersText":"清除过滤器文本","miMarker":"问题(&&P)","status.problems":"问题","totalErrors":"{0} 个错误","totalWarnings":"{0} 条警告","totalInfos":"{0} 条信息","noProblems":"没有问题","manyProblems":"1万+"},"vs/workbench/contrib/markers/browser/markersView":{"collapseAll":"全部折叠","filter":"筛选","No problems filtered":"显示 {0} 个问题","problems filtered":"显示第 {0} 个 (共 {1} 个) 问题","clearFilter":"清除筛选"},"vs/workbench/contrib/markers/browser/markersViewActions":{"filterIcon":"标记视图中筛选器配置的图标。","showing filtered problems":"正在显示第 {0} 页(共 {1} 页)"},"vs/workbench/contrib/markers/browser/messages":{"problems.view.toggle.label":"切换问题 (错误、警告、信息) 视图","problems.view.focus.label":"聚焦到问题 (错误、警告、信息)","problems.panel.configuration.title":"问题预览","problems.panel.configuration.autoreveal":"在打开文件时，控制是否在“问题”视图中对其进行定位。","problems.panel.configuration.showCurrentInStatus":"启用后，状态栏中将显示当前问题。","markers.panel.title.problems":"问题","markers.panel.no.problems.build":"目前尚未在工作区检测到问题。","markers.panel.no.problems.activeFile.build":"到目前为止，当前文件中未检测到任何问题。","markers.panel.no.problems.filters":"在给定的筛选条件下，没有找到结果。","markers.panel.action.moreFilters":"更多过滤器...","markers.panel.filter.showErrors":"显示错误","markers.panel.filter.showWarnings":"显示警告","markers.panel.filter.showInfos":"显示信息","markers.panel.filter.useFilesExclude":"隐藏排除的文件","markers.panel.filter.activeFile":"只看当前活动的文件","markers.panel.action.filter":"筛选器问题","markers.panel.action.quickfix":"显示修复方案","markers.panel.filter.ariaLabel":"筛选器问题","markers.panel.filter.placeholder":"筛选器(例如 text、**/*.ts、!**/node_modules/**)","markers.panel.filter.errors":"错误","markers.panel.filter.warnings":"警告","markers.panel.filter.infos":"信息","markers.panel.single.error.label":"1 个错误","markers.panel.multiple.errors.label":"{0} 个错误","markers.panel.single.warning.label":"1 条警告","markers.panel.multiple.warnings.label":"{0} 条警告","markers.panel.single.info.label":"1 条信息","markers.panel.multiple.infos.label":"{0} 条信息","markers.panel.single.unknown.label":"1 个未知","markers.panel.multiple.unknowns.label":"{0} 个未知","markers.panel.at.ln.col.number":"[{0}, {1}]","problems.tree.aria.label.resource":"在文件夹 {2} 的文件 {1} 中有 {0} 个问题","problems.tree.aria.label.marker.relatedInformation":"此问题包含对 {0} 个位置的引用。","problems.tree.aria.label.error.marker":"{0} 生成的错误: {2} 行 {3} 列，{1}。{4}","problems.tree.aria.label.error.marker.nosource":"错误: {1} 行 {2} 列，{0}。{3}","problems.tree.aria.label.warning.marker":"{0} 生成的警告: {2} 行 {3} 列，{1}。{4}","problems.tree.aria.label.warning.marker.nosource":"警告: {1} 行 {2} 列，{0}。{3}","problems.tree.aria.label.info.marker":"{0} 生成的信息: {2} 行 {3} 列，{1}。{4}","problems.tree.aria.label.info.marker.nosource":"信息: {1} 行 {2} 列，{0}。{3}","problems.tree.aria.label.marker":"{0} 生成的问题: {2} 行 {3} 列，{1}。{4}","problems.tree.aria.label.marker.nosource":"问题: {1} 行 {2} 列，{0}。{3}","problems.tree.aria.label.relatedinfo.message":"{3} 的 {1} 行 {2} 列，{0}","errors.warnings.show.label":"显示错误和警告"},"vs/workbench/contrib/markers/browser/markers":{"totalProblems":"总计 {0} 个问题"},"vs/workbench/contrib/markers/browser/markersFileDecorations":{"label":"问题","tooltip.1":"此文件存在 1 个问题","tooltip.N":"此文件存在 {0} 个问题","markers.showOnFile":"在文件和文件夹上显示错误和警告。"},"vs/workbench/contrib/markers/browser/markersTreeViewer":{"problemsView":"问题视图","expandedIcon":"在标记视图中指示多个线条已显示的图标。","collapsedIcon":"在标记视图中指示多个线条已折叠的图标。","single line":"在单行中显示消息","multi line":"在多行中显示消息","links.navigate.follow":"关注链接","links.navigate.kb.meta":"ctrl + 单击","links.navigate.kb.meta.mac":"cmd + 单击","links.navigate.kb.alt.mac":"option + 单击","links.navigate.kb.alt":"alt + 单击"},"vs/workbench/contrib/notebook/browser/contrib/coreActions":{"notebookActions.category":"笔记本","notebookActions.execute":"执行单元格","notebookActions.cancel":"停止单元格执行","notebookActions.executeCell":"执行单元格","notebookActions.CancelCell":"取消执行","notebookActions.deleteCell":"删除单元格","notebookActions.executeAndSelectBelow":"执行笔记本单元格并在下方选择","notebookActions.executeAndInsertBelow":"执行笔记本单元格并在下方插入","notebookActions.renderMarkdown":"呈现所有 Markdown 单元格","notebookActions.executeNotebook":"执行笔记本","notebookActions.cancelNotebook":"取消笔记本执行","notebookMenu.insertCell":"插入单元格","notebookMenu.cellTitle":"笔记本单元格","notebookActions.menu.executeNotebook":"执行笔记本(运行所有单元格)","notebookActions.menu.cancelNotebook":"停止笔记本执行","notebookActions.changeCellToCode":"将单元格更改为代码","notebookActions.changeCellToMarkdown":"将单元格更改为 Markdown","notebookActions.insertCodeCellAbove":"在上方插入代码单元格","notebookActions.insertCodeCellBelow":"在下方插入代码单元格","notebookActions.insertCodeCellAtTop":"在顶部添加代码单元格","notebookActions.insertMarkdownCellAtTop":"在顶部添加 Markdown 单元格","notebookActions.menu.insertCode":"$(add)代码","notebookActions.menu.insertCode.tooltip":"添加代码单元格","notebookActions.insertMarkdownCellAbove":"在上方插入 Markdown 单元格","notebookActions.insertMarkdownCellBelow":"在下方插入 Markdown 单元格","notebookActions.menu.insertMarkdown":"$(add)标记","notebookActions.menu.insertMarkdown.tooltip":"添加 Markdown 单元格","notebookActions.editCell":"编辑单元格","notebookActions.quitEdit":"停止编辑单元格","notebookActions.moveCellUp":"上移单元格","notebookActions.moveCellDown":"下移单元格","notebookActions.copy":"复制单元格","notebookActions.cut":"剪切单元格","notebookActions.paste":"粘贴单元格","notebookActions.pasteAbove":"在上方粘贴单元格","notebookActions.copyCellUp":"向上复制单元格","notebookActions.copyCellDown":"向下复制单元格","cursorMoveDown":"聚焦下一个单元格编辑器","cursorMoveUp":"聚焦上一个单元格编辑器","focusOutput":"聚焦活动单元格输出","focusOutputOut":"解除活动单元格输出聚焦","focusFirstCell":"聚焦第一个单元格","focusLastCell":"聚焦最后一个单元格","clearCellOutputs":"清除单元格输出","changeLanguage":"更改单元格语言","languageDescription":"({0}) - 当前语言","languageDescriptionConfigured":"({0})","pickLanguageToConfigure":"选择语言模式","clearAllCellsOutputs":"清除所有单元格输出","notebookActions.splitCell":"拆分单元格","notebookActions.joinCellAbove":"加入上一个单元格","notebookActions.joinCellBelow":"加入下一个单元格","notebookActions.centerActiveCell":"中心活动单元格","notebookActions.collapseCellInput":"折叠单元格输入","notebookActions.expandCellContent":"展开单元格内容","notebookActions.collapseCellOutput":"折叠单元格输出","notebookActions.expandCellOutput":"展开单元格输出","notebookActions.inspectLayout":"检查笔记本布局"},"vs/workbench/contrib/notebook/browser/notebook.contribution":{"diffLeftRightLabel":"{0} ⟷ {1}","notebookConfigurationTitle":"笔记本","notebook.displayOrder.description":"输出项 mime 类型的优先级列表","notebook.cellToolbarLocation.description":"应在何处显示单元格工具栏，或是否隐藏它。","notebook.showCellStatusbar.description":"是否应显示单元格状态栏。","notebook.diff.enablePreview.description":"是否对笔记本使用增强的文本差异编辑器。"},"vs/workbench/contrib/notebook/browser/notebookIcons":{"configureKernel":"在笔记本编辑器的内核配置小组件中配置图标。","selectKernelIcon":"配置用于在笔记本编辑器中选择内核的图标。","executeIcon":"笔记本编辑器中的执行图标。","stopIcon":"用于在笔记本编辑器中停止执行的图标。","deleteCellIcon":"用于在笔记本编辑器中删除单元格的图标。","executeAllIcon":"用于在笔记本编辑器中执行所有单元格的图标。","editIcon":"用于在笔记本编辑器中编辑单元格的图标。","stopEditIcon":"用于在笔记本编辑器中停止编辑单元格的图标。","moveUpIcon":"用于在笔记本编辑器中上移单元格的图标。","moveDownIcon":"用于在笔记本编辑器中下移单元格的图标。","clearIcon":"用于在笔记本编辑器中清除单元格输出的图标。","splitCellIcon":"用于在笔记本编辑器中拆分单元格的图标。","unfoldIcon":"用于在笔记本编辑器中展开单元格的图标。","successStateIcon":"用于在笔记本编辑器中指示成功状态的图标。","errorStateIcon":"用于在笔记本编辑器中指示错误状态的图标。","collapsedIcon":"用于在笔记本编辑器中批注已折叠部分的图标。","expandedIcon":"用于在笔记本编辑器中批注已展开部分的图标。","openAsTextIcon":"用于在文本编辑器中打开笔记本的图标。","revertIcon":"笔记本编辑器中的还原图标。","mimetypeIcon":"MIME 类型笔记本编辑器的图标。"},"vs/workbench/contrib/notebook/browser/notebookEditor":{"fail.noEditor":"无法使用类型为“{0}”的笔记本编辑器打开资源，请检查是否已安装或启用了正确的扩展。","fail.reOpen":"使用 VS Code 标准文本编辑器重新打开文件"},"vs/workbench/contrib/notebook/browser/notebookServiceImpl":{"builtinProviderDisplayName":"内置"},"vs/workbench/contrib/notebook/browser/diff/notebookTextDiffEditor":{"notebookTreeAriaLabel":"笔记本文本差异"},"vs/workbench/contrib/notebook/browser/contrib/find/findController":{"notebookActions.hideFind":"隐藏“在笔记本中查找”","notebookActions.findInNotebook":"在笔记本中查找"},"vs/workbench/contrib/notebook/browser/contrib/fold/folding":{"fold.cell":"折叠单元格","unfold.cell":"展开单元格"},"vs/workbench/contrib/notebook/browser/contrib/format/formatting":{"format.title":"设置笔记本的格式","label":"设置笔记本的格式","formatCell.label":"设置单元格格式"},"vs/workbench/contrib/notebook/browser/contrib/status/editorStatus":{"notebookActions.selectKernel":"选择笔记本内核","notebook.runCell.selectKernel":"选择要运行此笔记本的笔记本内核","currentActiveKernel":"(当前处于活动状态)","notebook.promptKernel.setDefaultTooltip":"设置为 \\"{0}\\" 的默认内核提供程序","chooseActiveKernel":"为当前笔记本选择内核","notebook.selectKernel":"为当前笔记本选择内核"},"vs/workbench/contrib/notebook/browser/diff/notebookDiffActions":{"notebook.diff.switchToText":"打开文本差异编辑器","notebook.diff.cell.revertMetadata":"还原元数据","notebook.diff.cell.revertOutputs":"还原输出","notebook.diff.cell.revertInput":"还原输入"},"vs/workbench/contrib/notebook/browser/extensionPoint":{"contributes.notebook.provider":"提供笔记本文档处理程序。","contributes.notebook.provider.viewType":"笔记本的唯一标识符。","contributes.notebook.provider.displayName":"笔记本的可读名称。","contributes.notebook.provider.selector":"适用于笔记本的一组 glob 模式。","contributes.notebook.provider.selector.filenamePattern":"启用笔记本的 glob 模式。","contributes.notebook.selector.provider.excludeFileNamePattern":"禁用笔记本的 glob 模式。","contributes.priority":"控制在用户打开文件时是否自动启用自定义编辑器。用户可能会使用 \\"workbench.editorAssociations\\" 设置覆盖此项。","contributes.priority.default":"在用户打开资源时自动使用此编辑器，前提是没有为该资源注册其他默认的自定义编辑器。","contributes.priority.option":"在用户打开资源时不会自动使用此编辑器，但用户可使用 `Reopen With` 命令切换到此编辑器。","contributes.notebook.renderer":"提供笔记本输出渲染器。","contributes.notebook.renderer.viewType":"笔记本输出渲染器的唯一标识符。","contributes.notebook.provider.viewType.deprecated":"将 \\"viewType\\" 重命名为 \\"id\\"。","contributes.notebook.renderer.displayName":"笔记本输出渲染器的可读名称。","contributes.notebook.selector":"适用于笔记本的一组 glob 模式。","contributes.notebook.renderer.entrypoint":"要在 Web 视图中加载用于呈现扩展的文件。"},"vs/workbench/contrib/notebook/browser/notebookKernelAssociation":{"notebook.kernelProviderAssociations":"定义一个默认内核提供程序，该提供程序优先于所有其他内核提供程序设置。必须是提供内核提供程序的扩展的标识符。"},"vs/workbench/contrib/notebook/common/model/notebookTextModel":{"defaultEditLabel":"编辑"},"vs/workbench/contrib/notebook/common/notebookEditorModel":{"notebook.staleSaveError":"文件内容在磁盘上已更改。是要打开更新的版本还是使用所作更改覆盖该文件?","notebook.staleSaveError.revert":"还原","notebook.staleSaveError.overwrite.":"覆盖"},"vs/workbench/contrib/notebook/browser/notebookEditorWidget":{"notebookTreeAriaLabel":"笔记本","notebook.runCell.selectKernel":"选择要运行此笔记本的笔记本内核","notebook.promptKernel.setDefaultTooltip":"设置为 \\"{0}\\" 的默认内核提供程序","notebook.cellBorderColor":"笔记本单元格的边框颜色。","notebook.focusedEditorBorder":"笔记本单元格编辑器边框的颜色。","notebookStatusSuccessIcon.foreground":"单元格状态栏中笔记本单元格的错误图标颜色。","notebookStatusErrorIcon.foreground":"单元格状态栏中笔记本单元格的错误图标颜色。","notebookStatusRunningIcon.foreground":"单元格状态栏中笔记本单元格的“正在运行”图标颜色。","notebook.outputContainerBackgroundColor":"笔记本输出容器背景的颜色。","notebook.cellToolbarSeparator":"单元格底部工具栏中分隔符的颜色","focusedCellBackground":"将焦点放在单元格上时单元格的背景色。","notebook.cellHoverBackground":"将鼠标悬停在单元格上时单元格的背景色。","notebook.selectedCellBorder":"选中单元格但未将焦点放在其上时单元格上边框和下边框的颜色。","notebook.focusedCellBorder":"将焦点放在单元格上时单元格上边框和下边框的颜色。","notebook.cellStatusBarItemHoverBackground":"笔记本单元格状态栏项的背景色。","notebook.cellInsertionIndicator":"笔记本单元格插入指示符的颜色。","notebookScrollbarSliderBackground":"笔记本滚动条滑块的背景色。","notebookScrollbarSliderHoverBackground":"悬停时笔记本滚动条滑块的背景色。","notebookScrollbarSliderActiveBackground":"单击时笔记本滚动条滑块的背景色。","notebook.symbolHighlightBackground":"突出显示的单元格的背景色"},"vs/workbench/contrib/notebook/browser/view/renderers/cellRenderer":{"cellExpandButtonLabel":"展开"},"vs/workbench/contrib/notebook/browser/viewModel/markdownCellViewModel":{"notebook.emptyMarkdownPlaceholder":"空白 Markdown 单元格，请双击或按 Enter 进行编辑。"},"vs/workbench/contrib/notebook/browser/view/renderers/cellWidgets":{"notebook.cell.status.language":"选择单元格语言模式"},"vs/workbench/contrib/notebook/browser/view/renderers/cellOutput":{"mimeTypePicker":"选择其他输出 MIME 类型，可用的 MIME 类型: {0}","curruentActiveMimeType":"当前处于活动状态","promptChooseMimeTypeInSecure.placeHolder":"选择要为当前输出呈现的 mimetype。仅当笔记本受信任时，丰富 mimetype 才可用","promptChooseMimeType.placeHolder":"为当前项选择要渲染的 mime 类型","builtinRenderInfo":"内置"},"vs/workbench/contrib/outline/browser/outline.contribution":{"outlineViewIcon":"查看大纲视图的图标。","name":"大纲","outlineConfigurationTitle":"大纲","outline.showIcons":"显示大纲元素的图标。","outline.showProblem":"显示大纲元素上的错误和警告。","outline.problem.colors":"对错误和警告添加颜色。","outline.problems.badges":"对错误和警告使用徽章。","filteredTypes.file":"启用后，大纲将显示“文件”符号。","filteredTypes.module":"启用后，大纲将显示“模块”符号。","filteredTypes.namespace":"启用后，大纲将显示“命名空间”符号。","filteredTypes.package":"启用后，大纲将显示“包”符号。","filteredTypes.class":"启用后，大纲将显示“类”符号。","filteredTypes.method":"启用后，大纲将显示“方法”符号。","filteredTypes.property":"启用后，大纲将显示“属性”符号。","filteredTypes.field":"启用时，大纲将显示“字段”符号。","filteredTypes.constructor":"启用大纲时，大纲将显示“构造函数”符号。","filteredTypes.enum":"启用后，大纲将显示“枚举”符号。","filteredTypes.interface":"启用后，大纲将显示“接口”符号。","filteredTypes.function":"启用时，大纲将显示“函数”符号。","filteredTypes.variable":"启用后，大纲将显示“变量”符号。","filteredTypes.constant":"启用后，大纲将显示“常量”符号。","filteredTypes.string":"启用后，大纲将显示“字符串”符号。","filteredTypes.number":"启用后，大纲将显示“数字”符号。","filteredTypes.boolean":"启用后，大纲将显示“布尔”符号。","filteredTypes.array":"启用后，大纲将显示“数组”符号。","filteredTypes.object":"启用后，大纲将显示“对象”符号。","filteredTypes.key":"启用后，大纲将显示“键”符号。","filteredTypes.null":"启用后，大纲将显示 \\"null\\" 符号。","filteredTypes.enumMember":"启用后，大纲将显示“枚举成员”符号。","filteredTypes.struct":"启用后，大纲将显示“结构”符号。","filteredTypes.event":"启用后，大纲将显示“事件”符号。","filteredTypes.operator":"启用时，大纲显示“运算符”符号。","filteredTypes.typeParameter":"启用后，大纲将显示 \\"typeParameter\\" 符号。"},"vs/workbench/contrib/outline/browser/outlinePane":{"outline":"大纲","sortByPosition":"排序依据: 位置","sortByName":"排序依据: 名称","sortByKind":"排序方式: 类别","followCur":"跟随光标","filterOnType":"在输入时筛选","no-editor":"活动编辑器无法提供大纲信息。","loading":"正在加载“{0}”的文档符号...","no-symbols":"在文档“{0}”中找不到符号"},"vs/workbench/contrib/output/browser/output.contribution":{"outputViewIcon":"查看输出视图的图标。","output":"输出","logViewer":"日志查看器","switchToOutput.label":"切换到输出","clearOutput.label":"清除输出","outputCleared":"输出被清除","toggleAutoScroll":"切换自动滚动","outputScrollOff":"关闭自动滚动","outputScrollOn":"打开自动滚动","openActiveLogOutputFile":"打开日志输出文件","toggleOutput":"切换输出","showLogs":"显示日志...","selectlog":"选择日志","openLogFile":"打开日志文件...","selectlogFile":"选择日志文件","miToggleOutput":"输出(&&O)","output.smartScroll.enabled":"在输出视图中启用或禁用「智能滚动」。「智能滚动」会自动在你点击输出视图时锁定滚动，并在你点击最后一行时解锁滚动。"},"vs/workbench/contrib/output/browser/outputView":{"output model title":"{0} - 输出","channel":"“{0}”的输出通道","output":"输出","outputViewWithInputAriaLabel":"{0}，输出面板","outputViewAriaLabel":"输出面板","outputChannels":"输出通道。","logChannel":"日志 ({0})"},"vs/workbench/contrib/output/browser/logViewer":{"logViewerAriaLabel":"日志查看器"},"vs/workbench/contrib/performance/electron-browser/startupProfiler":{"prof.message":"成功创建的配置文件。","prof.detail":"请创建问题并手动附加以下文件:\\r\\n{0}","prof.restartAndFileIssue":"创建问题并重启(&&C)","prof.restart":"重启(&&R)","prof.thanks":"感谢您的帮助。","prof.detail.restart":"需要重新启动才能继续使用“{0}”。再次感谢您的贡献。","prof.restart.button":"重启(&&R)"},"vs/workbench/contrib/performance/browser/performance.contribution":{"show.label":"启动性能"},"vs/workbench/contrib/performance/browser/perfviewEditor":{"name":"启动性能"},"vs/workbench/contrib/preferences/browser/keybindingsEditorContribution":{"defineKeybinding.start":"定义键绑定","defineKeybinding.kbLayoutErrorMessage":"在当前键盘布局下无法生成此组合键。","defineKeybinding.kbLayoutLocalAndUSMessage":"在你的键盘布局上为 **{0}**(美国标准布局上为 **{1}**)。","defineKeybinding.kbLayoutLocalMessage":"在你的键盘布局上为 **{0}**。"},"vs/workbench/contrib/preferences/browser/preferences.contribution":{"defaultPreferencesEditor":"默认首选项编辑器","settingsEditor2":"设置编辑器 2","keybindingsEditor":"键绑定编辑器","openSettings2":"打开设置 (ui)","preferences":"首选项","settings":"设置","miOpenSettings":"设置(&&S)","openSettingsJson":"打开设置 (json)","openGlobalSettings":"打开用户设置","openRawDefaultSettings":"打开默认设置(JSON)","openWorkspaceSettings":"打开工作区设置","openWorkspaceSettingsFile":"打开工作区设置(JSON)","openFolderSettings":"打开文件夹设置","openFolderSettingsFile":"打开文件夹设置(JSON)","filterModifiedLabel":"显示已修改设置","filterOnlineServicesLabel":"显示联机服务设置","miOpenOnlineSettings":"联机服务设置(&&O)","onlineServices":"在线服务设置","openRemoteSettings":"打开远程设置({0})","settings.focusSearch":"聚焦到设置搜索","settings.clearResults":"清除设置搜索结果","settings.focusFile":"聚焦到设置文件","settings.focusNextSetting":"关注下一个设置","settings.focusPreviousSetting":"聚焦上一个设置","settings.editFocusedSetting":"编辑焦点设置","settings.focusSettingsList":"聚焦设置列表","settings.focusSettingsTOC":"聚焦到设置目录","settings.focusSettingControl":"焦点设置控制","settings.showContextMenu":"显示设置上下文菜单","settings.focusLevelUp":"将焦点上移一级","openGlobalKeybindings":"打开键盘快捷方式","Keyboard Shortcuts":"键盘快捷方式","openDefaultKeybindingsFile":"打开默认键盘快捷键(JSON)","openGlobalKeybindingsFile":"打开键盘快捷方式(JSON)","showDefaultKeybindings":"显示默认按键绑定","showUserKeybindings":"显示用户按键绑定","clear":"清除搜索结果","miPreferences":"首选项(&&P)"},"vs/workbench/contrib/preferences/browser/keybindingWidgets":{"defineKeybinding.initial":"先按所需的组合键，再按 Enter 键。","defineKeybinding.oneExists":"已有 1 条命令的按键绑定与此相同","defineKeybinding.existing":"已有 {0} 条命令的按键绑定与此相同","defineKeybinding.chordsTo":"加上"},"vs/workbench/contrib/preferences/browser/keybindingsEditor":{"recordKeysLabel":"录制按键","recordKeysLabelWithKeybinding":"{0} ({1})","sortByPrecedeneLabel":"按优先级排序","sortByPrecedeneLabelWithKeybinding":"{0} ({1})","SearchKeybindings.FullTextSearchPlaceholder":"在此键入搜索按键绑定","SearchKeybindings.KeybindingsSearchPlaceholder":"正在录制按键。按 Esc 键退出","clearInput":"清除键绑定搜索输入","recording":"正在录制按键","command":"命令","keybinding":"键绑定","when":"当","source":"源","show sorted keybindings":"按优先级顺序显示 {0} 个按键绑定","show keybindings":"按字母顺序显示 {0} 个按键绑定","changeLabel":"更改键绑定…","addLabel":"添加键绑定…","editWhen":"更改 When 表达式","removeLabel":"删除键绑定","resetLabel":"重置按键绑定","showSameKeybindings":"显示相同的按键绑定","copyLabel":"复制","copyCommandLabel":"复制命令 ID","error":"编辑按键绑定时发生错误“{0}”。请打开 \\"keybindings.json\\" 文件并检查错误。","editKeybindingLabelWithKey":"更改键绑定 {0}","editKeybindingLabel":"更改键绑定","addKeybindingLabelWithKey":"添加按键绑定 {0}","addKeybindingLabel":"添加键绑定","title":"{0} ({1})","whenContextInputAriaLabel":"请键入 when 上下文。按 Enter 进行确认，按 Esc 取消。","keybindingsLabel":"键绑定","noKeybinding":"未分配键绑定。","noWhen":"没有时间上下文。"},"vs/workbench/contrib/preferences/browser/preferencesActions":{"configureLanguageBasedSettings":"配置语言特定的设置...","languageDescriptionConfigured":"({0})","pickLanguage":"选择语言"},"vs/workbench/contrib/preferences/browser/preferencesEditor":{"SearchSettingsWidget.AriaLabel":"搜索设置","SearchSettingsWidget.Placeholder":"搜索设置","noSettingsFound":"未找到设置","oneSettingFound":"找到 1 个设置","settingsFound":"找到 {0} 个设置","totalSettingsMessage":"总计 {0} 个设置","nlpResult":"自然语言结果","filterResult":"筛选结果","defaultSettings":"默认设置","defaultUserSettings":"默认用户设置","defaultWorkspaceSettings":"默认工作区设置","defaultFolderSettings":"默认文件夹设置","defaultEditorReadonly":"在右侧编辑器中编辑以覆盖默认值。","preferencesAriaLabel":"默认首选项。只读编辑器。"},"vs/workbench/contrib/preferences/browser/settingsEditor2":{"SearchSettings.AriaLabel":"搜索设置","clearInput":"清除设置搜索输入","noResults":"未找到设置","clearSearchFilters":"清除筛选","settings":"设置","settingsNoSaveNeeded":"自动保存对设置所做的更改。","oneResult":"找到 1 个设置","moreThanOneResult":"找到 {0} 个设置","turnOnSyncButton":"打开设置同步","lastSyncedLabel":"上次同步时间: {0}"},"vs/workbench/contrib/preferences/common/preferencesContribution":{"enableNaturalLanguageSettingsSearch":"控制是否在设置中启用自然语言搜索。自然语言搜索由 Microsoft 联机服务提供。","settingsSearchTocBehavior.hide":"在搜索时隐藏目录。","settingsSearchTocBehavior.filter":"筛选目录为仅显示含有匹配设置的类别。单击一个类别将仅显示该类别的结果。","settingsSearchTocBehavior":"控制设置编辑器的目录在搜索时的行为。"},"vs/workbench/contrib/preferences/browser/preferencesIcons":{"settingsGroupExpandedIcon":"“拆分 JSON 设置”编辑器中已展开部分的图标。","settingsGroupCollapsedIcon":"“拆分 JSON 设置”编辑器中已折叠部分的图标。","settingsScopeDropDownIcon":"“拆分 JSON 设置”编辑器中“文件夹”下拉按钮的图标。","settingsMoreActionIcon":"设置 UI 中“更多操作”操作的图标。","keybindingsRecordKeysIcon":"键绑定 UI 中“记录密钥”操作的图标。","keybindingsSortIcon":"键绑定 UI 中“按优先级排序”切换开关的图标。","keybindingsEditIcon":"键绑定 UI 中“编辑”操作的图标。","keybindingsAddIcon":"键绑定 UI 中“添加”操作的图标。","settingsEditIcon":"设置 UI 中“编辑”操作的图标。","settingsAddIcon":"设置 UI 中“添加”操作的图标。","settingsRemoveIcon":"设置 UI 中“删除”操作的图标。","preferencesDiscardIcon":"设置 UI 中“放弃”操作的图标。","preferencesClearInput":"设置和键绑定 UI 中的“清除输入”图标。","preferencesOpenSettings":"“打开设置”命令的图标。"},"vs/workbench/contrib/preferences/browser/preferencesWidgets":{"defaultSettings":"请将设置放在右侧编辑器中进行替代。","noSettingsFound":"未找到设置。","settingsSwitcherBarAriaLabel":"设置转换器","userSettings":"用户","userSettingsRemote":"远程","workspaceSettings":"工作区","folderSettings":"文件夹"},"vs/workbench/contrib/preferences/browser/preferencesRenderers":{"emptyUserSettingsHeader":"将设置放在此处以覆盖 \\"默认设置\\"。","emptyWorkspaceSettingsHeader":"将设置放在此处以覆盖 \\"用户设置\\"。","emptyFolderSettingsHeader":"将文件夹设置放在此处以覆盖 \\"工作区设置\\"。","editTtile":"编辑","replaceDefaultValue":"在设置中替换","copyDefaultValue":"复制到设置","unknown configuration setting":"未知的配置设置","unsupportedRemoteMachineSetting":"此设置无法在此窗口中应用。当您打开本地窗口时，它将被应用。","unsupportedWindowSetting":"此设置无法应用于此工作区。它将在您直接打开包含的工作区文件夹时应用。","unsupportedApplicationSetting":"此设置只能应用于应用程序的用户设置","unsupportedMachineSetting":"只能在本地窗口的用户设置中或者远程窗口的远程设置中应用此设置。","unsupportedProperty":"不支持的属性"},"vs/workbench/contrib/preferences/browser/settingsLayout":{"commonlyUsed":"常用设置","textEditor":"文本编辑器","cursor":"光标","find":"查找","font":"字体","formatting":"正在格式化","diffEditor":"差异编辑器","minimap":"缩略图","suggestions":"建议","files":"文件","workbench":"工作台","appearance":"外观","breadcrumbs":"导航路径","editorManagement":"编辑管理","settings":"设置编辑器","zenMode":"禅模式","screencastMode":"截屏模式","window":"窗口","newWindow":"新建窗口","features":"功能","fileExplorer":"资源管理器","search":"搜索","debug":"调试","scm":"源代码管理","extensions":"扩展","terminal":"终端","task":"任务","problems":"问题","output":"输出","comments":"评论","remote":"远程","timeline":"时间线","notebook":"笔记本","application":"应用程序","proxy":"代理服务器","keyboard":"键盘","update":"更新","telemetry":"遥测","settingsSync":"设置同步"},"vs/workbench/contrib/preferences/browser/settingsTree":{"extensions":"扩展","extensionSyncIgnoredLabel":"同步: 已忽略","modified":"已修改","settingsContextMenuTitle":"更多操作...","alsoConfiguredIn":"同时修改于","configuredIn":"修改于","newExtensionsButtonLabel":"显示匹配的扩展","editInSettingsJson":"在 settings.json 中编辑","settings.Default":"默认","resetSettingLabel":"重置此设置","validationError":"验证错误。","settings.Modified":"已修改。","settings":"设置","copySettingIdLabel":"复制设置 id","copySettingAsJSONLabel":"将设置复制为 JSON 文本","stopSyncingSetting":"同步此设置"},"vs/workbench/contrib/preferences/browser/settingsTreeModels":{"workspace":"工作区","remote":"远程","user":"用户"},"vs/workbench/contrib/preferences/browser/settingsWidgets":{"headerForeground":"节标题或活动标题的前景颜色。","modifiedItemForeground":"修改后的设置指示器的颜色。","settingsDropdownBackground":"设置编辑器下拉列表背景色。","settingsDropdownForeground":"设置编辑器下拉列表前景色。","settingsDropdownBorder":"设置编辑器下拉列表边框。","settingsDropdownListBorder":"设置编辑器下拉列表边框。这会将选项包围起来，并将选项与描述分开。","settingsCheckboxBackground":"设置编辑器复选框背景。","settingsCheckboxForeground":"设置编辑器复选框前景。","settingsCheckboxBorder":"设置编辑器复选框边框。","textInputBoxBackground":"设置编辑器文本输入框背景。","textInputBoxForeground":"设置编辑器文本输入框前景。","textInputBoxBorder":"设置编辑器文本输入框边框。","numberInputBoxBackground":"设置编辑器编号输入框背景。","numberInputBoxForeground":"设置编辑器编号输入框前景。","numberInputBoxBorder":"设置编辑器编号输入框边框。","focusedRowBackground":"聚焦时设置行的背景色。","notebook.rowHoverBackground":"悬停时设置行的背景色。","notebook.focusedRowBorder":"将焦点放在行上时行的上边框和下边框的颜色。","okButton":"确定","cancelButton":"取消","listValueHintLabel":"列出项目\\"{0}\\"","listSiblingHintLabel":"列出与\\"${1}\\"同级的项目\\"{0}\\"","removeItem":"删除项","editItem":"编辑项","addItem":"添加项","itemInputPlaceholder":"字符串项...","listSiblingInputPlaceholder":"同级...","excludePatternHintLabel":"排除与“{0}”匹配的文件","excludeSiblingHintLabel":"仅当存在匹配“{1}”的文件时，才排除匹配“{0}”的文件","removeExcludeItem":"删除排除项","editExcludeItem":"编辑排除项目","addPattern":"添加模式","excludePatternInputPlaceholder":"排除项的模式...","excludeSiblingInputPlaceholder":"当符合此模式的项目存在时...","objectKeyInputPlaceholder":"键","objectValueInputPlaceholder":"值","objectPairHintLabel":"属性“{0}”设置为“{1}”。","resetItem":"重置项","objectKeyHeader":"项","objectValueHeader":"值"},"vs/workbench/contrib/preferences/browser/tocTree":{"settingsTOC":"设置目录","groupRowAriaLabel":"{0}，组"},"vs/workbench/contrib/quickaccess/browser/quickAccess.contribution":{"helpQuickAccessPlaceholder":"键入\\"{0}\\"以获取有关可在此处执行的操作的帮助。","helpQuickAccess":"显示所有快速访问提供程序","viewQuickAccessPlaceholder":"键入要打开的视图、输出通道或终端的名称。","viewQuickAccess":"打开视图","commandsQuickAccessPlaceholder":"键入要运行的命令的名称。","commandsQuickAccess":"显示并运行命令","miCommandPalette":"命令面板(&&C)…","miOpenView":"打开视图(&&O)…","miGotoSymbolInEditor":"转到编辑器中的符号(&&S)…","miGotoLine":"转到行/列(&&L)…","commandPalette":"命令面板..."},"vs/workbench/contrib/quickaccess/browser/viewQuickAccess":{"noViewResults":"没有匹配的视图","views":"侧边栏","panels":"面板","terminalTitle":"{0}: {1}","terminals":"终端","logChannel":"日志 ({0})","channels":"输出","openView":"打开视图","quickOpenView":"Quick Open 视图"},"vs/workbench/contrib/quickaccess/browser/commandsQuickAccess":{"noCommandResults":"没有匹配的命令","configure keybinding":"配置键绑定","commandWithCategory":"{0}: {1}","showTriggerActions":"显示所有命令","clearCommandHistory":"清除命令历史记录"},"vs/workbench/contrib/relauncher/browser/relauncher.contribution":{"relaunchSettingMessage":"设置已更改，需要重启才能生效。","relaunchSettingMessageWeb":"设置已更改，需要重新加载才能生效。","relaunchSettingDetail":"按下“重启”按钮以重新启动 {0} 并启用该设置。","relaunchSettingDetailWeb":"按重新加载按钮重新加载{0}并启用该设置。","restart":"重启(&&R)","restartWeb":"重载(&&R)"},"vs/workbench/contrib/remote/electron-sandbox/remote.contribution":{"remote":"远程","remote.downloadExtensionsLocally":"启用后，扩展将本地下载并安装在远程上。"},"vs/workbench/contrib/remote/common/remote.contribution":{"remoteExtensionLog":"远程服务器","ui":"UI 扩展类型。在远程窗口中，只有在本地计算机上可用时，才会启用此类扩展。","workspace":"工作区扩展类型。在远程窗口中，仅在远程上可用时启用此类扩展。","web":"Web 辅助进程扩展类型。此类扩展可在 Web 辅助进程扩展主机中执行。","remote":"远程","remote.extensionKind":"覆盖扩展的类型。\\"ui\\" 扩展在本地计算机上安装和运行，而 \\"workspace\\" 扩展则在远程计算机上运行。通过使用此设置重写扩展的默认类型，可指定是否应在本地或远程安装和启用该扩展。","remote.restoreForwardedPorts":"还原您在工作区中转发的端口。","remote.autoForwardPorts":"启用后，将检测新的正在运行的进程，并自动转发其侦听的端口。"},"vs/workbench/contrib/remote/browser/remote":{"RemoteHelpInformationExtPoint":"为远程提供帮助信息","RemoteHelpInformationExtPoint.getStarted":"项目入门页面的 URL 或返回此 URL 的命令","RemoteHelpInformationExtPoint.documentation":"项目文档页面的 URL 或返回此 URL 的命令","RemoteHelpInformationExtPoint.feedback":"项目反馈报告器的 URL 或返回 URL 的命令","RemoteHelpInformationExtPoint.issues":"项目问题列表的 URL 或返回 URL 的命令","getStartedIcon":"远程资源管理器视图中的入门图标。","documentationIcon":"远程资源管理器视图中的文档图标。","feedbackIcon":"远程资源管理器视图中的反馈图标。","reviewIssuesIcon":"远程资源管理器视图中的“审阅问题”图标。","reportIssuesIcon":"远程资源管理器视图中的“报告问题”图标。","remoteExplorerViewIcon":"查看远程资源管理器视图的图标。","remote.help.getStarted":"入门","remote.help.documentation":"阅读文档","remote.help.feedback":"提供反馈","remote.help.issues":"审查问题","remote.help.report":"报告问题","pickRemoteExtension":"选择要打开的 URL","remote.help":"帮助和反馈","remotehelp":"远程帮助","remote.explorer":"远程资源管理器","toggleRemoteViewlet":"显示远程资源管理器","reconnectionWaitOne":"正在尝试在 {0} 秒内重新连接...","reconnectionWaitMany":"正在尝试在 {0} 秒内重新连接...","reconnectNow":"立即重新连接","reloadWindow":"重新加载窗口","connectionLost":"连接中断","reconnectionRunning":"正在尝试重新连接...","reconnectionPermanentFailure":"无法重新连接。请重新加载窗口。","cancel":"取消"},"vs/workbench/contrib/remote/browser/remoteExplorer":{"ports":"端口","1forwardedPort":"1 个转发的端口","nForwardedPorts":"{0} 个转发的端口","status.forwardedPorts":"转发的端口","remote.forwardedPorts.statusbarTextNone":"未转发端口","remote.forwardedPorts.statusbarTooltip":"转发的端口: {0}","remote.tunnelsView.automaticForward":"在端口 {0} 上运行的服务可用。[查看所有可用端口](命令: {1}.focus)"},"vs/workbench/contrib/remote/browser/explorerViewItems":{"remotes":"切换远程","remote.explorer.switch":"切换远程"},"vs/workbench/contrib/remote/browser/remoteIndicator":{"remote.category":"远程","remote.showMenu":"显示远程菜单","remote.close":"关闭远程连接","miCloseRemote":"关闭远程连接(&&M)","host.open":"正在打开远程...","disconnectedFrom":"已与 {0} 断开连接","host.tooltipDisconnected":"已与 {0} 断开连接","host.tooltip":"正在 {0} 上编辑","noHost.tooltip":"打开远程窗口","remoteHost":"远程主机","cat.title":"{0}: {1}","closeRemote.title":"关闭远程连接"},"vs/workbench/contrib/remote/browser/tunnelView":{"remote.tunnelsView.add":"转发端口...","remote.tunnelsView.detected":"现有隧道","remote.tunnelsView.candidates":"未转发","remote.tunnelsView.input":"按 Enter 键确认，或按 Esc 键取消。","remote.tunnelsView.forwardedPortLabel0":"{0}","remote.tunnelsView.forwardedPortLabel1":"{0} → {1}","remote.tunnelsView.forwardedPortLabel2":"{0}","remote.tunnelsView.forwardedPortDescription0":"{0} → {1}","remote.tunnel":"端口","remote.tunnel.ariaLabelForwarded":"远程端口 {0}:{1} 已转发到本地地址 {2}","remote.tunnel.ariaLabelCandidate":"远程端口 {0}:{1} 未转发","tunnelView":"隧道视图","remote.tunnel.label":"设置标签","remote.tunnelsView.labelPlaceholder":"端口标签","remote.tunnelsView.portNumberValid":"转发的端口无效。","remote.tunnelsView.portNumberToHigh":"端口号必须大于等于 0 且小于 {0}。","remote.tunnel.forward":"转发端口","remote.tunnel.forwardItem":"转发端口","remote.tunnel.forwardPrompt":"端口号或地址(例如 3000 或 10.10.10.10:2000)。","remote.tunnel.forwardError":"无法转发{0}: {1}。主机可能不可用，或者远程端口可能已被转发","remote.tunnel.closeNoPorts":"当前未转发端口。尝试运行{0}命令","remote.tunnel.close":"停止转发端口","remote.tunnel.closePlaceholder":"选择停止转发的端口","remote.tunnel.open":"在浏览器中打开","remote.tunnel.openCommandPalette":"在浏览器中打开端口","remote.tunnel.openCommandPaletteNone":"当前没有转发端口。若要开始，请打开端口视图。","remote.tunnel.openCommandPaletteView":"打开端口视图…","remote.tunnel.openCommandPalettePick":"选择要打开的端口","remote.tunnel.copyAddressInline":"复制地址","remote.tunnel.copyAddressCommandPalette":"复制转发的端口地址","remote.tunnel.copyAddressPlaceholdter":"选择转发的端口","remote.tunnel.changeLocalPort":"更改本地端口","remote.tunnel.changeLocalPortNumber":"本地端口 {0} 不可用。已改用端口号 {1}","remote.tunnelsView.changePort":"新的本地端口"},"vs/workbench/contrib/sash/browser/sash.contribution":{"sashSize":"控制视图/编辑器之间拖动区域的反馈区域大小(以像素为单位)。如果你认为很难使用鼠标调整视图的大小，请将该值调大。"},"vs/workbench/contrib/scm/browser/scm.contribution":{"sourceControlViewIcon":"查看源代码管理视图的图标。","source control":"源代码管理","no open repo":"当前没有源代码管理提供程序进行注册。","source control repositories":"源代码管理存储库","toggleSCMViewlet":"显示源代码管理","scmConfigurationTitle":"源代码管理","scm.diffDecorations.all":"显示所有可用位置中的差异装饰。","scm.diffDecorations.gutter":"仅在编辑器行号槽中显示差异装饰。","scm.diffDecorations.overviewRuler":"仅在概览标尺中显示差异装饰。","scm.diffDecorations.minimap":"仅在缩略图中显示差异装饰。","scm.diffDecorations.none":"不要显示差异装饰。","diffDecorations":"控制编辑器中差异的显示效果。","diffGutterWidth":"控制装订线中差异修饰的宽度(px)(已添加或已修改)。","scm.diffDecorationsGutterVisibility.always":"始终显示行号槽中的差异装饰器。","scm.diffDecorationsGutterVisibility.hover":"仅在悬停时显示行号槽中的差异装饰器。","scm.diffDecorationsGutterVisibility":"控制行号槽中源代码管理差异装饰器的可见性。","scm.diffDecorationsGutterAction.diff":"单击时显示内联差异一览视图。","scm.diffDecorationsGutterAction.none":"不执行任何操作。","scm.diffDecorationsGutterAction":"控制源代码管理差异装订线修饰的行为。","alwaysShowActions":"控制是否在“源代码管理”视图中始终显示内联操作。","scm.countBadge.all":"显示所有源代码管理提供程序计数锁屏提醒的总和。","scm.countBadge.focused":"显示焦点源控制提供程序的计数标记。","scm.countBadge.off":"禁用源代码管理计数徽章。","scm.countBadge":"控制活动栏上源代码管理图标上的计数锁屏提醒。","scm.providerCountBadge.hidden":"隐藏源代码管理提供程序计数锁屏提醒。","scm.providerCountBadge.auto":"仅显示非零时源代码管理提供程序的计数锁屏提醒。","scm.providerCountBadge.visible":"显示源代码管理提供程序计数锁屏提醒。","scm.providerCountBadge":"控制源代码管理提供程序标头的计数锁屏提醒。仅在有多个提供程序时才显示这些标头。","scm.defaultViewMode.tree":"将存储库更改显示为树。","scm.defaultViewMode.list":"将存储库更改显示为列表。","scm.defaultViewMode":"控制默认的源代码管理存储库视图模式。","autoReveal":"控制 SCM 视图在打开文件时是否应自动显示和选择文件。","inputFontFamily":"控制输入消息的字体。将 `default` 用于工作台用户界面字体系列，将 `editor` 用于 `#editor.fontFamily#` 的值，或者使用自定义字体系列。","alwaysShowRepository":"控制存储库是否应始终在 SCM 视图中可见。","providersVisible":"控制在“源代码管理存储库”部分中可见的存储库数。设置为 \\"0\\", 以便能够手动调整视图的大小。","miViewSCM":"SCM(&&C)","scm accept":"源代码管理: 接受输入","scm view next commit":"SCM: 查看下一个提交","scm view previous commit":"SCM: 查看上一个提交","open in terminal":"在终端打开"},"vs/workbench/contrib/scm/browser/activity":{"status.scm":"源代码管理","scmPendingChangesBadge":"{0} 个挂起的更改"},"vs/workbench/contrib/scm/browser/dirtydiffDecorator":{"changes":"第 {0} 个更改 (共 {1} 个)","change":"第 {0} 个更改 (共 {1} 个)","show previous change":"显示上一个更改","show next change":"显示下一个更改","miGotoNextChange":"下一个更改(&&C)","miGotoPreviousChange":"上一个更改(&&C)","move to previous change":"移动到上一个更改","move to next change":"移动到下一个更改","editorGutterModifiedBackground":"编辑器导航线中被修改行的背景颜色。","editorGutterAddedBackground":"编辑器导航线中已插入行的背景颜色。","editorGutterDeletedBackground":"编辑器导航线中被删除行的背景颜色。","minimapGutterModifiedBackground":"修改的线的迷你地图装订线背景颜色。","minimapGutterAddedBackground":"添加的线的迷你地图装订线背景颜色。","minimapGutterDeletedBackground":"删除的线的迷你地图装订线背景颜色。","overviewRulerModifiedForeground":"概览标尺中已修改内容的颜色。","overviewRulerAddedForeground":"概览标尺中已增加内容的颜色。","overviewRulerDeletedForeground":"概览标尺中已删除内容的颜色。"},"vs/workbench/contrib/scm/browser/scmViewPaneContainer":{"source control":"源代码管理"},"vs/workbench/contrib/scm/browser/scmRepositoriesViewPane":{"scm":"源代码管理存储库"},"vs/workbench/contrib/scm/browser/scmViewPane":{"scm":"源代码管理","input":"源代码管理输入","repositories":"存储库","sortAction":"查看和排序","toggleViewMode":"切换视图模式","viewModeList":"以列表形式查看","viewModeTree":"以树形式查看","sortByName":"按名称排序","sortByPath":"按路径排序","sortByStatus":"按状态排序","expand all":"展开所有存储库","collapse all":"折叠所有存储库","scm.providerBorder":"SCM 提供程序分隔符边框。"},"vs/workbench/contrib/search/browser/search.contribution":{"search":"搜索","copyMatchLabel":"复制","copyPathLabel":"复制路径","copyAllLabel":"全部复制","revealInSideBar":"在侧边栏中显示","clearSearchHistoryLabel":"清除搜索历史记录","focusSearchListCommandLabel":"聚焦到列表","findInFolder":"在文件夹中查找...","findInWorkspace":"在工作区中查找...","showTriggerActions":"转到工作区中的符号...","name":"搜索","findInFiles.description":"打开搜索 viewlet","findInFiles.args":"搜索 viewlet 的一组选项","findInFiles":"在文件中查找","miFindInFiles":"在文件中查找(&&I)","miReplaceInFiles":"在文件中替换(&&I)","anythingQuickAccessPlaceholder":"按名称搜索文件(追加 {0} 转到行，追加 {1} 转到符号)","anythingQuickAccess":"转到文件","symbolsQuickAccessPlaceholder":"键入要打开的符号的名称。","symbolsQuickAccess":"转到工作区中的符号","searchConfigurationTitle":"搜索","exclude":"配置glob模式以在全文本搜索和快速打开中排除文件和文件夹。从“＃files.exclude＃”设置继承所有glob模式。在[此处](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options)了解更多关于glob模式的信息","exclude.boolean":"匹配文件路径所依据的 glob 模式。设置为 true 或 false 可启用或禁用该模式。","exclude.when":"对匹配文件的同级文件的其他检查。使用 $(basename) 作为匹配文件名的变量。","useRipgrep":"此设置已被弃用，将回退到 \\"search.usePCRE2\\"。","useRipgrepDeprecated":"已弃用。请考虑使用 \\"search.usePCRE2\\" 获取对高级正则表达式功能的支持。","search.maintainFileSearchCache":"启用后，搜索服务进程将保持活动状态，而不是在一个小时不活动后关闭。这将使文件搜索缓存保留在内存中。","useIgnoreFiles":"控制在搜索文件时是否使用 `.gitignore` 和 `.ignore` 文件。","useGlobalIgnoreFiles":"控制在搜索文件时是否使用全局 `.gitignore` 和 `.ignore` 文件。","search.quickOpen.includeSymbols":"控制 Quick Open 文件结果中是否包括全局符号搜索的结果。","search.quickOpen.includeHistory":"是否在 Quick Open 的文件结果中包含最近打开的文件。","filterSortOrder.default":"历史记录条目按与筛选值的相关性排序。首先显示更相关的条目。","filterSortOrder.recency":"历史记录条目按最近时间排序。首先显示最近打开的条目。","filterSortOrder":"控制在快速打开中筛选时编辑器历史记录的排序顺序。","search.followSymlinks":"控制是否在搜索中跟踪符号链接。","search.smartCase":"若搜索词全为小写，则不区分大小写进行搜索，否则区分大小写进行搜索。","search.globalFindClipboard":"控制“搜索”视图是否读取或修改 macOS 的共享查找剪贴板。","search.location":"控制搜索功能是显示在侧边栏，还是显示在水平空间更大的面板区域。","search.location.deprecationMessage":"此设置已弃用。请改用拖放功能，方法是拖动搜索图标。","search.collapseResults.auto":"结果少于10个的文件将被展开。其他的则被折叠。","search.collapseAllResults":"控制是折叠还是展开搜索结果。","search.useReplacePreview":"控制在选择或替换匹配项时是否打开“替换预览”视图。","search.showLineNumbers":"控制是否显示搜索结果所在的行号。","search.usePCRE2":"是否在文本搜索中使用 pcre2 正则表达式引擎。这允许使用一些高级正则表达式功能, 如前瞻和反向引用。但是, 并非所有 pcre2 功能都受支持-仅支持 javascript 也支持的功能。","usePCRE2Deprecated":"弃用。当使用仅 PCRE2 支持的正则表达式功能时，将自动使用 PCRE2。","search.actionsPositionAuto":"当搜索视图较窄时将操作栏置于右侧，当搜索视图较宽时，将它紧接在内容之后。","search.actionsPositionRight":"始终将操作栏放置在右侧。","search.actionsPosition":"在搜索视图中控制操作栏的位置。","search.searchOnType":"在键入时搜索所有文件。","search.seedWithNearestWord":"当活动编辑器没有选定内容时，从离光标最近的字词开始进行种子设定搜索。","search.seedOnFocus":"聚焦搜索视图时，将工作区搜索查询更新为编辑器的所选文本。单击时或触发 `workbench.views.search.focus` 命令时会发生此情况。","search.searchOnTypeDebouncePeriod":"启用\\"#search.searchOnType\\"后，控制键入的字符与开始搜索之间的超时(以毫秒为单位)。禁用\\"搜索.searchOnType\\"时无效。","search.searchEditor.doubleClickBehaviour.selectWord":"双击选择光标下的单词。","search.searchEditor.doubleClickBehaviour.goToLocation":"双击将在活动编辑器组中打开结果。","search.searchEditor.doubleClickBehaviour.openLocationToSide":"双击将在编辑器组中的结果打开到一边，如果尚不存在，则创建一个结果。","search.searchEditor.doubleClickBehaviour":"配置在搜索编辑器中双击结果的效果。","search.searchEditor.reusePriorSearchConfiguration":"启用后，新的搜索编辑器将重用以前打开的搜索编辑器的包含、排除和标志","search.searchEditor.defaultNumberOfContextLines":"创建新的搜索编辑器时要使用的周围上下文行的默认数目。如果使用 \\"#search.searchEditor.reusePriorSearchConfiguration#\\"，则可将它设置为 \\"null\\" (空)，以使用搜索编辑器之前的配置。","searchSortOrder.default":"结果按文件夹和文件名按字母顺序排序。","searchSortOrder.filesOnly":"结果按文件名排序，忽略文件夹顺序，按字母顺序排列。","searchSortOrder.type":"结果按文件扩展名的字母顺序排序。","searchSortOrder.modified":"结果按文件的最后修改日期按降序排序。","searchSortOrder.countDescending":"结果按每个文件的计数降序排序。","searchSortOrder.countAscending":"结果按每个文件的计数以升序排序。","search.sortOrder":"控制搜索结果的排序顺序。","miViewSearch":"搜索(&&S)","miGotoSymbolInWorkspace":"转到工作区中的符号(&&W)…"},"vs/workbench/contrib/search/browser/searchView":{"searchCanceled":"在找到结果前取消了搜索 - ","moreSearch":"切换搜索详细信息","searchScope.includes":"要包含的文件","label.includes":"搜索包含模式","searchScope.excludes":"排除的文件","label.excludes":"搜索排除模式","replaceAll.confirmation.title":"全部替换","replaceAll.confirm.button":"替换(&&R)","replaceAll.occurrence.file.message":"已将 {1} 文件中出现的 {0} 替换为“{2}”。","removeAll.occurrence.file.message":"已替换 {1} 文件中的 {0} 个匹配项。","replaceAll.occurrence.files.message":"已将 {1} 文件中出现的 {0} 替换为“{2}”。","removeAll.occurrence.files.message":"已替换 {1} 文件中出现的 {0}。","replaceAll.occurrences.file.message":"已将 {1} 文件中出现的 {0} 替换为“{2}”。","removeAll.occurrences.file.message":"已替换 {1} 文件中的 {0} 个匹配项。","replaceAll.occurrences.files.message":"已将 {1} 个文件中出现的 {0} 处替换为“{2}”。 ","removeAll.occurrences.files.message":"已替换 {1} 文件中出现的 {0}。","removeAll.occurrence.file.confirmation.message":"是否将 {1} 文件中出现的 {0} 替换为“{2}”?","replaceAll.occurrence.file.confirmation.message":"是否替换 {1} 文件中的 {0} 个匹配项？","removeAll.occurrence.files.confirmation.message":"是否将 {1} 文件中出现的 {0} 替换为“{2}”?","replaceAll.occurrence.files.confirmation.message":"是否替换 {1} 文件中出现的 {0}?","removeAll.occurrences.file.confirmation.message":"是否将 {1} 文件中出现的 {0} 替换为“{2}”?","replaceAll.occurrences.file.confirmation.message":"是否替换 {1} 文件中的 {0} 个匹配项？","removeAll.occurrences.files.confirmation.message":"是否将 {1} 个文件中的 {0} 次匹配替换为“{2}”?","replaceAll.occurrences.files.confirmation.message":"是否替换 {1} 文件中出现的 {0}?","emptySearch":"空搜索","ariaSearchResultsClearStatus":"搜索结果已清除","searchPathNotFoundError":"找不到搜索路径: {0}","searchMaxResultsWarning":"结果集仅包含所有匹配项的子集。请使你的搜索更加具体，减少结果。","noResultsIncludesExcludes":"在“{0}”中找不到结果(“{1}”除外) - ","noResultsIncludes":"“{0}”中未找到任何结果 - ","noResultsExcludes":"除“{0}”外，未找到任何结果 - ","noResultsFound":"未找到结果。查看您的设置配置排除, 并检查您的 gitignore 文件-","rerunSearch.message":"再次搜索","rerunSearchInAll.message":"在所有文件中再次搜索","openSettings.message":"打开设置","openSettings.learnMore":"了解详细信息","ariaSearchResultsStatus":"搜索 {1} 文件中返回的 {0} 个结果","forTerm":" - 搜索: {0}","useIgnoresAndExcludesDisabled":"- 排除设置和忽略文件被禁用了","openInEditor.message":"在编辑器中打开","openInEditor.tooltip":"将当前搜索结果复制到编辑器","search.file.result":"{0} 个结果，包含于 {1} 个文件中","search.files.result":"{1} 文件中有 {0} 个结果","search.file.results":"{1} 文件中有 {0} 个结果","search.files.results":"{1} 文件中有 {0} 个结果","searchWithoutFolder":"你尚未打开或指定文件夹。当前仅搜索打开的文件 -","openFolder":"打开文件夹"},"vs/workbench/contrib/search/browser/searchActions":{"showSearch":"显示搜索","replaceInFiles":"在文件中替换","toggleTabs":"切换类型搜索","RefreshAction.label":"刷新","CollapseDeepestExpandedLevelAction.label":"全部折叠","ExpandAllAction.label":"全部展开","ToggleCollapseAndExpandAction.label":"切换折叠和展开","ClearSearchResultsAction.label":"清除搜索结果","CancelSearchAction.label":"取消搜索","FocusNextSearchResult.label":"聚焦下一搜索结果","FocusPreviousSearchResult.label":"聚焦到上一搜索结果","RemoveAction.label":"消除","file.replaceAll.label":"全部替换","match.replace.label":"替换"},"vs/workbench/contrib/search/browser/symbolsQuickAccess":{"noSymbolResults":"没有匹配的工作区符号","openToSide":"打开转到侧边","openToBottom":"打开转到底部"},"vs/workbench/contrib/search/browser/anythingQuickAccess":{"noAnythingResults":"没有匹配的结果","recentlyOpenedSeparator":"最近打开","fileAndSymbolResultsSeparator":"文件和符号结果","fileResultsSeparator":"文件结果","filePickAriaLabelDirty":"{0}，存在更新","openToSide":"打开转到侧边","openToBottom":"打开转到底部","closeEditor":"从最近打开中删除"},"vs/workbench/contrib/search/browser/searchWidget":{"search.action.replaceAll.disabled.label":"全部替换(提交搜索以启用)","search.action.replaceAll.enabled.label":"全部替换","search.replace.toggle.button.title":"切换替换","label.Search":"搜索: 键入搜索词，然后按 Enter 进行搜索","search.placeHolder":"搜索","showContext":"切换上下文行","label.Replace":"替换: 键入待替换词，然后按 Enter 进行预览","search.replace.placeHolder":"替换"},"vs/workbench/contrib/search/browser/searchIcons":{"searchDetailsIcon":"用于使搜索详细信息可见的图标。","searchShowContextIcon":"搜索编辑器中的“切换上下文”图标。","searchHideReplaceIcon":"用于折叠搜索视图中的替换部分的图标。","searchShowReplaceIcon":"用于在搜索视图中展开“替换”部分的图标。","searchReplaceAllIcon":"搜索视图中的“全部替换”图标。","searchReplaceIcon":"搜索视图中的“替换”图标。","searchRemoveIcon":"用于删除搜索结果的图标。","searchRefreshIcon":"搜索视图中的“刷新”图标。","searchCollapseAllIcon":"搜索视图中的“折叠结果”图标。","searchExpandAllIcon":"搜索视图中的“展开结果”图标。","searchClearIcon":"搜索视图中的“清除结果”图标。","searchStopIcon":"搜索视图中的“停止”图标。","searchViewIcon":"查看搜索视图的图标。","searchNewEditorIcon":"用于打开新搜索编辑器的操作的图标。"},"vs/workbench/contrib/search/browser/patternInputWidget":{"defaultLabel":"输入","useExcludesAndIgnoreFilesDescription":"使用“排除设置”与“忽略文件”"},"vs/workbench/contrib/search/browser/searchResultsView":{"searchFolderMatch.other.label":"其他文件","searchFileMatches":"已找到 {0} 个文件","searchFileMatch":"已找到 {0} 个文件","searchMatches":"已找到 {0} 个匹配项","searchMatch":"已找到 {0} 个匹配项","lineNumStr":"位于第 {0} 行","numLinesStr":"其他 {0} 行","search":"搜索","folderMatchAriaLabel":"根目录 {1} 中找到 {0} 个匹配，搜索结果","otherFilesAriaLabel":"在工作区外存在 {0} 个匹配，搜索结果","fileMatchAriaLabel":"文件夹 {2} 的文件 {1} 中有 {0} 个匹配项，搜索结果","replacePreviewResultAria":"在第 {2} 列替换词组 {0} 为 {1}，同行文本为 {3}","searchResultAria":"在第 {1} 列找到词组 {0}，同行文本为 {2}"},"vs/workbench/contrib/search/common/queryBuilder":{"search.noWorkspaceWithName":"工作区中没有名为“{0}”的文件夹 "},"vs/workbench/contrib/search/browser/replaceService":{"fileReplaceChanges":"{0} ↔ {1} (Replace Preview)"},"vs/workbench/contrib/searchEditor/browser/searchEditor.contribution":{"searchEditor":"搜索编辑器","search":"搜索编辑器","searchEditor.deleteResultBlock":"删除文件结果","search.openNewSearchEditor":"新的搜索编辑器","search.openSearchEditor":"打开搜索编辑器","search.openNewEditorToSide":"打开侧边的新搜索编辑器","search.openResultsInEditor":"在编辑器中打开结果","search.rerunSearchInEditor":"再次搜索","search.action.focusQueryEditorWidget":"聚焦搜索编辑器输入","searchEditor.action.toggleSearchEditorCaseSensitive":"切换匹配大小写","searchEditor.action.toggleSearchEditorWholeWord":"切换全字匹配","searchEditor.action.toggleSearchEditorRegex":"切换使用正则表达式","searchEditor.action.toggleSearchEditorContextLines":"切换上下文行","searchEditor.action.increaseSearchEditorContextLines":"增加上下文行","searchEditor.action.decreaseSearchEditorContextLines":"减少上下文行","searchEditor.action.selectAllSearchEditorMatches":"选择所有匹配项"},"vs/workbench/contrib/searchEditor/browser/searchEditorActions":{"search.openNewEditor":"打开新的搜索编辑器"},"vs/workbench/contrib/searchEditor/browser/searchEditor":{"moreSearch":"切换搜索详细信息","searchScope.includes":"要包含的文件","label.includes":"搜索包含模式","searchScope.excludes":"排除的文件","label.excludes":"搜索排除模式","runSearch":"运行搜索","searchResultItem":"在文件 {2} 的 {1} 中匹配到 {0}","searchEditor":"搜索","textInputBoxBorder":"搜索编辑器文本输入框的边框。"},"vs/workbench/contrib/searchEditor/browser/searchEditorInput":{"searchTitle.withQuery":"搜索: {0}","searchTitle":"搜索"},"vs/workbench/contrib/searchEditor/browser/searchEditorSerialization":{"invalidQueryStringError":"查询字符串中的所有反斜杠都必须转义(\\\\\\\\)","numFiles":"{0} 文件","oneFile":"1 个文件","numResults":"{0} 个结果","oneResult":"1 个结果","noResults":"无结果","searchMaxResultsWarning":"结果集仅包含所有匹配项的子集。请使你的搜索更加具体，减少结果。"},"vs/workbench/contrib/snippets/browser/snippets.contribution":{"snippetSchema.json.prefix":"在 Intellisense 中选择代码片段时要使用的前缀","snippetSchema.json.body":"片段内容。请使用 \'$1\', \'${1:defaultText}\' 来定义光标位置，使用“$0”表示最终光标位置。请插入带有“${varName}”和“${varName:defaultText}”的变量值，例如 \\"这是文件: $TM_FILENAME\\"。","snippetSchema.json.description":"代码片段描述。","snippetSchema.json.default":"空代码片段","snippetSchema.json":"用户代码片段配置","snippetSchema.json.scope":"此代码段使用的语言名称列表，例如 \\"typescript,javascript\\"。"},"vs/workbench/contrib/snippets/browser/insertSnippet":{"snippet.suggestions.label":"插入片段","sep.userSnippet":"用户代码片段","sep.extSnippet":"扩展代码片段","sep.workspaceSnippet":"工作区代码片段","disableSnippet":"从 IntelliSense 中隐藏","isDisabled":"(从 IntelliSense 中隐藏)","enable.snippet":"在 IntelliSense 中显示","pick.placeholder":"选择代码段"},"vs/workbench/contrib/snippets/browser/snippetsService":{"invalid.path.0":"“contributes.{0}.path”中应为字符串。提供的值: {1}","invalid.language.0":"省略语言时，\\"contributes.{0}.path\\" 的值必须为一个 \\".code-snippets\\" 文件。提供的值: {1}","invalid.language":"\\"contributes.{0}.language\\" 中包含未知语言。提供的值: {1}","invalid.path.1":"“contributes.{0}.path”({1})应包含在扩展的文件夹({2})内。这可能会使扩展不可移植。","vscode.extension.contributes.snippets":"贡献代码段。","vscode.extension.contributes.snippets-language":"此代码片段参与的语言标识符。","vscode.extension.contributes.snippets-path":"代码片段文件的路径。该路径相对于扩展文件夹，通常以 \\"./snippets/\\" 开头。","badVariableUse":"扩展“{0}”中的一个或多个代码片段很可能混淆了片段变量和片段占位符 (有关详细信息，请访问 https://code.visualstudio.com/docs/editor/userdefinedsnippets#_snippet-syntax )","badFile":"无法读取代码片段文件“{0}”。"},"vs/workbench/contrib/snippets/browser/configureSnippets":{"global.scope":"(全局)","global.1":"({0})","name":"键入代码段文件名","bad_name1":"无效的文件名","bad_name2":"“{0}”不是有效的文件名","bad_name3":"“{0}”已存在","new.global_scope":"全局","new.global":"新建全局代码片段文件...","new.workspace_scope":"{0} 工作区","new.folder":"新建“{0}”文件夹的代码片段文件...","group.global":"现有代码片段","new.global.sep":"新代码片段","openSnippet.pickLanguage":"选择代码片段文件或创建代码片段","openSnippet.label":"配置用户代码片段","preferences":"首选项","miOpenSnippets":"用户片段(&&S)","userSnippets":"用户代码片段"},"vs/workbench/contrib/snippets/browser/snippetsFile":{"source.workspaceSnippetGlobal":"工作区代码片段","source.userSnippetGlobal":"全局用户代码片段","source.userSnippet":"用户代码片段"},"vs/workbench/contrib/snippets/browser/snippetCompletionProvider":{"detail.snippet":"{0} ({1})","snippetSuggest.longLabel":"{0}, {1}"},"vs/workbench/contrib/surveys/browser/nps.contribution":{"surveyQuestion":"是否介意参加快速反馈调查?","takeSurvey":"参加调查","remindLater":"以后提醒我","neverAgain":"不再显示"},"vs/workbench/contrib/surveys/browser/languageSurveys.contribution":{"helpUs":"帮助我们改善对 {0} 的支持","takeShortSurvey":"参与小调查","remindLater":"以后提醒我","neverAgain":"不再显示"},"vs/workbench/contrib/tags/electron-browser/workspaceTagsService":{"workspaceFound":"此文件夹包含工作区文件“{0}”，是否打开? [了解更多]({1})有关工作区文件的详细信息。","openWorkspace":"打开工作区","workspacesFound":"此文件夹包含多个工作区文件，是否打开? [了解更多]({0})有关工作区文件的详细信息。","selectWorkspace":"选择工作区","selectToOpen":"选择要打开的工作区"},"vs/workbench/contrib/tasks/electron-browser/taskService":{"TaskSystem.runningTask":"存在运行中的任务。要终止它吗?","TaskSystem.terminateTask":"终止任务(&&T)","TaskSystem.noProcess":"启动的任务不再存在。如果任务已生成出后台进程，则退出 VS Code 可能会导致出现孤立的进程。若要避免此情况，请使用等待标记启动最后一个后台进程。","TaskSystem.exitAnyways":"仍要退出(&&E)"},"vs/workbench/contrib/tasks/common/tasks":{"tasksCategory":"任务","TaskDefinition.missingRequiredProperty":"错误: 任务标识符“{0}”缺失必要属性“{1}”。将忽略该标识符。"},"vs/workbench/contrib/tasks/common/taskConfiguration":{"ConfigurationParser.invalidCWD":"警告: options.cwd 的类型必须是字符串。将忽略值 {0}\\r\\n","ConfigurationParser.inValidArg":"错误: 命令参数必须是字符串或带引号的字符串。提供的值为:\\r\\n{0}","ConfigurationParser.noShell":"警告: 仅当在终端中执行任务时支持 shell 配置。","ConfigurationParser.noName":"错误: 声明范围中的问题匹配程序必须具有名称:\\r\\n{0}\\r\\n","ConfigurationParser.unknownMatcherKind":"警告: 定义的问题匹配程序未知。支持的类型为 string | ProblemMatcher | Array<string | ProblemMatcher>。\\r\\n{0}\\r\\n","ConfigurationParser.invalidVariableReference":"错误: problemMatcher 引用无效: {0}\\r\\n","ConfigurationParser.noTaskType":"错误: 任务配置必须具有类型属性。将忽略此配置。\\r\\n{0}\\r\\n","ConfigurationParser.noTypeDefinition":"错误: 没有注册任务类型“{0}”。你是不是忘记安装含有相应任务提供器的扩展?","ConfigurationParser.missingType":"错误: 任务配置“{0}”缺失必要属性 \\"type\\"。将忽略该配置。","ConfigurationParser.incorrectType":"错误: 任务配置“{0}”使用了未知类型。将忽略该配置。","ConfigurationParser.notCustom":"错误: 任务未声明为自定义任务。将忽略该配置。\\r\\n{0}\\r\\n","ConfigurationParser.noTaskName":"错误: 任务必须提供标签属性。将忽略该任务。\\r\\n{0}\\r\\n","taskConfiguration.providerUnavailable":"警告: {0} 个任务在当前环境中不可用。\\r\\n","taskConfiguration.noCommandOrDependsOn":"错误: 任务“{0}”既未指定命令，也未指定 dependsOn 属性。将忽略该任务。其定义为:\\r\\n{1}","taskConfiguration.noCommand":"错误: 任务“{0}”未定义命令。将忽略该任务。其定义为:\\r\\n{1}","TaskParse.noOsSpecificGlobalTasks":"任务 version 2.0.0 不支持全局 OS 专属任务。请将其转换为具有特定于 OS 的命令的任务。受影响的任务包括:\\r\\n{0}"},"vs/workbench/contrib/tasks/node/processTaskSystem":{"version1_0":"任务系统配置的版本为 0.1.0 (可参见 tasks.json 文件)，只能执行自定义任务。请升级到版本 2.0.0 以运行任务: {0}","TaskRunnerSystem.unknownError":"在执行任务时发生未知错误。请参见任务输出日志了解详细信息。","TaskRunnerSystem.watchingBuildTaskFinished":"\\r\\n已完成对生成任务的监视。","TaskRunnerSystem.childProcessError":"启动外部程序{0} {1}失败。","TaskRunnerSystem.cancelRequested":"\\r\\n已根据用户请求终止任务“{0}”。","unknownProblemMatcher":"无法解析问题匹配器 {0}。将忽略此匹配程序"},"vs/workbench/contrib/tasks/node/processRunnerDetector":{"TaskSystemDetector.noGulpTasks":"正在运行的 gulp --tasks-simple 没有列出任何任务。你运行 npm 安装了吗?","TaskSystemDetector.noJakeTasks":"正在运行的 jake --tasks 没有列出任何任务。你运行 npm 安装了吗?","TaskSystemDetector.noGulpProgram":"你的系统上没有安装 Gulp。运行 npm install -g gulp 以安装它。","TaskSystemDetector.noJakeProgram":"你的系统上没有安装 Jake。运行 npm install -g jake 以安装它。","TaskSystemDetector.noGruntProgram":"你的系统上没有安装 Grunt。运行 npm install -g grunt 以安装它。","TaskSystemDetector.noProgram":"找不到程序 {0}。消息是 {1}","TaskSystemDetector.buildTaskDetected":"检测到名为“{0}”的生成任务。","TaskSystemDetector.testTaskDetected":"测试检测到的名为“{0}”的测试任务。"},"vs/workbench/contrib/tasks/browser/abstractTaskService":{"ConfigureTaskRunnerAction.label":"配置任务","tasks":"任务","TaskSystem.noHotSwap":"在有活动任务运行时更换任务执行引擎需要重新加载窗口","reloadWindow":"重新加载窗口","TaskService.pickBuildTaskForLabel":"选择生成任务(未定义默认生成任务)","taskServiceOutputPrompt":"任务出现错误。请查看输出结果，了解更多详细信息","showOutput":"显示输出","TaskServer.folderIgnored":"由于使用任务版本 0.1.0，文件夹 {0} 将被忽略","TaskService.providerUnavailable":"警告: {0} 个任务在当前环境中不可用。\\r\\n","TaskService.noBuildTask1":"未定义任何生成任务。使用 \\"isBuildCommand\\" 在 tasks.json 文件中标记任务。","TaskService.noBuildTask2":"未定义任何生成任务。在 tasks.json 文件中将任务标记为 \\"build\\" 组。","TaskService.noTestTask1":"未定义任何测试任务。使用 \\"isTestCommand\\" 在 tasks.json 文件中标记任务。","TaskService.noTestTask2":"未定义任何测试任务。在 tasks.json 文件中将任务标记为 \\"test\\" 组。","TaskServer.noTask":"未定义要执行的任务","TaskService.associate":"关联","TaskService.attachProblemMatcher.continueWithout":"继续而不扫描任务输出","TaskService.attachProblemMatcher.never":"从不扫描此任务的任务输出","TaskService.attachProblemMatcher.neverType":"从不扫描 {0} 个任务的任务输出","TaskService.attachProblemMatcher.learnMoreAbout":"了解有关扫描任务输出的详细信息","selectProblemMatcher":"选择针对何种错误和警告扫描任务输出","customizeParseErrors":"当前任务配置存在错误。请先更正错误，再自定义任务。","tasksJsonComment":"\\t// 请参阅 https://go.microsoft.com/fwlink/?LinkId=733558 \\r\\n\\t//查看有关 tasks.json 格式的文档","moreThanOneBuildTask":"tasks.json 中定义了很多生成任务。正在执行第一个任务。\\r\\n","TaskSystem.saveBeforeRun.prompt.title":"是否保存所有编辑器?","saveBeforeRun.save":"保存","saveBeforeRun.dontSave":"不保存","detail":"是否要在运行任务前保存所有编辑器?","TaskSystem.activeSame.noBackground":"任务“{0}”已处于活动状态。","terminateTask":"终止任务","restartTask":"重启任务","TaskSystem.active":"当前已有任务正在运行。请先终止它，然后再执行另一项任务。","TaskSystem.restartFailed":"未能终止并重启任务 {0}","unexpectedTaskType":"“{0}”任务的任务提供程序意外提供了“{1}”类型的任务。\\r\\n","TaskService.noConfiguration":"错误: {0} 任务检测未针对以下配置提供任务:\\r\\n{1}\\r\\n将忽略此任务。\\r\\n","TaskSystem.configurationErrors":"错误: 提供的任务配置具有验证错误，无法使用。请首先改正错误。","TaskSystem.invalidTaskJsonOther":"错误: {0} 中 tasks json 的内容存在语法错误。请先纠正它们，然后再执行任务。\\r\\n","TasksSystem.locationWorkspaceConfig":"工作区文件","TaskSystem.versionWorkspaceFile":".code 工作区中只允许 2.0.0 版本的任务。","TasksSystem.locationUserConfig":"用户设置","TaskSystem.versionSettings":"用户设置中只允许版本为 2.0.0 的任务。","taskService.ignoreingFolder":"忽略工作区文件夹 {0} 的任务配置。多文件夹工作区任务支持要求所有文件夹都使用任务版本 2.0.0\\r\\n","TaskSystem.invalidTaskJson":"错误: tasks.json 文件的内容存在语法错误。请先纠正它们，然后再执行任务。\\r\\n","TerminateAction.label":"终止任务","TaskSystem.unknownError":"运行任务时发生了错误。请参见任务日志了解详细信息。","configureTask":"配置任务","recentlyUsed":"最近使用的任务","configured":"配置的任务","detected":"检测到的任务","TaskService.ignoredFolder":"由于使用任务版本 0.1.0，以下工作区文件夹将被忽略: {0}","TaskService.notAgain":"不再显示","TaskService.pickRunTask":"选择要运行的任务","TaskService.noEntryToRunSlow":"$(plus) 配置任务","TaskService.noEntryToRun":"$(plus) 配置任务","TaskService.fetchingBuildTasks":"正在获取生成任务...","TaskService.pickBuildTask":"选择要运行的生成任务","TaskService.noBuildTask":"没有找到要运行的生成任务。配置生成任务...","TaskService.fetchingTestTasks":"正在获取测试任务...","TaskService.pickTestTask":"选择要运行的测试任务","TaskService.noTestTaskTerminal":"没有找到要运行的测试任务。配置任务...","TaskService.taskToTerminate":"选择要终止的任务","TaskService.noTaskRunning":"当前没有运行中的任务","TaskService.terminateAllRunningTasks":"所有正在运行的任务","TerminateAction.noProcess":"启动的进程不再存在。如果任务生成的后台任务退出 VS Code，则可能会导致出现孤立的进程。","TerminateAction.failed":"未能终止运行中的任务","TaskService.taskToRestart":"选择要重启的任务","TaskService.noTaskToRestart":"没有要重启的任务","TaskService.template":"选择任务模板","taskQuickPick.userSettings":"用户设置","TaskService.createJsonFile":"使用模板创建 tasks.json 文件","TaskService.openJsonFile":"打开 tasks.json 文件","TaskService.pickTask":"选择要配置的任务","TaskService.defaultBuildTaskExists":"{0} 已被标记为默认生成任务","TaskService.pickDefaultBuildTask":"选择要用作默认生成任务的任务","TaskService.defaultTestTaskExists":"{0} 已被标记为默认测试任务。","TaskService.pickDefaultTestTask":"选择要用作默认测试任务的任务","TaskService.pickShowTask":"选择要显示输出的任务","TaskService.noTaskIsRunning":"没有运行中的任务"},"vs/workbench/contrib/tasks/browser/terminalTaskSystem":{"TerminalTaskSystem.unknownError":"在执行任务时发生未知错误。请参见任务输出日志了解详细信息。","dependencyCycle":"存在依赖项循环。请参阅任务“{0}”。","dependencyFailed":"无法解析在工作区文件夹“{1}”中的依赖任务“{0}”","TerminalTaskSystem.nonWatchingMatcher":"任务 {0} 是后台任务，但使用的问题匹配器没有后台模式","TerminalTaskSystem.terminalName":"任务 - {0}","closeTerminal":"按任意键关闭终端。","reuseTerminal":"终端将被任务重用，按任意键关闭。","TerminalTaskSystem":"无法使用 cmd.exe 在 UNC 驱动器上执行 Shell 命令。","unknownProblemMatcher":"无法解析问题匹配器 {0}。将忽略此匹配程序"},"vs/workbench/contrib/tasks/browser/task.contribution":{"building":"正在生成...","numberOfRunningTasks":"{0} 个正在运行的任务","runningTasks":"显示运行中的任务","status.runningTasks":"运行任务","miRunTask":"运行任务(&&R)…","miBuildTask":"运行生成任务(&&B)…","miRunningTask":"显示正在运行的任务(&&G)…","miRestartTask":"重启正在运行的任务(&&E)…","miTerminateTask":"终止任务(&&T)…","miConfigureTask":"配置任务(&&C)…","miConfigureBuildTask":"配置默认生成任务(&&F)…","workbench.action.tasks.openWorkspaceFileTasks":"打开工作区任务","ShowLogAction.label":"显示任务日志","RunTaskAction.label":"运行任务","ReRunTaskAction.label":"重新运行上一个任务","RestartTaskAction.label":"重启正在运行的任务","ShowTasksAction.label":"显示运行中的任务","TerminateAction.label":"终止任务","BuildAction.label":"运行生成任务","TestAction.label":"运行测试任务","ConfigureDefaultBuildTask.label":"配置默认生成任务","ConfigureDefaultTestTask.label":"配置默认测试任务","workbench.action.tasks.openUserTasks":"打开用户任务","tasksQuickAccessPlaceholder":"键入要运行的任务的名称。","tasksQuickAccessHelp":"运行任务","tasksConfigurationTitle":"任务","task.problemMatchers.neverPrompt":"配置在运行任务时是否显示问题匹配器提示。设置为\\"true\\"从不提示，或使用任务类型的字典仅关闭特定任务类型的提示。","task.problemMatchers.neverPrompt.boolean":"为所有任务设置问题匹配器提示行为。","task.problemMatchers.neverPrompt.array":"包含任务类型布尔对的对象，从不提示有问题的匹配者。","task.autoDetect":"控制为所有任务提供程序扩展启用\\"提供任务\\"。如果\\"任务: 运行任务\\"命令速度较慢，则禁用任务提供程序的自动检测可能会提供帮助。单个扩展还可以提供禁用自动检测的设置。","task.slowProviderWarning":"配置当提供程序速度较慢时是否显示警告","task.slowProviderWarning.boolean":"为所有任务设置慢速提供程序警告。","task.slowProviderWarning.array":"从不显示慢速提供程序警告的任务类型的数组。","task.quickOpen.history":"控制任务快速打开对话框中跟踪的最近项目数。","task.quickOpen.detail":"控制是否显示在“运行任务”等任务快速选取中具有详细信息的任务的详细信息。","task.quickOpen.skip":"控制当只有一个任务要选取时是否跳过任务快速选取。","task.quickOpen.showAll":"使 Tasks: Run Task 命令使用速度较慢的“全部显示”行为，而不是使用任务按提供程序进行分组的速度更快的双层选取器。","task.saveBeforeRun":"在运行任务前保存所有未保存的编辑器。","task.saveBeforeRun.always":"运行前始终保存所有编辑器。","task.saveBeforeRun.never":"运行前绝不保存编辑器。","task.SaveBeforeRun.prompt":"提示在运行前是否保存编辑器。"},"vs/workbench/contrib/tasks/common/taskDefinitionRegistry":{"TaskDefinition.description":"实际任务类型。请注意，以 \\"$\\" 开头的类型仅保留内部使用。","TaskDefinition.properties":"任务类型的其他属性","TaskDefinition.when":"必须为 true 才能启用此类型任务的条件。请考虑使用适合此任务定义的 `shellExecutionSupported`、`processExecutionSupported` 和 `customExecutionSupported`。","TaskTypeConfiguration.noType":"任务类型配置缺少必需的 \\"taskType\\" 属性","TaskDefinitionExtPoint":"配置任务种类"},"vs/workbench/contrib/tasks/common/problemMatcher":{"ProblemPatternParser.problemPattern.missingRegExp":"问题模式缺少正则表达式。","ProblemPatternParser.loopProperty.notLast":"循环属性仅在最一个行匹配程序上受支持。","ProblemPatternParser.problemPattern.kindProperty.notFirst":"问题模式无效。\\"kind\\" 属性必须提供，且仅能为第一个元素","ProblemPatternParser.problemPattern.missingProperty":"问题模式无效。必须至少包含一个文件和一条消息。","ProblemPatternParser.problemPattern.missingLocation":"问题模式无效。它必须为“file”，代码行或消息匹配组其中的一项。","ProblemPatternParser.invalidRegexp":"错误: 字符串 {0} 不是有效的正则表达式。\\r\\n","ProblemPatternSchema.regexp":"用于在输出中查找错误、警告或信息的正则表达式。","ProblemPatternSchema.kind":"模式匹配的是一个位置 (文件、一行) 还是仅为一个文件。","ProblemPatternSchema.file":"文件名的匹配组索引。如果省略，则使用 1。","ProblemPatternSchema.location":"问题位置的匹配组索引。有效的位置模式为(line)、(line,column)和(startLine,startColumn,endLine,endColumn)。如果省略了，将假定(line,column)。","ProblemPatternSchema.line":"问题行的匹配组索引。默认值为 2","ProblemPatternSchema.column":"问题行字符的匹配组索引。默认值为 3","ProblemPatternSchema.endLine":"问题结束行的匹配组索引。默认为 undefined","ProblemPatternSchema.endColumn":"问题结束行字符的匹配组索引。默认为 undefined","ProblemPatternSchema.severity":"问题严重性的匹配组索引。默认为 undefined","ProblemPatternSchema.code":"问题代码的匹配组索引。默认为 undefined","ProblemPatternSchema.message":"消息的匹配组索引。如果省略，则在指定了位置时默认值为 4，在其他情况下默认值为 5。","ProblemPatternSchema.loop":"在多行中，匹配程序循环指示是否只要匹配就在循环中执行此模式。只能在多行模式的最后一个模式上指定。","NamedProblemPatternSchema.name":"问题模式的名称。","NamedMultiLineProblemPatternSchema.name":"问题多行问题模式的名称。","NamedMultiLineProblemPatternSchema.patterns":"实际模式。","ProblemPatternExtPoint":"提供问题模式","ProblemPatternRegistry.error":"无效问题模式。此模式将被忽略。","ProblemMatcherParser.noProblemMatcher":"错误: 说明无法转换为问题匹配程序:\\r\\n{0}\\r\\n","ProblemMatcherParser.noProblemPattern":"错误: 说明中未定义有效的问题模式:\\r\\n{0}\\r\\n","ProblemMatcherParser.noOwner":"错误: 说明中未定义所有者:\\r\\n{0}\\r\\n","ProblemMatcherParser.noFileLocation":"错误: 说明中未定义文件位置:\\r\\n{0}\\r\\n","ProblemMatcherParser.unknownSeverity":"信息: 未知的严重性 {0}。有效值为“错误”、“警告”和“信息”。\\r\\n","ProblemMatcherParser.noDefinedPatter":"错误: 标识符为 {0} 的模式不存在。","ProblemMatcherParser.noIdentifier":"错误: 模式属性引用空标识符。","ProblemMatcherParser.noValidIdentifier":"错误: 模式属性 {0} 是无效的模式变量名。","ProblemMatcherParser.problemPattern.watchingMatcher":"问题匹配程序必须定义监视的开始模式和结束模式。","ProblemMatcherParser.invalidRegexp":"错误: 字符串 {0} 不是有效的正则表达式。\\r\\n","WatchingPatternSchema.regexp":"用于检测后台任务开始或结束的正则表达式。","WatchingPatternSchema.file":"文件名的匹配组索引。可以省略。","PatternTypeSchema.name":"所提供或预定义模式的名称","PatternTypeSchema.description":"问题模式或者所提供或预定义问题模式的名称。如果已指定基准，则可以省略。","ProblemMatcherSchema.base":"要使用的基问题匹配程序的名称。","ProblemMatcherSchema.owner":"代码内问题的所有者。如果指定了基准，则可省略。如果省略，并且未指定基准，则默认值为“外部”。","ProblemMatcherSchema.source":"描述此诊断信息来源的人类可读字符串。如，\\"typescript\\" 或 \\"super lint\\"。","ProblemMatcherSchema.severity":"捕获问题的默认严重性。如果模式未定义严重性的匹配组，则使用。","ProblemMatcherSchema.applyTo":"控制文本文档上报告的问题是否仅应用于打开、关闭或所有文档。","ProblemMatcherSchema.fileLocation":"定义应如何解释问题模式中报告的文件名。相对文件位置可能是一个数组，其中数组的第二个元素是相对文件位置的路径。","ProblemMatcherSchema.background":"用于跟踪在后台任务上激活的匹配程序的开始和结束的模式。","ProblemMatcherSchema.background.activeOnStart":"如果设置为 true，则任务启动时后台监视器处于活动模式。这相当于发出与 beginsPattern 匹配的行","ProblemMatcherSchema.background.beginsPattern":"如果在输出内匹配，则会发出后台任务开始的信号。","ProblemMatcherSchema.background.endsPattern":"如果在输出内匹配，则会发出后台任务结束的信号。","ProblemMatcherSchema.watching.deprecated":"\\"watching\\" 属性已被弃用，请改用 \\"background\\"。","ProblemMatcherSchema.watching":"用于跟踪监视匹配程序开始和结束的模式。","ProblemMatcherSchema.watching.activeOnStart":"如果设置为 true，则当任务开始时观察程序处于活动模式。这相当于发出与 beginPattern 匹配的行。","ProblemMatcherSchema.watching.beginsPattern":"如果在输出内匹配，则在监视任务开始时会发出信号。","ProblemMatcherSchema.watching.endsPattern":"如果在输出内匹配，则在监视任务结束时会发出信号。","LegacyProblemMatcherSchema.watchedBegin.deprecated":"此属性已弃用。请改用观看属性。","LegacyProblemMatcherSchema.watchedBegin":"一个正则表达式，发出受监视任务开始执行(通过文件监视触发)的信号。","LegacyProblemMatcherSchema.watchedEnd.deprecated":"此属性已弃用。请改用观看属性。","LegacyProblemMatcherSchema.watchedEnd":"一个正则表达式，发出受监视任务结束执行的信号。","NamedProblemMatcherSchema.name":"要引用的问题匹配程序的名称。","NamedProblemMatcherSchema.label":"问题匹配程序的人类可读标签。","ProblemMatcherExtPoint":"提供问题匹配程序","msCompile":"微软编译器问题","lessCompile":"Less 问题","gulp-tsc":"Gulp TSC 问题","jshint":"JSHint 问题","jshint-stylish":"JSHint stylish 问题","eslint-compact":"ESLint compact 问题","eslint-stylish":"ESLint stylish 问题","go":"Go 问题"},"vs/workbench/contrib/tasks/common/taskTemplates":{"dotnetCore":"执行 .NET Core 生成命令","msbuild":"执行生成目标","externalCommand":"运行任意外部命令的示例","Maven":"执行常见的 maven 命令"},"vs/workbench/contrib/tasks/browser/runAutomaticTasks":{"tasks.run.allowAutomatic":"此文件夹已在 \\"tasks.json\\" 中定义任务({0})；打开此文件夹时，这些任务将自动运行。是否自动任务在你打开此文件夹时运行?","allow":"允许并运行","disallow":"禁止","openTasks":"打开tasks.json","workbench.action.tasks.manageAutomaticRunning":"管理文件夹中的自动任务","workbench.action.tasks.allowAutomaticTasks":"允许文件夹中的自动任务","workbench.action.tasks.disallowAutomaticTasks":"禁止文件夹中的自动任务"},"vs/workbench/contrib/tasks/browser/taskQuickPick":{"taskQuickPick.showAll":"显示所有任务...","configureTaskIcon":"任务选择列表中的“配置”图标。","removeTaskIcon":"任务选择列表中的“删除”图标。","configureTask":"配置任务","contributedTasks":"已提供","taskType":"全部 {0} 个任务","removeRecent":"删除最近使用的任务","recentlyUsed":"最近使用过","configured":"已配置","TaskQuickPick.goBack":"返回","TaskQuickPick.noTasksForType":"未找到任务 {0}。返回↩","noProviderForTask":"没有为“{0}”类型的任务注册任务提供程序。"},"vs/workbench/contrib/tasks/common/jsonSchema_v1":{"JsonSchema.version.deprecated":"任务版本 0.1.0 已被弃用。请使用 2.0.0","JsonSchema.version":"配置的版本号","JsonSchema._runner":"此 runner 已完成使命。请使用官方 runner 属性","JsonSchema.runner":"定义任务是否作为进程执行，输出显示在输出窗口还是在终端内。","JsonSchema.windows":"Windows 特定的命令配置","JsonSchema.mac":"Mac 特定的命令配置","JsonSchema.linux":"Linux 特定的命令配置","JsonSchema.shell":"指定命令是 shell 命令还是外部程序。如果省略，则默认为 false。"},"vs/workbench/contrib/tasks/common/jsonSchema_v2":{"JsonSchema.shell":"指定命令是 shell 命令还是外部程序。如果省略，则默认为 false。","JsonSchema.tasks.isShellCommand.deprecated":"isShellCommand 属性已被弃用。请改为使用任务的 type 属性和选项中的 shell 属性。另请参阅 1.14 发行说明。","JsonSchema.tasks.dependsOn.identifier":"任务标识符。","JsonSchema.tasks.dependsOn.string":"此任务依赖的另一任务。","JsonSchema.tasks.dependsOn.array":"此任务依赖的其他任务。","JsonSchema.tasks.dependsOn":"表示另一个任务的字符串或此任务所依赖的其他任务的数组。","JsonSchema.tasks.dependsOrder.parallel":"并行运行所有 dependsOn 任务。","JsonSchema.tasks.dependsOrder.sequence":"按顺序运行所有 dependsOn 任务。","JsonSchema.tasks.dependsOrder":"确定此任务的依赖任务的顺序。请注意，此属性不是递归的。","JsonSchema.tasks.detail":"任务的可选说明，在“运行任务”快速选取中作为详细信息显示。","JsonSchema.tasks.presentation":"配置用于显示任务输出并读取其输入的面板。","JsonSchema.tasks.presentation.echo":"控制是否将执行的命令显示到面板中。默认值为“true”。","JsonSchema.tasks.presentation.focus":"控制面板是否获取焦点。默认值为“false”。如果设置为“true”，面板也会显示。","JsonSchema.tasks.presentation.revealProblems.always":"执行此任务时, 始终显示问题面板。","JsonSchema.tasks.presentation.revealProblems.onProblem":"只有在发现问题时, 才会显示问题面板。","JsonSchema.tasks.presentation.revealProblems.never":"执行此任务时, 永远不会显示问题面板。","JsonSchema.tasks.presentation.revealProblems":"控制在运行此任务时是否显示问题面板。优先于 \\"显示\\" 选项。默认值为 \\"从不\\"。","JsonSchema.tasks.presentation.reveal.always":"总是在此任务执行时显示终端。","JsonSchema.tasks.presentation.reveal.silent":"只有当任务因错误而退出或者问题匹配器发现错误时，才会显示终端。","JsonSchema.tasks.presentation.reveal.never":"不要在此任务执行时显示终端。","JsonSchema.tasks.presentation.reveal":"控制运行任务的终端是否显示。可按选项 \\"revealProblems\\" 进行替代。默认设置为“始终”。","JsonSchema.tasks.presentation.instance":"控制是否在任务间共享面板。同一个任务使用相同面板还是每次运行时新创建一个面板。","JsonSchema.tasks.presentation.showReuseMessage":"控制是否显示“终端将被任务重用，按任意键关闭”提示。","JsonSchema.tasks.presentation.clear":"控制是否在执行任务之前清除终端。","JsonSchema.tasks.presentation.group":"控制是否使用拆分窗格在特定终端组中执行任务。","JsonSchema.tasks.terminal":"terminal 属性已被弃用。请改为使用 presentation","JsonSchema.tasks.group.kind":"任务的执行组。","JsonSchema.tasks.group.isDefault":"定义此任务是否为组中的默认任务。","JsonSchema.tasks.group.defaultBuild":"将此任务标记为默认生成任务。","JsonSchema.tasks.group.defaultTest":"将此任务标记为默认测试任务。","JsonSchema.tasks.group.build":"将任务标记为可通过 \\"运行生成任务\\" 命令访问的生成任务。","JsonSchema.tasks.group.test":"将任务标记为可通过 \\"Run Test Task\\" 命令访问的测试任务。","JsonSchema.tasks.group.none":"将任务分配为没有组","JsonSchema.tasks.group":"定义此任务属于的执行组。它支持 \\"build\\" 以将其添加到生成组，也支持 \\"test\\" 以将其添加到测试组。","JsonSchema.tasks.type":"定义任务是被作为进程运行还是在 shell 中作为命令运行。","JsonSchema.commandArray":"执行的 Shell 命令。数组项将使用空格连接","JsonSchema.command.quotedString.value":"实际命令值","JsonSchema.tasks.quoting.escape":"使用 Shell 的转义字符来转义文本 (如，PowerShell 下的 ` 和 bash 下的 \\\\ )","JsonSchema.tasks.quoting.strong":"使用 Shell 的强引用字符来引用参数 (例如在 PowerShell 和 bash 下的 \')。","JsonSchema.tasks.quoting.weak":"使用 Shell 的弱引用字符来引用参数 (例如在 PowerShell 和 bash 下的 \\")。","JsonSchema.command.quotesString.quote":"如何引用命令值。","JsonSchema.command":"要执行的命令。可以是外部程序或 shell 命令。","JsonSchema.args.quotedString.value":"实际参数值","JsonSchema.args.quotesString.quote":"参数值应该如何引用。","JsonSchema.tasks.args":"调用此任务时要传递给命令的参数。","JsonSchema.tasks.label":"任务的用户界面标签","JsonSchema.version":"配置的版本号。","JsonSchema.tasks.identifier":"用于在 launch.json 或 dependsOn 子句中引用任务的用户定义标识符。","JsonSchema.tasks.identifier.deprecated":"已弃用用户定义的标识符。对于自定义任务，请使用名称进行引用；对于由扩展提供的任务，请使用其中定义的任务标识符。","JsonSchema.tasks.reevaluateOnRerun":"是否在重新运行时重新评估任务变量。","JsonSchema.tasks.runOn":"对该任务何时运行进行配置。如果设置为 folderOpen，那么该任务将在文件夹打开时自动运行。","JsonSchema.tasks.instanceLimit":"允许同时运行的任务的实例数。","JsonSchema.tasks.runOptions":"任务的运行相关选项","JsonSchema.tasks.taskLabel":"任务标签","JsonSchema.tasks.taskName":"任务名称","JsonSchema.tasks.taskName.deprecated":"任务的 name 属性已被弃用。请改为使用 label 属性。","JsonSchema.tasks.background":"执行的任务是否保持活动状态并在后台运行。","JsonSchema.tasks.promptOnClose":"若 VS Code 关闭时有一个任务正在运行，是否提示用户。","JsonSchema.tasks.matchers":"要使用的问题匹配程序。可以是一个字符串或一个问题匹配程序定义，也可以是一个字符串数组和多个问题匹配程序。","JsonSchema.customizations.customizes.type":"要自定义的任务类型","JsonSchema.tasks.customize.deprecated":"customize 属性已被弃用。请参阅 1.14 发行说明了解如何迁移到新的任务自定义方法","JsonSchema.tasks.showOutput.deprecated":"showOutput 属性已被弃用。请改为使用 presentation 属性内的 reveal 属性。另请参阅 1.14 发行说明。","JsonSchema.tasks.echoCommand.deprecated":"isBuildCommand 属性已被弃用。请改为使用 presentation 属性内的 echo 属性。另请参阅 1.14 发行说明。","JsonSchema.tasks.suppressTaskName.deprecated":"suppressTaskName 属性已被弃用。请改为在任务中内嵌命令及其参数。另请参阅 1.14 发行说明。","JsonSchema.tasks.isBuildCommand.deprecated":"isBuildCommand 属性已被弃用。请改为使用 group 属性。另请参阅 1.14 发行说明。","JsonSchema.tasks.isTestCommand.deprecated":"isTestCommand 属性已被弃用。请改为使用 group 属性。另请参阅 1.14 发行说明。","JsonSchema.tasks.taskSelector.deprecated":"taskSelector 属性已被弃用。请改为在任务中内嵌命令及其参数。另请参阅 1.14 发行说明。","JsonSchema.windows":"Windows 特定的命令配置","JsonSchema.mac":"Mac 特定的命令配置","JsonSchema.linux":"Linux 特定的命令配置"},"vs/workbench/contrib/tasks/browser/tasksQuickAccess":{"noTaskResults":"没有匹配的任务","TaskService.pickRunTask":"选择要运行的任务"},"vs/workbench/contrib/tasks/common/jsonSchemaCommon":{"JsonSchema.options":"其他命令选项","JsonSchema.options.cwd":"已执行程序或脚本的当前工作目录。如果省略，则使用代码的当前工作区根。","JsonSchema.options.env":"已执行程序或 shell 的环境。如果省略，则使用父进程的环境。","JsonSchema.tasks.matcherError":"无法识别的问题匹配程序。是否已安装支持此问题匹配程序的扩展?","JsonSchema.shellConfiguration":"配置使用的 shell。","JsonSchema.shell.executable":"待使用的 shell。","JsonSchema.shell.args":"shell 参数。","JsonSchema.command":"要执行的命令。可以是外部程序或 shell 命令。","JsonSchema.tasks.args":"调用此任务时要传递给命令的参数。","JsonSchema.tasks.taskName":"任务名称","JsonSchema.tasks.windows":"Windows 特定的命令配置","JsonSchema.tasks.matchers":"要使用的问题匹配程序。可以是一个字符串或一个问题匹配程序定义，也可以是一个字符串数组和多个问题匹配程序。","JsonSchema.tasks.mac":"Mac 特定的命令配置","JsonSchema.tasks.linux":"Linux 特定的命令配置","JsonSchema.tasks.suppressTaskName":"控制是否将任务名作为参数添加到命令。如果省略，则使用全局定义的值。","JsonSchema.tasks.showOutput":"控制是否显示正在运行的任务的输出。如果省略，则使用全局定义的值。","JsonSchema.echoCommand":"控制是否将已执行的命令回显到输出。默认值为 false。","JsonSchema.tasks.watching.deprecation":"已弃用。改用 isBackground。","JsonSchema.tasks.watching":"已执行的任务是否保持活动状态，并且是否在监视文件系统。","JsonSchema.tasks.background":"执行的任务是否保持活动状态并在后台运行。","JsonSchema.tasks.promptOnClose":"若 VS Code 关闭时有一个任务正在运行，是否提示用户。","JsonSchema.tasks.build":"将此任务映射到代码的默认生成命令。","JsonSchema.tasks.test":"将此任务映射到代码的默认测试命令。","JsonSchema.args":"传递到命令的其他参数。","JsonSchema.showOutput":"控制是否显示运行任务的输出。如果省略，则使用“始终”。","JsonSchema.watching.deprecation":"已弃用。改用 isBackground。","JsonSchema.watching":"已执行的任务是否保持活动状态，并且是否在监视文件系统。","JsonSchema.background":"已执行的任务是否保持活动状态并在后台运行。","JsonSchema.promptOnClose":"在具有正在运行的后台任务的情况下关闭 VS 代码时是否提示用户。","JsonSchema.suppressTaskName":"控制是否将任务名作为参数添加到命令。默认值是 false。","JsonSchema.taskSelector":"指示参数是任务的前缀。","JsonSchema.matchers":"要使用的问题匹配程序。可以是字符串或问题匹配程序定义，或字符串和问题匹配程序数组。","JsonSchema.tasks":"任务配置。通常是外部任务运行程序中已定义任务的扩充。"},"vs/workbench/contrib/terminal/common/terminalConfiguration":{"terminalIntegratedConfigurationTitle":"集成终端","terminal.integrated.sendKeybindingsToShell":"将大部分键绑定调度到终端而不是工作台，重写 \\"#terminal.integrated.commandsToSkipShell#\\"，这可选择性地用于进行微调。","terminal.integrated.automationShell.linux":"一个路径，设置后将替代 {0}，并忽略与自动化相关的终端使用情况(例如任务和调试)的 {1} 个值。","terminal.integrated.automationShell.osx":"一个路径，设置后将替代 {0}，并忽略与自动化相关的终端使用情况(例如任务和调试)的 {1} 个值。","terminal.integrated.automationShell.windows":"一个路径，设置后将替代 {0}，并忽略与自动化相关的终端使用情况(例如任务和调试)的 {1} 值。","terminal.integrated.shellArgs.linux":"在 Linux 终端上时要使用的命令行参数。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。","terminal.integrated.shellArgs.osx":"在 macOS 终端上时要使用的命令行参数。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。","terminal.integrated.shellArgs.windows":"在 Windows 终端上时要使用的命令行参数。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。","terminal.integrated.shellArgs.windows.string":"在 Windows 终端上时要使用的命令行参数(采用[命令行格式](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6) )。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。","terminal.integrated.macOptionIsMeta":"控制是否将选项键视为 macOS 中的终端上的元键。","terminal.integrated.macOptionClickForcesSelection":"控制在 macOS 上使用 Option+单击时是否强制选择内容。这将强制进行常规(行)选择并禁止使用列选择模式。这样，可使用常规终端选择进行复制粘贴，例如在 tmux 中启用鼠标模式时。","terminal.integrated.copyOnSelection":"控制是否将在终端中选定的文本复制到剪贴板。","terminal.integrated.drawBoldTextInBrightColors":"控制终端中的加粗文本是否始终使用 \\"bright\\" ANSI 颜色变量。","terminal.integrated.fontFamily":"控制终端的字体系列，它默认为 \\"#editor.fontFamily#\\" 的值。","terminal.integrated.fontSize":"控制终端的字号(以像素为单位)。","terminal.integrated.letterSpacing":"控制终端的字母间距，这是一个整数值，表示要在字符之间增加的额外像素量。","terminal.integrated.lineHeight":"控制终端的行高，此数字乘以终端字号等于实际行高(以像素为单位)。","terminal.integrated.minimumContrastRatio":"设置每个单元格的前景色时，将改为尝试符合指定的对比度比率。示例值:\\r\\n\\r\\n- 1: 默认值，不执行任何操作。\\r\\n- 4.5: [符合 WCAG AA 标准(最低)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html)。\\r\\n- 7: [符合 WCAG AAA 标准(增强)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).\\r\\n- 21: 黑底白字或白底黑字。","terminal.integrated.fastScrollSensitivity":"按 \\"Alt\\" 时的滚动速度加倍。","terminal.integrated.mouseWheelScrollSensitivity":"要在鼠标滚轮滚动事件的 \\"deltaY\\" 上使用的乘数。","terminal.integrated.fontWeightError":"仅允许使用关键字“正常”和“加粗”，或使用介于 1 至 1000 之间的数字。","terminal.integrated.fontWeight":"要在终端中用于非粗体文本的字体粗细。接受“正常”和“加粗”这两个关键字，或接受 1-1000 之间的数字。","terminal.integrated.fontWeightBold":"要在终端中用于粗体文本的字体粗细。接受“正常”和“加粗”这两个关键字，或接受 1-1000 之间的数字。","terminal.integrated.cursorBlinking":"控制终端光标是否闪烁。","terminal.integrated.cursorStyle":"控制终端光标的样式。","terminal.integrated.cursorWidth":"控制在 \\"#terminal.integrated.cursorStyle#\\" 设置为 \\"line\\" 时光标的宽度。","terminal.integrated.scrollback":"控制终端在其缓冲区中保留的最大行数。","terminal.integrated.detectLocale":"控制是否检测 \\"$LANG\\" 环境变量并将其设置为符合 UTF-8 的选项，因为 VS Code 的终端仅支持来自 shell 的 UTF-8 编码数据。","terminal.integrated.detectLocale.auto":"如果现有变量不存在或不以 \\"\'.UTF-8\'\\" 结尾，则设置 \\"$LANG\\" 环境变量。","terminal.integrated.detectLocale.off":"请勿设置 \\"$LANG\\" 环境变量。","terminal.integrated.detectLocale.on":"始终设置 \\"$LANG\\" 环境变量。","terminal.integrated.rendererType.auto":"让 VS Code 猜测要使用的呈现器。","terminal.integrated.rendererType.canvas":"使用标准 GPU/基于画布的呈现器。","terminal.integrated.rendererType.dom":"使用基于回退 DOM 的呈现器。","terminal.integrated.rendererType.experimentalWebgl":"使用实验性的基于 webgl 的呈现器。请注意，存在一些[已知问题](https://github.com/xtermjs/xterm.js/issues?q=is%3Aopen+is%3Aissue+label%3Aarea%2Faddon%2Fwebgl)。","terminal.integrated.rendererType":"控制如何呈现终端。","terminal.integrated.rightClickBehavior.default":"显示上下文菜单。","terminal.integrated.rightClickBehavior.copyPaste":"当有选定内容时复制，否则粘贴。","terminal.integrated.rightClickBehavior.paste":"右键单击时粘贴。","terminal.integrated.rightClickBehavior.selectWord":"选择光标下方的字词并显示上下文菜单。","terminal.integrated.rightClickBehavior":"控制终端如何回应右键单击操作。","terminal.integrated.cwd":"将在其中启动终端的显式起始路径，它用作 shell 进程的当前工作目录(cwd)。如果根目录不是方便的 cwd，此路径在工作区设置中可能十分有用。","terminal.integrated.confirmOnExit":"控制在存在活动终端会话的情况下是否要在退出时进行确认。","terminal.integrated.enableBell":"控制是否启用终端铃声。","terminal.integrated.commandsToSkipShell":"一组命令 ID，其键绑定将不发送至 shell，而是始终由 VS Code 进行处理。这样的话，通常由 shell 使用的键绑定的行为可如同焦点未在终端上时的行为一样，例如按 “Ctrl+P” 来启动“快速打开”。\\r\\n\\r\\n&nbsp;\\r\\n\\r\\n默认跳过多项命令。要替代默认值并转而将相关命令的键绑定传递给 shell，请添加以 “-” 字符为前缀的命令。例如，添加 “-workbench.action.quickOpen” 可使 “Ctrl+P”到达 shell。\\r\\n\\r\\n&nbsp;\\r\\n\\r\\n在设置编辑器中查看时，下面的默认跳过命令列表会被截断。要查看完整列表，请[打开默认设置 JSON](command:workbench.action.openRawDefaultSettings“打开默认设置(JSON)”)，然后从下面的列表中搜索第一个命令。\\r\\n\\r\\n&nbsp;\\r\\n\\r\\n默认跳过的命令:\\r\\n\\r\\n{0}","terminal.integrated.allowChords":"是否允许在终端中同时按下键绑定。请注意，如果设置为 true 且击键导致同时按键，则将绕过 `#terminal.integrated.commandsToSkipShell#`；如果想要按 Ctrl+K 转到 shell (而不是 VS Code)，则将此项设置为 false 尤其有用。","terminal.integrated.allowMnemonics":"是否允许使用菜单栏助记符(如 Alt+F)来触发“打开菜单栏”。请注意，这将导致在设为 true 时，所有 Alt 按键都将跳过 shell。此设置在 macOS 不起作用。","terminal.integrated.inheritEnv":"新的 shell 是否应从 VS Code 继承其环境。Windows 上不支持此设置。","terminal.integrated.env.osx":"具有环境变量的对象，这些变量将添加到 macOS 中的终端要使用的 VS Code 进程。如果设置为 \\"null\\"，则删除环境变量。","terminal.integrated.env.linux":"具有环境变量的对象，这些变量将添加到 Linux 上的终端要使用的 VS Code 进程。如果设置为 \\"null\\"，则删除环境变量。","terminal.integrated.env.windows":"具有环境变量的对象，这些变量将添加到将由 Windows 上的终端使用的 VS Code 进程。设置为 \\"null\\" 以删除环境变量。","terminal.integrated.environmentChangesIndicator":"是否在每个终端上显示环境更改指示器，该指示器解释了使是否已进行扩展或想要对终端环境进行更改。","terminal.integrated.environmentChangesIndicator.off":"禁用指示器。","terminal.integrated.environmentChangesIndicator.on":"启用指示器。","terminal.integrated.environmentChangesIndicator.warnonly":"仅当终端环境为“已过时”时，仅显示警告指示器，而不是显示指出终端环境已由扩展修改的信息指示器。","terminal.integrated.showExitAlert":"控制在退出代码为非零时是否显示“终端进程已终止且显示退出代码”警报。","terminal.integrated.splitCwd":"控制拆分终端开始时使用的工作目录。","terminal.integrated.splitCwd.workspaceRoot":"新的拆分终端将使用工作区根作为工作目录。在多根工作区中，提供了要使用根文件夹的选项。","terminal.integrated.splitCwd.initial":"新的拆分终端将使用父终端开始时使用的工作目录。","terminal.integrated.splitCwd.inherited":"在 macOS 和 Linux 上，新的拆分终端将使用父终端的工作目录。在 Windows 上，这与初始行为相同。","terminal.integrated.windowsEnableConpty":"是否使用 ConPTY 进行 Windows 终端进程通信(需要 Windows 10 内部版本号 18309+)。如果此设置为 false，将使用 Winpty。","terminal.integrated.wordSeparators":"一个字符串，其中包含双击选择 Word 功能而被视为单词分隔符的所有字符。","terminal.integrated.experimentalUseTitleEvent":"一项实验性设置，它将对下拉标题使用终端标题事件。此设置仅应用于新终端。","terminal.integrated.enableFileLinks":"是否在终端中启用文件链接。尤其是在处理网络驱动器时，链接会变慢，因为每个文件链接都会根据文件系统进行验证。更改此项将仅在新的终端中生效。","terminal.integrated.unicodeVersion.six":"unicode 的版本 6，该版本较旧，在较旧的系统中效果更好。","terminal.integrated.unicodeVersion.eleven":"unicode 的版本 11，版本可在使用新式版本 unicode 的新式系统上提供更好的支持。","terminal.integrated.unicodeVersion":"控制在计算终端中字符的宽度时要使用的 unicode 版本。如果你遇到表情符号或其他宽字符，而这些宽字符占用的空格或退格量不正确或删除的空间太多或太少，则你可能需要尝试调整此设置。","terminal.integrated.experimentalLinkProvider":"一项实验性设置，旨在通过改进检测链接的时间以及使用编辑器启用共享链接检测，来改进终端中的链接检测。此设置当前只支持 Web 链接。","terminal.integrated.localEchoLatencyThreshold":"试验性: 网络延迟的长度(以毫秒为单位)，本地编辑内容会在终端上回显,而不等待服务器确认。如果为 \\"0\\"，则本地回显将始终处于打开状态，如果为 \\"-1\\" 将被禁用。","terminal.integrated.localEchoExcludePrograms":"实验: 在终端标题中找到这些程序名称中的任意一个时，将禁用本地回显。","terminal.integrated.localEchoStyle":"试验性: 本地回显文本的终端样式，可以是字体样式或 RGB 颜色。","terminal.integrated.serverSpawn":"实验: 从远程代理进程(而不是远程扩展主机)生成远程终端","terminal.integrated.enablePersistentSessions":"实验: 跨窗口重新加载工作区的持久性终端会话。当前仅在 VS Code 远程工作区中受支持。","terminal.integrated.shell.linux":"终端在 Linux 上使用的 shell 的路径(默认: {0})。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。","terminal.integrated.shell.linux.noDefault":"终端在 Linux 上使用的 shell 的路径。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。","terminal.integrated.shell.osx":"终端在 macOS 上使用的 shell 的路径(默认: {0})。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。","terminal.integrated.shell.osx.noDefault":"终端在 macOS 上使用的 shell 的路径。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。","terminal.integrated.shell.windows":"终端在 Windows 上使用的 shell 的路径(默认: {0})。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。","terminal.integrated.shell.windows.noDefault":"终端在 Windows 上使用的 shell 的路径。[详细了解如何配置 shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_configuration)。"},"vs/workbench/contrib/terminal/common/terminal":{"terminalCategory":"终端","vscode.extension.contributes.terminal":"参与终端功能。","vscode.extension.contributes.terminal.types":"定义用户可创建的其他终端类型。","vscode.extension.contributes.terminal.types.command":"在用户创建此类型的终端时执行的命令。","vscode.extension.contributes.terminal.types.title":"此类型终端的标题。"},"vs/workbench/contrib/terminal/browser/terminal.contribution":{"tasksQuickAccessPlaceholder":"键入要打开的终端的名称。","tasksQuickAccessHelp":"显示所有已打开的终端","terminal":"终端"},"vs/workbench/contrib/terminal/browser/terminalView":{"terminal.useMonospace":"使用 \\"monospace\\"","terminal.monospaceOnly":"终端仅支持等宽字体。如果这是新安装的字体，请确保重新启动 VS Code。"},"vs/workbench/contrib/terminal/browser/remoteTerminalService":{"terminal.integrated.starting":"正在启动..."},"vs/workbench/contrib/terminal/node/terminalProcess":{"launchFail.cwdNotDirectory":"启动目录(cwd)“{0}”不是一个目录","launchFail.cwdDoesNotExist":"启动目录(cwd)“{0}”不存在","launchFail.executableIsNotFileOrSymlink":"shell 可执行文件的路径“{0}”不是符号链接的文件","launchFail.executableDoesNotExist":"shell 可执行文件“{0}”的路径不存在"},"vs/workbench/contrib/terminal/electron-browser/terminalRemote":{"workbench.action.terminal.newLocal":"新建集成终端(本地)"},"vs/workbench/contrib/terminal/common/terminalColorRegistry":{"terminal.background":"终端的背景颜色，允许终端的颜色与面板不同。","terminal.foreground":"终端的前景颜色。","terminalCursor.foreground":"终端光标的前景色。","terminalCursor.background":"终端光标的背景色。允许自定义被 block 光标遮住的字符的颜色。","terminal.selectionBackground":"终端选中内容的背景颜色。","terminal.border":"分隔终端中拆分窗格的边框的颜色。默认值为 panel.border 的颜色","terminal.ansiColor":"终端中的 ANSI 颜色“{0}”。"},"vs/workbench/contrib/terminal/browser/terminalActions":{"workbench.action.terminal.newWorkspacePlaceholder":"选择当前工作目录新建终端","workbench.action.terminal.toggleTerminal":"切换集成终端","workbench.action.terminal.kill":"终止活动终端实例","workbench.action.terminal.kill.short":"终止终端","workbench.action.terminal.copySelection":"复制所选内容","workbench.action.terminal.copySelection.short":"复制","workbench.action.terminal.selectAll":"选择全部","workbench.action.terminal.new":"新建集成终端","workbench.action.terminal.new.short":"新建终端","workbench.action.terminal.split":"拆分终端","workbench.action.terminal.split.short":"拆分","workbench.action.terminal.splitInActiveWorkspace":"拆分终端 (活动工作区)","workbench.action.terminal.paste":"粘贴到活动终端中","workbench.action.terminal.paste.short":"粘贴","workbench.action.terminal.selectDefaultShell":"选择默认 Shell","workbench.action.terminal.openSettings":"配置终端设置","workbench.action.terminal.switchTerminal":"切换终端","terminals":"打开终端。","terminalConnectingLabel":"正在启动...","workbench.action.terminal.clear":"清除","terminalLaunchHelp":"打开帮助","workbench.action.terminal.newInActiveWorkspace":"新建集成终端 (活动工作区)","workbench.action.terminal.focusPreviousPane":"聚焦到上一窗格","workbench.action.terminal.focusNextPane":"聚焦到下一窗格","workbench.action.terminal.resizePaneLeft":"向左调整窗格大小","workbench.action.terminal.resizePaneRight":"向右调整窗格大小","workbench.action.terminal.resizePaneUp":"向上调整窗格大小","workbench.action.terminal.resizePaneDown":"向下调整窗格大小","workbench.action.terminal.focus":"聚焦到终端","workbench.action.terminal.focusNext":"聚焦到下一终端","workbench.action.terminal.focusPrevious":"聚焦到上一终端","workbench.action.terminal.runSelectedText":"在活动终端运行所选文本","workbench.action.terminal.runActiveFile":"在活动终端中运行活动文件","workbench.action.terminal.runActiveFile.noFile":"只有磁盘上的文件可在终端上运行","workbench.action.terminal.scrollDown":"向下滚动(行)","workbench.action.terminal.scrollDownPage":"向下滚动(页)","workbench.action.terminal.scrollToBottom":"滚动到底部","workbench.action.terminal.scrollUp":"向上滚动(行)","workbench.action.terminal.scrollUpPage":"向上滚动(页)","workbench.action.terminal.scrollToTop":"滚动到顶部","workbench.action.terminal.navigationModeExit":"退出导航模式","workbench.action.terminal.navigationModeFocusPrevious":"聚焦上一行(导航模式)","workbench.action.terminal.navigationModeFocusNext":"聚焦下一行(导航模式)","workbench.action.terminal.clearSelection":"取消选择","workbench.action.terminal.manageWorkspaceShellPermissions":"管理工作区 Shell 权限","workbench.action.terminal.rename":"重命名","workbench.action.terminal.rename.prompt":"输入终端名称","workbench.action.terminal.focusFind":"聚焦查找","workbench.action.terminal.hideFind":"隐藏查找","workbench.action.terminal.attachToRemote":"附加到会话","quickAccessTerminal":"切换活动终端","workbench.action.terminal.scrollToPreviousCommand":"滚动到上一条命令","workbench.action.terminal.scrollToNextCommand":"滚动到下一条命令","workbench.action.terminal.selectToPreviousCommand":"选择上一条命令所有内容","workbench.action.terminal.selectToNextCommand":"选择下一条命令所有内容","workbench.action.terminal.selectToPreviousLine":"选择上一行的所有内容","workbench.action.terminal.selectToNextLine":"选择下一行的所有内容","workbench.action.terminal.toggleEscapeSequenceLogging":"切换是否记录转义序列日志","workbench.action.terminal.sendSequence":"发送自定义序列到终端","workbench.action.terminal.newWithCwd":"在自定义工作目录中创建新的集成终端","workbench.action.terminal.newWithCwd.cwd":"启动终端的目录","workbench.action.terminal.renameWithArg":"重命名当前活动终端","workbench.action.terminal.renameWithArg.name":"终端的新名称","workbench.action.terminal.renameWithArg.noName":"未提供名称参数","workbench.action.terminal.toggleFindRegex":"切换使用正则表达式进行查找","workbench.action.terminal.toggleFindWholeWord":"切换使用全字匹配进行查找","workbench.action.terminal.toggleFindCaseSensitive":"切换使用区分大小写进行查找","workbench.action.terminal.findNext":"查找下一个","workbench.action.terminal.findPrevious":"查找上一个","workbench.action.terminal.searchWorkspace":"搜索工作区","workbench.action.terminal.relaunch":"重新启动活动终端","workbench.action.terminal.showEnvironmentInformation":"显示环境信息"},"vs/workbench/contrib/terminal/common/terminalMenu":{"miToggleIntegratedTerminal":"终端(&&T)","miNewTerminal":"新终端(&&N)","miSplitTerminal":"拆分终端(&&S)","miRunActiveFile":"运行活动文件(&&A)","miRunSelectedText":"运行所选文本(&&S)"},"vs/workbench/contrib/terminal/browser/terminalService":{"workbench.action.terminal.allowWorkspaceShell":"允许配置工作区 Shell","workbench.action.terminal.disallowWorkspaceShell":"禁止配置工作区 Shell","terminalService.terminalCloseConfirmationSingular":"存在一个活动的终端会话，是否要终止此会话?","terminalService.terminalCloseConfirmationPlural":"存在 {0} 个活动的终端会话，是否要终止这些会话?","terminal.integrated.chooseWindowsShell":"选择首选的终端 shell，你可稍后在设置中进行更改"},"vs/workbench/contrib/terminal/browser/terminalQuickAccess":{"renameTerminal":"重命名终端","killTerminal":"终止终端实例","workbench.action.terminal.newplus":"新建集成终端"},"vs/workbench/contrib/terminal/browser/terminalIcons":{"terminalViewIcon":"查看终端视图的图标。","renameTerminalIcon":"用于在终端快速菜单中进行重命名的图标。","killTerminalIcon":"用于终止终端实例的图标。","newTerminalIcon":"用于创建新的终端实例的图标。"},"vs/workbench/contrib/terminal/browser/terminalConfigHelper":{"terminal.integrated.allowWorkspaceShell":"是否允许此工作区修改您的终端？{0}","allow":"Allow","disallow":"Disallow","useWslExtension.title":"建议使用“{0}”扩展在 WSL 中打开终端。","install":"安装"},"vs/workbench/contrib/terminal/browser/terminalInstance":{"terminal.integrated.a11yPromptLabel":"终端输入","terminal.integrated.a11yTooMuchOutput":"输出太多，无法朗读。请手动转到行内进行阅读","terminalTextBoxAriaLabelNumberAndTitle":"终端 {0}，{1}","terminalTextBoxAriaLabel":"终端 {0}","configure terminal settings":"默认情况下，某些键绑定会被调度到工作台。","configureTerminalSettings":"配置终端设置","yes":"是","no":"否","dontShowAgain":"不再显示","terminal.slowRendering":"集成终端的标准渲染器似乎在您的计算机上运行得很慢。使用基于 DOM 的渲染器也许能提高性能，是否切换? [阅读有关终端设置的更多信息](https://code.visualstudio.com/docs/editor/integrated-terminal#_changing-how-the-terminal-is-rendered)。","terminal.integrated.copySelection.noSelection":"没有在终端中选择要复制的内容","launchFailed.exitCodeAndCommandLine":"终端进程“{0}”启动失败(退出代码: {1})。","launchFailed.exitCodeOnly":"终端进程启动失败(退出代码: {0})。","terminated.exitCodeAndCommandLine":"终端进程“{0}”已终止，退出代码: {1}。","terminated.exitCodeOnly":"终端进程已终止，退出代码: {0}。","launchFailed.errorMessage":"终端进程启动失败: {0}。","terminalStaleTextBoxAriaLabel":"终端 {0} 环境已过时，请运行“显示环境信息”命令以获取详细信息"},"vs/workbench/contrib/terminal/browser/links/terminalLinkManager":{"terminalLinkHandler.followLinkAlt.mac":"Option + 单击","terminalLinkHandler.followLinkAlt":"Alt + 单击","terminalLinkHandler.followLinkCmd":"Cmd + 单击","terminalLinkHandler.followLinkCtrl":"Ctrl + 单击","followLink":"跟随链接"},"vs/workbench/contrib/terminal/browser/links/terminalWordLinkProvider":{"searchWorkspace":"搜索工作区"},"vs/workbench/contrib/terminal/browser/terminalProcessExtHostProxy":{"terminal.integrated.starting":"正在启动..."},"vs/workbench/contrib/terminal/browser/environmentVariableInfo":{"extensionEnvironmentContributionChanges":"扩展要对终端环境进行以下更改:","extensionEnvironmentContributionRemoval":"扩展要从终端环境中删除以下现有更改:","relaunchTerminalLabel":"重新启动终端","extensionEnvironmentContributionInfo":"扩展已对此终端的环境进行更改"},"vs/workbench/contrib/terminal/browser/links/terminalLink":{"openFile":"在编辑器中打开文件","focusFolder":"聚焦资源管理器中的文件夹","openFolder":"在新窗口中打开文件夹"},"vs/workbench/contrib/themes/browser/themes.contribution":{"selectTheme.label":"颜色主题","themes.category.light":"浅色主题","themes.category.dark":"深色主题","themes.category.hc":"高对比度主题","installColorThemes":"安装其他颜色主题...","themes.selectTheme":"选择颜色主题 (按上下箭头键预览)","selectIconTheme.label":"文件图标主题","noIconThemeLabel":"无","noIconThemeDesc":"禁用文件图标","installIconThemes":"安装其他文件图标主题...","themes.selectIconTheme":"选择文件图标主题","selectProductIconTheme.label":"产品图标主题","defaultProductIconThemeLabel":"默认值","themes.selectProductIconTheme":"选择产品图标主题","generateColorTheme.label":"使用当前设置生成颜色主题","preferences":"首选项","miSelectColorTheme":"颜色主题(&&C)","miSelectIconTheme":"文件图标主题(&&I)","themes.selectIconTheme.label":"文件图标主题"},"vs/workbench/contrib/timeline/browser/timeline.contribution":{"timelineViewIcon":"查看时间线视图的图标。","timelineOpenIcon":"“打开时间线”操作的图标。","timelineConfigurationTitle":"时间线","timeline.excludeSources":"实验性: 应从时间线视图中排除的时间线源数组","timeline.pageSize":"默认情况下以及在加载更多项目时在时间线视图中显示的项目数。如果设置为 \\"null\\" (默认值)，则将根据时间线视图的可见区域自动选择一个页面大小","timeline.pageOnScroll":"实验性。控制在滚动到列表结尾时，时间线视图是否将加载下一页的项目","files.openTimeline":"打开时间线"},"vs/workbench/contrib/timeline/browser/timelinePane":{"timeline.loadingMore":"正在加载…","timeline.loadMore":"加载更多","timeline":"时间线","timeline.editorCannotProvideTimeline":"活动编辑器无法提供时间线信息。","timeline.noTimelineInfo":"未提供时间表信息。","timeline.aria.item":"{0}: {1}","timeline.loading":"正在加载 {0} 的时间线 ...","timelineRefresh":"“刷新时间线”操作的图标。","timelinePin":"“固定时间线”操作的图标。","timelineUnpin":"“取消固定时间线”操作的图标。","refresh":"刷新","timeline.toggleFollowActiveEditorCommand.follow":"固定当前时间线","timeline.toggleFollowActiveEditorCommand.unfollow":"取消固定当前时间线","timeline.filterSource":"包括: {0}"},"vs/workbench/contrib/update/browser/update.contribution":{"miReleaseNotes":"发行说明(&&R)"},"vs/workbench/contrib/update/browser/update":{"releaseNotes":"发行说明","update.noReleaseNotesOnline":"此版本的 {0} 没有联机发行说明","showReleaseNotes":"显示发行说明","read the release notes":"欢迎使用 {0} v{1}! 是否要阅读发布说明?","licenseChanged":"我们对许可条款进行了修改，请点击[此处]({0})进行查看。","updateIsReady":"有新的 {0} 的更新可用。","checkingForUpdates":"正在检查更新...","update service":"更新服务","noUpdatesAvailable":"当前没有可用的更新。","ok":"确定","thereIsUpdateAvailable":"存在可用更新。","download update":"下载更新","later":"稍后","updateAvailable":"现有更新可用: {0} {1}","installUpdate":"安装更新","updateInstalling":"正在后台安装 {0} {1}，我们将在完成后通知您。 ","updateNow":"立即更新","updateAvailableAfterRestart":"重新启动 {0} 即可应用最新更新。","checkForUpdates":"检查更新...","download update_1":"下载更新(1) ","DownloadingUpdate":"正在下载更新...","installUpdate...":"安装更新... (1)","installingUpdate":"正在安装更新...","good luck":"\'Restart to Update\' is not working properly on macOS Big Sur. Click \'Quit to Update\' to quit {0} and update it. Then, relaunch it from Finder.","quit":"Quit to Update","learn more":"Learn More","cancel":"Cancel","restartToUpdate":"重新启动以更新 (1)","relaunchMessage":"需要重载，然后对版本的更改才会生效","relaunchDetailInsiders":"按“重载”按钮切换到 VSCode 的夜晚预生产版本。","relaunchDetailStable":"按“重载”按钮切换到每月发布的 VSCode 稳定版本。","reload":"重载(&&R)","switchToInsiders":"切换到内部预览计划版本…","switchToStable":"切换到稳定版本…"},"vs/workbench/contrib/update/browser/releaseNotesEditor":{"releaseNotesInputName":"发行说明: {0}","unassigned":"未分配"},"vs/workbench/contrib/url/browser/url.contribution":{"openUrl":"打开 URL","urlToOpen":"要打开的 URL"},"vs/workbench/contrib/url/browser/trustedDomains":{"trustedDomain.manageTrustedDomain":"管理受信任的域","trustedDomain.trustDomain":"信任 {0}","trustedDomain.trustAllPorts":"信任所有端口上的 {0}","trustedDomain.trustSubDomain":"信任 {0} 及其所有子域","trustedDomain.trustAllDomains":"信任所有域(禁用链接保护)","trustedDomain.manageTrustedDomains":"管理受信任的域","configuringURL":"为 {0} 配置信任"},"vs/workbench/contrib/url/browser/trustedDomainsValidator":{"openExternalLinkAt":"是否要 {0} 打开外部网站?","open":"打开","copy":"复制","cancel":"取消","configureTrustedDomains":"配置受信任的域"},"vs/workbench/contrib/userDataSync/electron-browser/userDataSync.contribution":{"operationId":"操作 ID: {0}","too many requests":"当前设备正在进行的请求过多，因此已禁用设置同步。请提供同步日志以报告问题。","settings sync":"设置同步。操作 ID: {0}","show sync logs":"显示日志","report issue":"报告问题","Open Backup folder":"打开本地备份文件夹","no backups":"本地备份文件夹不存在"},"vs/workbench/contrib/userDataSync/browser/userDataSync.contribution":{"operationId":"操作 ID: {0}","too many requests":"由于此设备发出的请求太多，因此已在该设备上关闭设置同步。"},"vs/workbench/contrib/userDataSync/browser/userDataSync":{"turn on sync with category":"{0}: 打开…","stop sync":"{0}: 关闭","configure sync":"{0}: 配置…","showConflicts":"{0}: 显示设置冲突","showKeybindingsConflicts":"{0}: 显示键绑定冲突","showSnippetsConflicts":"{0}: 显示用户代码片段冲突","sync now":"{0}: 立即同步","syncing":"正在同步","synced with time":"同步时间: {0}","sync settings":"{0}: 显示设置","show synced data":"{0}: 显示已同步的数据","conflicts detected":"由于 {0} 中的冲突，无法同步。请解决它们以继续。","accept remote":"接受远程","accept local":"接受本地","show conflicts":"显示冲突","accept failed":"接受更改时出错。有关更多详细信息，请查看[日志]({0})。","session expired":"当前会话已过期，因此已关闭设置同步。若要启用同步，请重新登录。","turn on sync":"打开设置同步…","turned off":"已从另一设备禁用设置同步。若要启用同步，请重新登录。","too large":"已禁止同步 {0}，因为要同步的 {1} 文件的大小大于 {2}。请打开文件减小大小，然后再启用同步","error upgrade required":"当前版本({0}, {1})与同步服务不兼容，因此已禁用设置同步。请先进行更新，然后再打开同步。","operationId":"操作 ID: {0}","error reset required":"云中的数据早于客户端的数据，因此已禁用设置同步。请先清除云中的数据，然后再启用同步。","reset":"清除云中的数据…","show synced data action":"显示已同步的数据","switched to insiders":"“设置同步”现使用单独的服务；有关详细信息，请参阅[发行说明](https://code.visualstudio.com/updates/v1_48#_settings-sync)。","open file":"打开 {0} 文件","errorInvalidConfiguration":"无法同步 {0}，因为文件中的内容无效。请打开文件并进行更正。","has conflicts":"{0}: 检测到冲突","turning on syncing":"正在打开设置同步…","sign in to sync":"登录以同步设置","no authentication providers":"没有可用的身份验证提供程序。","too large while starting sync":"要同步的 {0} 文件的大小大于 {1}，因此无法启用设置同步。请打开文件并减小大小，然后打开同步","error upgrade required while starting sync":"当前版本({0}, {1})与同步服务不兼容，因此无法启用设置同步。请先进行更新，然后再打开同步。","error reset required while starting sync":"云中的数据早于客户端的数据，因此无法启用设置同步。请先清除云中的数据，然后再启用同步。","auth failed":"启用设置同步时出错: 身份验证失败。","turn on failed":"启用设置同步时出错。请查看[日志]({0})以了解详细信息。","sync preview message":"同步设置是一项预览功能，请在启用它之前阅读文档。","turn on":"打开","open doc":"打开文档","cancel":"取消","sign in and turn on":"登录并打开","configure and turn on sync detail":"请进行登录，跨设备同步你的数据。","per platform":"为每个平台","configure sync placeholder":"选择要同步的内容","turn off sync confirmation":"是否要关闭同步?","turn off sync detail":"将不再同步你的设置、键绑定、扩展、代码片段和 UI 状态。","turn off":"关闭(&&T)","turn off sync everywhere":"关闭所有设备上的同步设置，并从云中清除数据。","leftResourceName":"{0} (远程)","merges":"{0} (合并)","sideBySideLabels":"{0} ↔ {1}","sideBySideDescription":"设置同步","switchSyncService.title":"{0}: 选择服务","switchSyncService.description":"在与多个环境同步时，请确保你使用的设置同步服务相同","default":"默认值","insiders":"预览体验人员","stable":"稳定","global activity turn on sync":"打开设置同步…","turnin on sync":"正在打开设置同步…","sign in global":"登录以同步设置","sign in accounts":"登录以同步设置(1)","resolveConflicts_global":"{0}: 显示设置冲突(1)","resolveKeybindingsConflicts_global":"{0}: 显示按键绑定冲突(1)","resolveSnippetsConflicts_global":"{0}: 显示用户代码片段冲突({1})","sync is on":"设置同步已打开","workbench.action.showSyncRemoteBackup":"显示已同步的数据","turn off failed":"禁用设置同步时出错。有关更多详细信息，请查看[日志]({0})。","show sync log title":"{0}: 显示日志","accept merges":"接受合并","accept remote button":"接受远程(&&R)","accept merges button":"接受合并(&&M)","Sync accept remote":"{0}: {1}","Sync accept merges":"{0}: {1}","confirm replace and overwrite local":"是否接受远程 {0} 并替换本地 {1}?","confirm replace and overwrite remote":"是否接受合并，并替换远程 {0}?","update conflicts":"无法解决冲突，因为存在新的可用本地版本。请重新尝试。"},"vs/workbench/contrib/userDataSync/browser/userDataSyncViews":{"showLog":"显示日志","configure":"配置...","workbench.actions.syncData.reset":"清除云中的数据…","merges":"合并","synced machines":"已同步的计算机","workbench.actions.sync.editMachineName":"编辑名称","workbench.actions.sync.turnOffSyncOnMachine":"关闭设置同步","remote sync activity title":"同步活动(远程)","local sync activity title":"同步活动(本地)","workbench.actions.sync.resolveResourceRef":"显示原始 JSON 同步数据","workbench.actions.sync.replaceCurrent":"还原","confirm replace":"是否要用选定的内容替换当前的 {0}?","workbench.actions.sync.compareWithLocal":"打开更改","leftResourceName":"{0} (远程)","rightResourceName":"{0} (本地)","sideBySideLabels":"{0} ↔ {1}","sideBySideDescription":"设置同步","reset":"重置同步的数据","current":"当前","no machines":"无计算机","not found":"找不到 ID 为 {0} 的计算机","turn off sync on machine":"确定要对 {0} 关闭同步吗?","turn off":"关闭(&&T)","placeholder":"输入计算机名称","valid message":"计算机名称必须是唯一的且不为空"},"vs/workbench/contrib/userDataSync/browser/userDataSyncMergesView":{"explanation":"若要启用同步，请仔细查看每个条目和合并项。","turn on sync":"打开设置同步","cancel":"取消","workbench.actions.sync.acceptRemote":"接受远程","workbench.actions.sync.acceptLocal":"接受本地","workbench.actions.sync.merge":"合并","workbench.actions.sync.discard":"放弃","workbench.actions.sync.showChanges":"打开更改","conflicts detected":"检测到冲突","resolve":"因冲突而无法同步。请解决它们以继续。","turning on":"正在打开…","preview":"{0} (预览)","leftResourceName":"{0} (远程)","merges":"{0} (合并)","rightResourceName":"{0} (本地)","sideBySideLabels":"{0} ↔ {1}","sideBySideDescription":"设置同步","label":"UserDataSyncResources","conflict":"检测到冲突","accepted":"已接受","accept remote":"接受远程","accept local":"接受本地","accept merges":"接受合并"},"vs/workbench/contrib/views/browser/treeView":{"no-dataprovider":"没有可提供视图数据的已注册数据提供程序。","refresh":"刷新","collapseAll":"全部折叠","command-error":"运行命令 {1} 错误: {0}。这可能是由提交 {1} 的扩展引起的。"},"vs/workbench/contrib/watermark/browser/watermark":{"watermark.showCommands":"显示所有命令","watermark.quickAccess":"转到文件","watermark.openFile":"打开文件","watermark.openFolder":"打开文件夹","watermark.openFileFolder":"打开文件或文件夹","watermark.openRecent":"打开最近的文件","watermark.newUntitledFile":"新的无标题文件","watermark.toggleTerminal":"切换终端","watermark.findInFiles":"在文件中查找","watermark.startDebugging":"开始调试","tips.enabled":"启用后，当没有打开编辑器时将显示水印提示。"},"vs/workbench/contrib/webview/electron-browser/webviewCommands":{"openToolsLabel":"打开 Webview 开发人员工具"},"vs/workbench/contrib/webview/browser/baseWebviewElement":{"fatalErrorMessage":"加载 Web 视图时出错: {0}"},"vs/workbench/contrib/webviewPanel/browser/webviewPanel.contribution":{"webview.editor.label":"Web 视图编辑器"},"vs/workbench/contrib/webviewPanel/browser/webviewCommands":{"editor.action.webvieweditor.showFind":"显示查找","editor.action.webvieweditor.hideFind":"停止查找","editor.action.webvieweditor.findNext":"查找下一个","editor.action.webvieweditor.findPrevious":"查找上一个","refreshWebviewLabel":"重新加载 Web 视图"},"vs/workbench/contrib/welcome/overlay/browser/welcomeOverlay":{"welcomeOverlay.explorer":"文件资源管理器","welcomeOverlay.search":"跨文件搜索","welcomeOverlay.git":"源代码管理","welcomeOverlay.debug":"启动和调试","welcomeOverlay.extensions":"管理扩展","welcomeOverlay.problems":"查看错误和警告","welcomeOverlay.terminal":"切换集成终端","welcomeOverlay.commandPalette":"查找并运行所有命令","welcomeOverlay.notifications":"显示通知","welcomeOverlay":"用户界面概览","hideWelcomeOverlay":"隐藏界面概述"},"vs/workbench/contrib/welcome/page/browser/welcomePage.contribution":{"workbench.startupEditor.none":"在启动时不打开编辑器。","workbench.startupEditor.welcomePage":"打开欢迎页面 (默认)。","workbench.startupEditor.readme":"打开包含一个自述文件的文件夹时, 打开自述文件, 否则回退到 \\"欢迎页面\\"。","workbench.startupEditor.newUntitledFile":"打开新的无标题文件 (仅在打开空工作区时适用)。","workbench.startupEditor.welcomePageInEmptyWorkbench":"在打开空工作区时打开欢迎页面。","workbench.startupEditor.gettingStarted":"打开入门页面(实验性)。","workbench.startupEditor":"在没有从上一会话中恢复出信息的情况下，控制启动时显示的编辑器。","miWelcome":"欢迎使用(&&W)"},"vs/workbench/contrib/welcome/gettingStarted/browser/gettingStarted.contribution":{"Getting Started":"入门","help":"帮助","gettingStartedDescription":"启用实验性入门页面 - 可通过帮助菜单访问它。"},"vs/workbench/contrib/welcome/walkThrough/browser/walkThrough.contribution":{"walkThrough.editor.label":"交互式演练场","miInteractivePlayground":"交互式演练场(&&N)"},"vs/workbench/contrib/welcome/page/browser/welcomePage":{"welcomePage":"欢迎使用","welcomePage.javaScript":"JavaScript","welcomePage.python":"Python","welcomePage.java":"Java","welcomePage.php":"PHP","welcomePage.azure":"Azure","welcomePage.showAzureExtensions":"显示 Azure 扩展","welcomePage.docker":"Docker","welcomePage.vim":"Vim","welcomePage.sublime":"Sublime","welcomePage.atom":"Atom","welcomePage.extensionPackAlreadyInstalled":"已安装对 {0} 的支持。","welcomePage.willReloadAfterInstallingExtensionPack":"安装对 {0} 的额外支持后，将重载窗口。","welcomePage.installingExtensionPack":"正在安装对 {0} 的额外支持...","welcomePage.extensionPackNotFound":"找不到对 {0} (ID: {1}) 的支持。","welcomePage.keymapAlreadyInstalled":"已安装 {0} 键盘快捷方式。","welcomePage.willReloadAfterInstallingKeymap":"安装 {0} 键盘快捷方式后，将重载窗口。","welcomePage.installingKeymap":"正在安装 {0} 键盘快捷方式...","welcomePage.keymapNotFound":"找不到 ID 为 {1} 的 {0} 键盘快捷方式。","welcome.title":"欢迎使用","welcomePage.openFolderWithPath":"打开路径为 {1} 的文件夹 {0}","welcomePage.extensionListSeparator":", ","welcomePage.installKeymap":"安装 {0} 按键映射","welcomePage.installExtensionPack":"安装对 {0} 的额外支持","welcomePage.installedKeymap":"已安装 {0} 按键映射","welcomePage.installedExtensionPack":"已安装 {0} 支持","ok":"确定","details":"细节"},"vs/workbench/contrib/welcome/gettingStarted/browser/gettingStarted":{"editorGettingStarted.title":"入门","next":"下一个"},"vs/workbench/contrib/welcome/walkThrough/browser/walkThroughPart":{"walkThrough.unboundCommand":"未绑定","walkThrough.gitNotFound":"你的系统上似乎未安装 Git。","walkThrough.embeddedEditorBackground":"嵌入于交互式演练场中的编辑器的背景颜色。"},"vs/workbench/contrib/welcome/walkThrough/browser/editor/editorWalkThrough":{"editorWalkThrough.title":"交互式演练场","editorWalkThrough":"交互式演练场"},"vs/workbench/contrib/welcome/common/viewsWelcomeContribution":{"ViewsWelcomeExtensionPoint.proposedAPI":"“{0}”中的 viewsWelcome 贡献要求启用 \\"enableProposedApi\\"。"},"vs/workbench/contrib/welcome/common/viewsWelcomeExtensionPoint":{"contributes.viewsWelcome":"提供视图欢迎内容。只要没有有意义的内容可显示，就会在基于树的视图中呈现欢迎内容，例如未打开文件夹时的文件资源管理器。此类内容作为产品内文档非常有用，可促使用户在某些功能可用之前使用它们。文件资源管理器欢迎视图中的“克隆存储库”按钮就是一个很好的示例。","contributes.viewsWelcome.view":"为特定视图提供的欢迎页面内容。","contributes.viewsWelcome.view.view":"此欢迎内容的目标视图标识符。仅支持基于树的视图。","contributes.viewsWelcome.view.contents":"要显示的欢迎内容。内容的格式是 Markdown 的子集，仅支持链接。","contributes.viewsWelcome.view.when":"显示欢迎内容的条件。","contributes.viewsWelcome.view.group":"此欢迎内容所属的组。","contributes.viewsWelcome.view.enablement":"启用欢迎内容的条件。"},"vs/workbench/contrib/welcome/telemetryOptOut/browser/telemetryOptOut":{"telemetryOptOut.optOutNotice":"帮助改善 VS Code，允许 Microsoft 收集使用数据。请阅读我们的[隐私声明]({0})并了解如何[选择退出]({1})。","telemetryOptOut.optInNotice":"帮助改善 VS Code，允许 Microsoft 收集使用数据。请阅读我们的[隐私声明]({0})并了解如何[选择加入]({1})。","telemetryOptOut.readMore":"了解详细信息","telemetryOptOut.optOutOption":"请允许 Microsoft 收集使用数据来帮助我们改进 Visual Studio Code。有关详细信息，请阅读我们的[隐私声明]({0})。","telemetryOptOut.OptIn":"好，乐意提供帮助","telemetryOptOut.OptOut":"不，谢谢"},"vs/workbench/contrib/welcome/page/browser/welcomePageColors":{"welcomePage.buttonBackground":"欢迎页按钮的背景色。","welcomePage.buttonHoverBackground":"欢迎页按钮被悬停时的背景色。","welcomePage.background":"欢迎页面的背景色。"},"vs/workbench/contrib/welcome/page/browser/vs_code_welcome_page":{"welcomePage.vscode":"Visual Studio Code","welcomePage.editingEvolved":"编辑进化","welcomePage.start":"启动","welcomePage.newFile":"新建文件","welcomePage.openFolder":"打开文件夹...","welcomePage.gitClone":"克隆存储库…","welcomePage.recent":"最近","welcomePage.moreRecent":"更多...","welcomePage.noRecentFolders":"无最近使用文件夹","welcomePage.help":"帮助","welcomePage.keybindingsCheatsheet":"快捷键速查表(可打印)","welcomePage.introductoryVideos":"入门视频","welcomePage.tipsAndTricks":"提示与技巧","welcomePage.productDocumentation":"产品文档","welcomePage.gitHubRepository":"GitHub 存储库","welcomePage.stackOverflow":"Stack Overflow","welcomePage.newsletterSignup":"接收我们的新闻稿","welcomePage.showOnStartup":"启动时显示欢迎页","welcomePage.customize":"自定义","welcomePage.installExtensionPacks":"工具和语言","welcomePage.installExtensionPacksDescription":"安装对 {0} 和 {1} 的支持","welcomePage.showLanguageExtensions":"显示更多语言扩展","welcomePage.moreExtensions":"更多","welcomePage.installKeymapDescription":"设置和按键绑定","welcomePage.installKeymapExtension":"安装 {0} 和 {1} 的设置和快捷键","welcomePage.showKeymapExtensions":"显示其他按键映射扩展","welcomePage.others":"其他","welcomePage.colorTheme":"颜色主题","welcomePage.colorThemeDescription":"使编辑器和代码呈现你喜欢的外观","welcomePage.learn":"学习","welcomePage.showCommands":"查找并运行所有命令","welcomePage.showCommandsDescription":"使用命令面板快速访问和搜索命令 ({0})","welcomePage.interfaceOverview":"界面概览","welcomePage.interfaceOverviewDescription":"查看突出显示主要 UI 组件的叠加图","welcomePage.interactivePlayground":"交互式演练场","welcomePage.interactivePlaygroundDescription":"在简短的演练中尝试基本的编辑器功能"},"vs/workbench/contrib/welcome/gettingStarted/browser/vs_code_editor_getting_started":{"gettingStarted.vscode":"Visual Studio Code","gettingStarted.editingRedefined":"代码编辑。已重新定义"},"vs/workbench/contrib/workspaces/browser/workspaces.contribution":{"workspaceFound":"此文件夹包含工作区文件“{0}”，是否打开? [了解更多]({1})有关工作区文件的详细信息。","openWorkspace":"打开工作区","workspacesFound":"此文件夹包含多个工作区文件，是否打开? [了解更多]({0})有关工作区文件的详细信息。","selectWorkspace":"选择工作区","selectToOpen":"选择要打开的工作区"},"vs/workbench/services/authentication/browser/authenticationService":{"authentication.id":"身份验证提供程序的 ID。","authentication.label":"身份验证提供程序的易读名称。","authenticationExtensionPoint":"添加身份验证","loading":"正在加载…","authentication.missingId":"提供身份验证必须指定一个 ID。","authentication.missingLabel":"提供身份验证必须指定一个标签。","authentication.idConflict":"已注册此身份验证 ID“{0}”","noAccounts":"你未登录任何帐户","sign in":"已请求登录","signInRequest":"登录以使用 {0} (1)"},"vs/workbench/services/bulkEdit/browser/bulkEditService":{"summary.0":"未做编辑","summary.nm":"在 {1} 个文件中进行了 {0} 次编辑","summary.n0":"在 1 个文件中进行了 {0} 次编辑","workspaceEdit":"工作区编辑","nothing":"未做编辑"},"vs/workbench/services/configuration/common/jsonEditingService":{"errorInvalidFile":"无法写入文件。请打开文件以更正错误或警告，然后重试。","errorFileDirty":"无法写入文件因为其已变更。请先保存此文件，然后重试。"},"vs/workbench/services/configuration/common/configurationEditingService":{"openTasksConfiguration":"打开任务配置","openLaunchConfiguration":"打开启动配置","open":"打开设置","saveAndRetry":"保存并重试","errorUnknownKey":"没有注册配置 {1}，因此无法写入 {0}。","errorInvalidWorkspaceConfigurationApplication":"无法将 {0} 写入“工作区设置”。此设置只能写于“用户设置”。","errorInvalidWorkspaceConfigurationMachine":"无法将 {0} 写入“工作区设置”。此设置只能写于“用户设置”。","errorInvalidFolderConfiguration":"{0} 不支持文件夹资源域，因此无法写入\\"文件夹设置\\"。","errorInvalidUserTarget":"{0} 不支持全局域，因此无法写入\\"用户设置\\"。","errorInvalidWorkspaceTarget":"{0} 不在多文件夹工作区环境下支持工作区作用域，因此无法写入“工作区设置”。","errorInvalidFolderTarget":"未提供资源，因此无法写入\\"文件夹设置\\"。","errorInvalidResourceLanguageConfiguraiton":"无法写入语言设置，因为{0}不是资源语言设置。","errorNoWorkspaceOpened":"没有打开任何工作区，因此无法写入 {0}。请先打开一个工作区，然后重试。","errorInvalidTaskConfiguration":"无法写入任务配置文件。请打开文件并更正错误或警告，然后重试。","errorInvalidLaunchConfiguration":"无法写入启动配置文件。请打开文件并更正错误或警告，然后重试。","errorInvalidConfiguration":"无法写入用户设置。请打开用户设置并清除错误或警告，然后重试。","errorInvalidRemoteConfiguration":"无法写入远程用户设置。请打开远程用户设置以更正其中的错误警告, 然后重试。","errorInvalidConfigurationWorkspace":"无法写入工作区设置。请打开工作区设置并清除错误或警告，然后重试。","errorInvalidConfigurationFolder":"无法写入文件夹设置。请打开“{0}”文件夹设置并清除错误或警告，然后重试。","errorTasksConfigurationFileDirty":"任务配置文件已变更，无法写入。请先保存此文件，然后重试。","errorLaunchConfigurationFileDirty":"启动配置文件已变更，无法写入。请先保存此文件，然后重试。","errorConfigurationFileDirty":"用户设置文件已变更，无法写入。请先保存此文件，然后重试。","errorRemoteConfigurationFileDirty":"无法写入远程的用户设置, 因为该文件已被污染。请先保存远程用户设置文件, 然后重试。","errorConfigurationFileDirtyWorkspace":"工作区设置文件已变更，无法写入。请先保存此文件，然后重试。","errorConfigurationFileDirtyFolder":"文件夹设置文件已变更，无法写入。请先保存“{0}”文件夹设置文件，然后重试。","errorTasksConfigurationFileModifiedSince":"无法写入任务配置文件，因为文件的内容较新。","errorLaunchConfigurationFileModifiedSince":"无法写入启动配置文件，因为文件的内容较新。","errorConfigurationFileModifiedSince":"无法写入用户设置，因为文件的内容较新。","errorRemoteConfigurationFileModifiedSince":"无法写入远程用户设置，因为文件的内容较新。","errorConfigurationFileModifiedSinceWorkspace":"无法写入工作区设置，因为文件的内容较新。","errorConfigurationFileModifiedSinceFolder":"无法写入文件夹设置，因为文件的内容较新。","userTarget":"用户设置","remoteUserTarget":"远程用户设置","workspaceTarget":"工作区设置","folderTarget":"文件夹设置"},"vs/workbench/services/configurationResolver/browser/configurationResolverService":{"commandVariable.noStringType":"无法替换命令变量 \\"{0}\\", 因为命令没有返回字符串类型的结果。","inputVariable.noInputSection":"必须在调试或任务配置的“{1}”部分中定义变量“{0}”。","inputVariable.missingAttribute":"输入变量“{0}”的类型为“{1}”且必须包含“{2}”。","inputVariable.defaultInputValue":"(默认值)","inputVariable.command.noStringType":"无法替换输入变量 \\"{0}\\", 因为命令 \\"{1}\\" 没有返回类型字符串的结果。","inputVariable.unknownType":"输入变量“{0}”只能是 \\"promptString\\"、\\"pickString\\" 或 \\"command\\" 类型。","inputVariable.undefinedVariable":"遇到未定义的输入变量“{0}”。请删除或定义“{0}”以继续操作。"},"vs/workbench/services/configurationResolver/common/variableResolver":{"canNotResolveFile":"无法解析变量 {0}。请打开一个编辑器。","canNotResolveFolderForFile":"变量 {0}: 找不到 \\"{1}\\" 的工作区文件夹。","canNotFindFolder":"找不到文件夹“{1}”，因此无法解析变量 {0}。","canNotResolveWorkspaceFolderMultiRoot":"无法在多文件夹工作区中解析变量 {0}。使用 \\":\\" 和工作区文件夹名称来限定此变量的作用域。","canNotResolveWorkspaceFolder":"无法解析变量 {0}。请打开一个文件夹。","missingEnvVarName":"未给出环境变量名称，因此无法解析变量 {0}。","configNotFound":"未能找到设置“{1}”，因此无法解析变量 {0}。","configNoString":"\\"{1}\\" 为结构类型值，因此无法解析变量 {0}。","missingConfigName":"未给出设置名称，因此无法解析变量 {0}。","canNotResolveLineNumber":"无法解析变量 {0}。请确保已在活动编辑器中选择一行内容。","canNotResolveSelectedText":"无法解析变量 {0}。请确保已在活动编辑器中选择一些文字。","noValueForCommand":"命令不含值，因此无法解析变量 {0}。"},"vs/workbench/services/configurationResolver/common/configurationResolverUtils":{"deprecatedVariables":"“env.”、“config.”和“command.”已弃用，请改用“env:”、“config:”和“command:”。"},"vs/workbench/services/configurationResolver/common/configurationResolverSchema":{"JsonSchema.input.id":"输入的 ID 用于与其变量采用 ${input:id} 形式的输入相关联。","JsonSchema.input.type":"要使用的用户输入提示符的类型。","JsonSchema.input.description":"当提示用户输入时，将显示说明。","JsonSchema.input.default":"输入的默认值。","JsonSchema.inputs":"用户输入。用于定义用户输入提示，例如自由字符串输入或从多个选项中进行选择。","JsonSchema.input.type.promptString":"\\"promptString\\" 类型会打开一个输入框，要求用户输入内容。","JsonSchema.input.password":"控制是否显示密码输入。密码输入会隐藏键入的文本。","JsonSchema.input.type.pickString":"“pickString”类型显示一个选择列表。","JsonSchema.input.options":"用于定义快速选择选项的字符串数组。","JsonSchema.input.pickString.optionLabel":"选项的标签。","JsonSchema.input.pickString.optionValue":"选项的值。","JsonSchema.input.type.command":"\\"command\\" 类型会执行命令。","JsonSchema.input.command.command":"要为此输入变量执行的命令。","JsonSchema.input.command.args":"传递给命令的可选参数。"},"vs/workbench/services/decorations/browser/decorationsService":{"bubbleTitle":"包含强调项"},"vs/workbench/services/dialogs/browser/abstractFileDialogService":{"saveChangesDetail":"如果不保存，你的更改将丢失。","saveChangesMessage":"是否要保存对 {0} 的更改?","saveChangesMessages":"是否要保存对下列 {0} 个文件的更改?","saveAll":"全部保存(&&S)","save":"保存(&&S)","dontSave":"不保存(&&N)","cancel":"取消","openFileOrFolder.title":"打开文件或文件夹","openFile.title":"打开文件","openFolder.title":"打开文件夹","openWorkspace.title":"打开工作区","filterName.workspace":"工作区","saveFileAs.title":"另存为","saveAsTitle":"另存为","allFiles":"所有文件","noExt":"无扩展"},"vs/workbench/services/dialogs/browser/simpleFileDialog":{"openLocalFile":"打开本地文件...","saveLocalFile":"保存本地文件...","openLocalFolder":"打开本地文件夹...","openLocalFileFolder":"打开本地...","remoteFileDialog.notConnectedToRemote":"{0} 的文件系统提供程序不可用。","remoteFileDialog.local":"显示本地","remoteFileDialog.badPath":"路径不存在。","remoteFileDialog.cancel":"取消","remoteFileDialog.invalidPath":"请输入有效路径。","remoteFileDialog.validateFolder":"该文件夹已存在。请使用新的文件名。","remoteFileDialog.validateExisting":"{0} 已存在。是否确实要覆盖?","remoteFileDialog.validateBadFilename":"请输入有效的文件名。","remoteFileDialog.validateNonexistentDir":"请输入已存在的路径。","remoteFileDialog.windowsDriveLetter":"路径开头请使用驱动器号。","remoteFileDialog.validateFileOnly":"请选择文件。","remoteFileDialog.validateFolderOnly":"请选择一个文件夹。"},"vs/workbench/services/editor/browser/editorService":{"editorAssociations.viewType.sourceDescription":"源: {0}"},"vs/workbench/services/editor/common/editorOpenWith":{"promptOpenWith.currentlyActive":"当前处于活动状态","promptOpenWith.setDefaultTooltip":"设置为“{0}”文件的默认编辑器","promptOpenWith.placeHolder":"为“{0}”选择编辑器","builtinProviderDisplayName":"内置","promptOpenWith.defaultEditor.displayName":"文本编辑器","editor.editorAssociations":"配置要用于特定文件类型的编辑器。","editor.editorAssociations.viewType":"要使用的编辑器的唯一 ID。","editor.editorAssociations.filenamePattern":"指定编辑器应该用于哪些文件的 Glob 模式。"},"vs/workbench/services/extensionManagement/electron-browser/extensionManagementServerService":{"local":"本地","remote":"远程"},"vs/workbench/services/extensionManagement/electron-sandbox/remoteExtensionManagementService":{"incompatible":"无法安装扩展名\'{0}\'，因为它不兼容 VS Code \'{1}\'。"},"vs/workbench/services/extensionManagement/common/webExtensionsScannerService":{"cannot be installed":"此扩展不是 Web 扩展，因此无法安装“{0}”。"},"vs/workbench/services/extensionManagement/browser/extensionEnablementService":{"extensionsDisabled":"已暂时禁用所有已安装的扩展。","Reload":"重新加载并启用扩展","cannot disable language pack extension":"无法更改 {0} 扩展的启用，因为它提供语言包。","cannot disable auth extension":"无法更改 {0} 扩展的启用，因为“设置同步”依赖此扩展。","noWorkspace":"没有工作区。","cannot disable auth extension in workspace":"无法在工作区中更改 {0} 扩展的启用，因为它提供身份验证提供程序"},"vs/workbench/services/extensionManagement/common/extensionManagementService":{"singleDependentError":"无法卸载扩展程序“{0}”。扩展程序“{1}”依赖于此。","twoDependentsError":"无法卸载扩展程序“{0}”。扩展程序“{1}”、“{2}”依赖于此。","multipleDependentsError":"无法卸载扩展程序“{0}”。扩展程序“{1}”、“{2}”以及其他扩展程序都依赖于此。","Manifest is not found":"安装扩展 {0} 失败: 找不到清单文件。","cannot be installed":"无法安装“{0}”，因为此扩展已定义它无法在远程服务器上运行。","cannot be installed on web":"无法安装“{0}”，因为根据定义，此扩展无法在 Web 服务器上运行。","install extension":"安装扩展","install extensions":"安装扩展","install":"安装","install and do no sync":"安装(不同步)","cancel":"取消","install single extension":"是否要跨设备安装并同步 \\"{0}\\" 扩展?","install multiple extensions":"是否要跨设备安装并同步扩展?"},"vs/workbench/services/extensionManagement/browser/extensionBisect":{"bisect":"扩展二等分处于活动状态，已禁用 {0} 扩展。请从这些选项中进行选择，检查是否仍可重现问题并继续操作。","title.start":"开始扩展二等分","help":"帮助","msg.start":"扩展二等分","detail.start":"扩展二等分将使用二进制搜索查找导致问题的扩展。在此过程中，窗口将不断重新加载(约 {0} 次)。每次都必须确认是否仍出现问题。","msg2":"开始扩展二等分","title.isBad":"继续扩展二等分","done.msg":"扩展二等分","done.detail2":"扩展二等分已完成，但未标识任何扩展。这可能是 {0} 的问题。","report":"报告问题并继续","done":"继续","done.detail":"扩展二等分已完成，已将 {0} 标识为导致问题的扩展。","done.disbale":"保持禁用此扩展","msg.next":"扩展二等分","next.good":"状况良好","next.bad":"状况不佳","next.stop":"停止二等分","next.cancel":"取消","title.stop":"停止扩展二等分"},"vs/workbench/services/extensionRecommendations/common/workspaceExtensionsConfig":{"select for remove":"从以下位置删除扩展建议","select for add":"将扩展建议添加到","workspace folder":"工作区文件夹","workspace":"工作区"},"vs/workbench/services/extensions/electron-browser/extensionService":{"extensionService.versionMismatchCrash":"扩展主机无法启动: 版本不匹配。","relaunch":"重新启动 VS Code","extensionService.crash":"扩展宿主意外终止。","devTools":"打开开发人员工具","restart":"重启扩展宿主","getEnvironmentFailure":"无法获取远程环境","looping":"以下扩展因包含依赖循环已被禁用: {0}","enableResolver":"打开远程窗口需要扩展“{0}”。\\r\\n确定启用吗?","enable":"启用和重新加载","installResolver":"打开远程窗口需要扩展“{0}”。\\r\\n确定要安装扩展吗?","install":"安装并重新加载","resolverExtensionNotFound":"未在市场上找到“{0}”","restartExtensionHost":"重启扩展宿主"},"vs/workbench/services/extensions/electron-browser/cachedExtensionScanner":{"overwritingExtension":"使用扩展程序 {1} 覆盖扩展程序 {0}。","extensionUnderDevelopment":"正在 {0} 处加载开发扩展程序","extensionCache.invalid":"扩展在磁盘上已被修改。请重新加载窗口。","reloadWindow":"重新加载窗口"},"vs/workbench/services/extensions/electron-browser/localProcessExtensionHost":{"extensionHost.startupFailDebug":"扩展未在 10 秒内启动，可能在第一行已停止，需要调试器才能继续。","extensionHost.startupFail":"扩展主机未在 10 秒内启动，这可能是一个问题。","reloadWindow":"重新加载窗口","extension host Log":"扩展宿主","extensionHost.error":"扩展主机中的错误: {0}"},"vs/workbench/services/extensions/common/abstractExtensionService":{"looping":"以下扩展因包含依赖循环已被禁用: {0}"},"vs/workbench/services/extensions/common/remoteExtensionHost":{"remote extension host Log":"远程扩展主机"},"vs/workbench/services/extensions/browser/webWorkerExtensionHost":{"name":"辅助角色扩展主机"},"vs/workbench/services/extensions/browser/extensionUrlHandler":{"confirmUrl":"是否允许扩展打开此 URI？","rememberConfirmUrl":"不再提醒此扩展。","open":"打开(&&O)","reloadAndHandle":"扩展“{0}”尚未载入。是否重载此窗口来载入扩展并打开 URL?","reloadAndOpen":"重载窗口并打开(&&R)","enableAndHandle":"扩展“{0}”已被禁用。是否启用扩展并重载此窗口来打开 URL?","enableAndReload":"启用并打开(&&E)","installAndHandle":"扩展“{0}”尚未安装。是否安装扩展并重载此窗口来打开 URL?","install":"安装(&&I)","Installing":"正在安装扩展“{0}”...","reload":"是否要重新加载窗口并打开 URL“{0}”?","Reload":"重新加载窗口并打开","manage":"管理授权扩展 URI...","extensions":"扩展","no":"当前没有已授权的扩展 URI。"},"vs/workbench/services/extensions/common/extensionsRegistry":{"ui":"UI 扩展类型。在远程窗口中, 仅本地计算机可用时启用此类扩展。","workspace":"工作区扩展类型。在远程窗口中，仅远程可用时启用此类扩展。","web":"Web 辅助进程扩展类型。此类扩展可在 Web 辅助进程扩展主机中执行。","vscode.extension.engines":"引擎兼容性。","vscode.extension.engines.vscode":"对于 VS Code 扩展，指定与其兼容的 VS Code 版本。不能为 *。 例如: ^0.10.5 表示最低兼容 VS Code 版本 0.10.5。","vscode.extension.publisher":"VS Code 扩展的发布者。","vscode.extension.displayName":"VS Code 库中使用的扩展的显示名称。","vscode.extension.categories":"VS Code 库用于对扩展进行分类的类别。","vscode.extension.category.languages.deprecated":"请改用 \\"Programming Languages\\"","vscode.extension.galleryBanner":"VS Code 商城使用的横幅。","vscode.extension.galleryBanner.color":"VS Code 商城页标题上的横幅颜色。","vscode.extension.galleryBanner.theme":"横幅文字的颜色主题。","vscode.extension.contributes":"由此包表示的 VS Code 扩展的所有贡献。","vscode.extension.preview":"在 Marketplace 中设置扩展，将其标记为“预览”。","vscode.extension.activationEvents":"VS Code 扩展的激活事件。","vscode.extension.activationEvents.onLanguage":"在打开被解析为指定语言的文件时发出的激活事件。","vscode.extension.activationEvents.onCommand":"在调用指定命令时发出的激活事件。","vscode.extension.activationEvents.onDebug":"在用户准备调试或准备设置调试配置时发出的激活事件。","vscode.extension.activationEvents.onDebugInitialConfigurations":"在需要创建 \\"launch.json\\" 文件 (且需要调用 provideDebugConfigurations 的所有方法) 时发出的激活事件。","vscode.extension.activationEvents.onDebugDynamicConfigurations":"每当需要创建所有调试配置的列表(并且需要调用“动态”范围的所有 provideDebugConfigurations 方法)时都会引发激活事件。","vscode.extension.activationEvents.onDebugResolve":"在将要启动具有特定类型的调试会话 (且需要调用相应的 resolveDebugConfiguration 方法) 时发出的激活事件。","vscode.extension.activationEvents.onDebugAdapterProtocolTracker":"每当即将启动具有特定类型的调试会话并可能需要调试协议跟踪器时, 都会发出激活事件。","vscode.extension.activationEvents.workspaceContains":"在打开至少包含一个匹配指定 glob 模式的文件的文件夹时发出的激活事件。","vscode.extension.activationEvents.onStartupFinished":"启动完成后(在所有 \\"*\\" 激活的扩展完成激活后)发出的激活事件。","vscode.extension.activationEvents.onFileSystem":"在使用给定协议打开文件或文件夹时发出的激活事件。","vscode.extension.activationEvents.onSearch":"在开始从给定协议的文件夹中搜索时发出的激活事件。","vscode.extension.activationEvents.onView":"在指定视图被展开时发出的激活事件。","vscode.extension.activationEvents.onIdentity":"每当指定的用户标识时，都会发出激活事件。","vscode.extension.activationEvents.onUri":"在打开系统范围内并指向此扩展的 URI 时发出的激活事件。","vscode.extension.activationEvents.onCustomEditor":"每当指定的自定义编辑器变为可见时，都会发出激活事件。","vscode.extension.activationEvents.star":"在 VS Code 启动时发出的激活事件。为确保良好的最终用户体验，请仅在其他激活事件组合不适用于你的情况时，才在扩展中使用此事件。","vscode.extension.badges":"在 Marketplace 的扩展页边栏中显示的徽章数组。","vscode.extension.badges.url":"徽章图像 URL。","vscode.extension.badges.href":"徽章链接。","vscode.extension.badges.description":"徽章说明。","vscode.extension.markdown":"控制商店中使用的 Markdown 渲染引擎。可为 \\"github\\" (默认) 或 \\"standard\\" (标准)。","vscode.extension.qna":"控制市场中的“问与答”(Q&A)链接。设置为 \\"marketplace\\" 可启用市场的默认“问与答”页面。设置为其他字符串可指向自定义的“问与答”页面。设置为 \\"false\\" 可完全禁用“问与答”。","vscode.extension.extensionDependencies":"其他扩展的依赖关系。扩展的标识符始终是 ${publisher}.${name}。例如: vscode.csharp。","vscode.extension.contributes.extensionPack":"可一起安装的一组扩展。扩展的标识符始终为 ${publisher}.${name}。例如: vscode.csharp。","extensionKind":"定义扩展的类型。\\"ui\\"扩展在本地计算机上安装和运行，而 \\"工作区\\" 扩展则在远程计算机上运行。","extensionKind.ui":"定义一个扩展，该扩展在连接到远程窗口时只能在本地计算机上运行。","extensionKind.workspace":"定义一个扩展，该扩展只能在连接远程窗口时在远程计算机上运行。","extensionKind.ui-workspace":"定义可在任意一侧运行的扩展，并首选在本地计算机上运行。","extensionKind.workspace-ui":"定义可在任意一侧运行的扩展，并首选在远程计算机上运行。","extensionKind.empty":"定义一个无法在远程上下文中运行的扩展，既不能在本地上，也不能在远程计算机上运行。","vscode.extension.scripts.prepublish":"包作为 VS Code 扩展发布前执行的脚本。","vscode.extension.scripts.uninstall":"VS Code 扩展的卸载钩子。在扩展从 VS Code 卸载且 VS Code 重启 (关闭后开启) 后执行的脚本。仅支持 Node 脚本。","vscode.extension.icon":"128 x 128 像素图标的路径。"},"vs/workbench/services/extensions/node/extensionPoints":{"jsonParseInvalidType":"清单文件 {0} 无效: 不是 JSON 对象。","jsonParseFail":"无法解析 {0}: [{1}, {2}] {3}.","fileReadFail":"无法读取文件 {0}: {1}。","jsonsParseReportErrors":"未能分析 {0}: {1}。","jsonInvalidFormat":"格式 {0} 无效: 应为 JSON 对象。","missingNLSKey":"无法找到键 {0} 的消息。","notSemver":"扩展版本与 semver 不兼容。","extensionDescription.empty":"已获得空扩展说明","extensionDescription.publisher":"属性 publisher 的类型必须是 \\"string\\"。","extensionDescription.name":"属性“{0}”是必需的，其类型必须是 \\"string\\"","extensionDescription.version":"属性“{0}”是必需的，其类型必须是 \\"string\\"","extensionDescription.engines":"属性“{0}”是必要属性，其类型必须是 \\"object\\"","extensionDescription.engines.vscode":"属性“{0}”是必需的，其类型必须是 \\"string\\"","extensionDescription.extensionDependencies":"属性“{0}”可以省略，否则其类型必须是 \\"string[]\\"","extensionDescription.activationEvents1":"属性“{0}”可以省略，否则其类型必须是 \\"string[]\\"","extensionDescription.activationEvents2":"必须同时指定或同时省略属性”{0}“和”{1}“","extensionDescription.main1":"属性“{0}”可以省略，否则其类型必须是 \\"string\\"","extensionDescription.main2":"应在扩展文件夹({1})中包含 \\"main\\" ({0})。这可能会使扩展不可移植。","extensionDescription.main3":"必须同时指定或同时省略属性”{0}“和”{1}“","extensionDescription.browser1":"属性 \\"{0}\\" 可以省略，或者必须为 \\"string\\" 类型","extensionDescription.browser2":"应在扩展文件夹({1})中包含 \\"browser\\" ({0})。这可能会使扩展不可移植。","extensionDescription.browser3":"必须同时指定或同时省略属性”{0}“和”{1}“"},"vs/workbench/services/extensions/common/extensionHostManager":{"measureExtHostLatency":"测量扩展主机延迟"},"vs/workbench/services/gettingStarted/common/gettingStartedContent":{"gettingStarted.beginner.title":"入门","gettingStarted.beginner.description":"了解你的新编辑器","pickColorTask.description":"修改用户界面中的颜色，适合与你的首选项和工作环境相符。","pickColorTask.title":"颜色主题","pickColorTask.button":"查找主题","findKeybindingsTask.description":"查找 Vim、Sublime、Atom 和其他内容的键盘快捷方式。","findKeybindingsTask.title":"配置键绑定","findKeybindingsTask.button":"搜索键映射","findLanguageExtsTask.description":"获取对你的语言(如 JavaScript、Python、Java、Azure、Docker 等)的支持。","findLanguageExtsTask.title":"语言和工具","findLanguageExtsTask.button":"安装语言支持","gettingStartedOpenFolder.description":"打开项目文件夹以开始使用!","gettingStartedOpenFolder.title":"打开文件夹","gettingStartedOpenFolder.button":"选择文件夹","gettingStarted.intermediate.title":"基本信息","gettingStarted.intermediate.description":"你将爱上的须知功能","commandPaletteTask.description":"查找 VS Code 可执行的各项操作的最简单的方法。如果你曾在查找某项功能，请先在此处查看!","commandPaletteTask.title":"命令面板","commandPaletteTask.button":"查看所有命令","gettingStarted.advanced.title":"提示和技巧","gettingStarted.advanced.description":"VS Code 专家最喜欢的内容","gettingStarted.openFolder.title":"打开文件夹","gettingStarted.openFolder.description":"打开项目并开始工作","gettingStarted.playground.title":"交互式操场","gettingStarted.interactivePlayground.description":"了解编辑器的基本功能"},"vs/workbench/services/integrity/node/integrityService":{"integrity.prompt":"{0} 安装似乎损坏。请重新安装。","integrity.moreInformation":"更多信息","integrity.dontShowAgain":"不再显示"},"vs/workbench/services/keybinding/common/keybindingEditing":{"errorKeybindingsFileDirty":"按键绑定配置文件已变更，现在无法写入。请先保存此文件，然后重试。","parseErrors":"无法写入按键绑定配置文件。请打开文件并更正错误或警告，然后重试。","errorInvalidConfiguration":"无法写入按键绑定配置文件。文件内含有非数组类型对象。请打开文件进行清理，然后重试。","emptyKeybindingsHeader":"将键绑定放在此文件中以覆盖默认值"},"vs/workbench/services/keybinding/browser/keybindingService":{"nonempty":"应为非空值。","requirestring":"属性“{0}”是必需的，其类型必须是 \\"string\\"","optstring":"属性“{0}”可以省略，否则其类型必须是 \\"string\\"","vscode.extension.contributes.keybindings.command":"要在触发键绑定时运行的命令的标识符。","vscode.extension.contributes.keybindings.args":"要传递给命令以执行的参数。","vscode.extension.contributes.keybindings.key":"键或键序列(用加号连接的键和后面再接空格的键序列都算组合键，如 Ctrl+O 和 Ctrl+L L)。","vscode.extension.contributes.keybindings.mac":"Mac 特定的键或键序列。","vscode.extension.contributes.keybindings.linux":"Linux 特定的键或键序列。","vscode.extension.contributes.keybindings.win":"Windows 特定的键或键序列。","vscode.extension.contributes.keybindings.when":"键处于活动状态时的条件。","vscode.extension.contributes.keybindings":"用于键绑定。","invalid.keybindings":"无效的“contributes.{0}”: {1}","unboundCommands":"以下是其他可用命令:","keybindings.json.title":"按键绑定配置","keybindings.json.key":"键或键序列(用空格分隔)","keybindings.json.command":"要执行的命令的名称","keybindings.json.when":"键处于活动状态时的条件。","keybindings.json.args":"要传递给命令以执行的参数。","keyboardConfigurationTitle":"键盘","dispatch":"控制按键的分派逻辑以使用 \\"code\\" (推荐) 或 \\"keyCode\\"。"},"vs/workbench/services/label/common/labelService":{"vscode.extension.contributes.resourceLabelFormatters":"提供资源标签格式化规则。","vscode.extension.contributes.resourceLabelFormatters.scheme":"要在其上匹配格式化程序的 URI 方案，例如“文件”。支持简单的 glob 模式。","vscode.extension.contributes.resourceLabelFormatters.authority":"要在其上匹配格式化程序的 URI 权限。支持简单的 glob 模式。","vscode.extension.contributes.resourceLabelFormatters.formatting":"用于格式化 uri 资源标签的规则。","vscode.extension.contributes.resourceLabelFormatters.label":"要显示的标签规则。例如，支持将 myLabel:/${path}. ${path}、${scheme} 和 ${authority} 用作变量。","vscode.extension.contributes.resourceLabelFormatters.separator":"要在 URI 标签显示中所用的分隔符，例如 / 或 \'\'。","vscode.extension.contributes.resourceLabelFormatters.stripPathStartingSeparator":"控制 \\"${path}\\" 替换项是否应删除起始分隔符字符。","vscode.extension.contributes.resourceLabelFormatters.tildify":"控制是否应在可能的情况下按斜体显示 URI 标签的开头。","vscode.extension.contributes.resourceLabelFormatters.formatting.workspaceSuffix":"附加到工作区标签的后缀。","untitledWorkspace":"无标题 (工作区)","workspaceNameVerbose":"{0} (工作区)","workspaceName":"{0} (工作区)"},"vs/workbench/services/lifecycle/electron-sandbox/lifecycleService":{"errorClose":"尝试关闭窗口({0})时引发了意外错误。","errorQuit":"尝试退出应用程序({0})时引发了意外错误。","errorReload":"尝试重新加载窗口({0})时引发了意外错误。","errorLoad":"尝试更改窗口({0})工作区时引发了意外错误。"},"vs/workbench/services/mode/common/workbenchModeService":{"vscode.extension.contributes.languages":"有助于语言声明。","vscode.extension.contributes.languages.id":"语言 ID。","vscode.extension.contributes.languages.aliases":"语言的别名。","vscode.extension.contributes.languages.extensions":"与语言关联的文件扩展名。","vscode.extension.contributes.languages.filenames":"与语言关联的文件名。","vscode.extension.contributes.languages.filenamePatterns":"与语言关联的文件名 glob 模式。","vscode.extension.contributes.languages.mimetypes":"与语言关联的 Mime 类型。","vscode.extension.contributes.languages.firstLine":"与语言文件的第一行匹配的正则表达式。","vscode.extension.contributes.languages.configuration":"包含语言配置选项的文件的相对路径。","invalid":"“contributes.{0}”无效。应为数组。","invalid.empty":"“contributes.{0}”的值为空","require.id":"属性“{0}”是必需的，其类型必须是 \\"string\\"","opt.extensions":"属性“{0}”可以省略，其类型必须是 \\"string[]\\"","opt.filenames":"属性“{0}”可以省略，其类型必须是 \\"string[]\\"","opt.firstLine":"属性“{0}”可以省略，其类型必须是 \\"string\\"。","opt.configuration":"属性“{0}”可以省略，其类型必须是 \\"string\\"。","opt.aliases":"属性“{0}”可以省略，其类型必须是 \\"string[]\\"","opt.mimetypes":"属性“{0}”可以省略，其类型必须是 \\"string[]\\""},"vs/workbench/services/notification/common/notificationService":{"neverShowAgain":"不再显示"},"vs/workbench/services/preferences/common/preferences":{"userSettingsTarget":"用户设置","workspaceSettingsTarget":"工作区设置"},"vs/workbench/services/preferences/browser/preferencesService":{"openFolderFirst":"首先打开文件夹以创建工作区设置","emptyKeybindingsHeader":"将键绑定放在此文件中以覆盖默认值","defaultKeybindings":"默认的键绑定","defaultSettings":"默认设置","folderSettingsName":"{0} (文件夹设置)","fail.createSettings":"无法创建“{0}”({1})。"},"vs/workbench/services/preferences/common/preferencesEditorInput":{"settingsEditorName":"默认设置","keybindingsInputName":"键盘快捷方式","settingsEditor2InputName":"设置"},"vs/workbench/services/preferences/common/preferencesModels":{"commonlyUsed":"常用设置","defaultKeybindingsHeader":"通过将键绑定放入键绑定文件来覆盖键绑定。"},"vs/workbench/services/preferences/common/keybindingsEditorModel":{"default":"默认值","extension":"扩展","user":"用户","cat.title":"{0}: {1}","option":"选项","meta":"元数据"},"vs/workbench/services/preferences/common/preferencesValidation":{"validations.expectedNumeric":"值必须为数字。","invalidTypeError":"设置的类型无效，应为 {0}。请使用 JSON 格式进行修复。","validations.maxLength":"值的长度必须小于或等于 {0} 个字符。","validations.minLength":"值的长度不能少于 {0} 个字符。","validations.regex":"值必须匹配 regex “{0}”。","validations.colorFormat":"颜色格式无效。请使用 #RGB、#RGBA、#RRGGBB 或 #RRGGBBAA。","validations.uriEmpty":"需要 URI。","validations.uriMissing":"需要 URI。","validations.uriSchemeMissing":"需要包含架构的 URI。","validations.exclusiveMax":"值必须严格小于 {0}。","validations.exclusiveMin":"值必须严格大于 {0}。","validations.max":"值必须小于或等于 {0}。","validations.min":"值必须大于或等于 {0}。","validations.multipleOf":"值必须是 {0} 的倍数。","validations.expectedInteger":"值必须为整数。","validations.stringArrayUniqueItems":"数组具有重复项","validations.stringArrayMinItem":"数组必须至少有 {0} 项","validations.stringArrayMaxItem":"数组必须最多有 {0} 项","validations.stringArrayItemPattern":"值 {0} 必须与 regex {1} 匹配。","validations.stringArrayItemEnum":"值 {0} 不是 {1} 其中之一"},"vs/workbench/services/progress/browser/progressService":{"progress.text2":"{0}: {1}","progress.title3":"[{0}] {1}: {2}","progress.title2":"[{0}]: {1}","status.progress":"进度消息","cancel":"取消","dismiss":"消除"},"vs/workbench/services/remote/common/abstractRemoteAgentService":{"connectionError":"无法连接到远程扩展主机服务器 (错误: {0})"},"vs/workbench/services/textfile/electron-browser/nativeTextFileService":{"fileReadOnlyError":"文件为只读文件"},"vs/workbench/services/textfile/browser/textFileService":{"fileBinaryError":"文件似乎是二进制文件，不能作为文本打开","confirmOverwrite":"“{0}”已存在。是否替换它?","irreversible":"名为\\"{0}\\"的文件或文件夹已存在于\\"{1}\\"文件夹中。替换它将覆盖其当前内容。","replaceButtonLabel":"替换(&&R)"},"vs/workbench/services/textfile/common/textFileEditorModelManager":{"genericSaveError":"未能保存“{0}”: {1}"},"vs/workbench/services/textfile/common/textFileEditorModel":{"saveFileFirst":"文件已更新。请首先保存它，然后再通过另一个编码重新打开它。"},"vs/workbench/services/textfile/common/textFileSaveParticipant":{"saveParticipants":"正在保存“{0}”"},"vs/workbench/services/textMate/browser/abstractTextMateService":{"alreadyDebugging":"已经开始记录。","stop":"停止","progress1":"正在准备记录 TM 语法分析。完成后按“停止”。","progress2":"现在正在记录 TM 语法分析。完成后按“停止”。","invalid.language":"\\"contributes.{0}.language\\" 中包含未知语言。提供的值: {1}","invalid.scopeName":"“contributes.{0}.scopeName”中应为字符串。提供的值: {1}","invalid.path.0":"“contributes.{0}.path”中应为字符串。提供的值: {1}","invalid.injectTo":"\\"contributes.{0}.injectTo\\" 中的值无效。必须为语言范围名称数组。提供的值: {1}","invalid.embeddedLanguages":"\\"contributes.{0}.embeddedLanguages\\" 中的值无效。必须为从作用域名称到语言的对象映射。提供的值: {1}","invalid.tokenTypes":"\\"contributes.{0}.tokenTypes\\" 的值无效。必须为从作用域名称到标记类型的对象映射。当前值: {1}","invalid.path.1":"“contributes.{0}.path”({1})应包含在扩展的文件夹({2})内。这可能会使扩展不可移植。","too many characters":"出于性能原因，对长行跳过令牌化。长行的长度可通过 \\"editor.maxTokenizationLineLength\\" 进行配置。","neverAgain":"不再显示"},"vs/workbench/services/textMate/common/TMGrammars":{"vscode.extension.contributes.grammars":"贡献 textmate tokenizer。","vscode.extension.contributes.grammars.language":"此语法为其贡献了内容的语言标识符。","vscode.extension.contributes.grammars.scopeName":"tmLanguage 文件所用的 textmate 范围名称。","vscode.extension.contributes.grammars.path":"tmLanguage 文件的路径。该路径是相对于扩展文件夹，通常以 \\"./syntaxes/\\" 开头。","vscode.extension.contributes.grammars.embeddedLanguages":"如果此语法包含嵌入式语言，则为作用域名称到语言 ID 的映射。","vscode.extension.contributes.grammars.tokenTypes":"从作用域名到标记类型的映射。","vscode.extension.contributes.grammars.injectTo":"此语法注入到的语言范围名称列表。"},"vs/workbench/services/textMate/common/TMGrammarFactory":{"no-tm-grammar":"没有注册这种语言的 TM 语法。"},"vs/workbench/services/themes/browser/workbenchThemeService":{"error.cannotloadtheme":"无法加载 {0}: {1}"},"vs/workbench/services/themes/common/colorExtensionPoint":{"contributes.color":"提供由扩展定义的主题颜色","contributes.color.id":"主题颜色标识符","contributes.color.id.format":"标识符只能包含字母、数字和点，且不能以点开头","contributes.color.description":"主题颜色的说明","contributes.defaults.light":"浅色主题的默认颜色。应为十六进制颜色值 (#RRGGBB[AA]) 或是主题颜色标识符，其提供默认值。","contributes.defaults.dark":"深色主题的默认颜色。应为十六进制颜色值 (#RRGGBB[AA]) 或是主题颜色标识符，其提供默认值。","contributes.defaults.highContrast":"高对比度主题的默认颜色。应为十六进制颜色值 (#RRGGBB[AA]) 或是主题颜色标识符，其提供默认值。","invalid.colorConfiguration":"\\"configuration.colors\\" 必须是数组","invalid.default.colorType":"{0} 必须为十六进制颜色值 (#RRGGBB[AA] 或 #RGB[A]) 或是主题颜色标识符，其提供默认值。","invalid.id":"必须定义 \\"configuration.colors.id\\" 且它不可为空","invalid.id.format":"\\"configuration.colors.id\\" 只能包含字母、数字和点，且不能以点开头","invalid.description":"必须定义 \\"configuration.colors.description\\" 且它不可为空","invalid.defaults":"必须定义 “configuration.colors.defaults”，且须包含 \\"light\\"(浅色)、\\"dark\\"(深色) 和 \\"highContrast\\"(高对比度)"},"vs/workbench/services/themes/common/tokenClassificationExtensionPoint":{"contributes.semanticTokenTypes":"贡献语义令牌类型。","contributes.semanticTokenTypes.id":"语义令牌类型的标识符","contributes.semanticTokenTypes.id.format":"标识符的格式应为letterOrDigit[_-letterOrDigit]*","contributes.semanticTokenTypes.superType":"语义令牌类型的超类型","contributes.semanticTokenTypes.superType.format":"超类型的格式应为 letterOrDigit[_-letterOrDigit]*","contributes.color.description":"语义标记类型的说明","contributes.semanticTokenModifiers":"提供语义标记修饰符。","contributes.semanticTokenModifiers.id":"语义令牌修饰符的标识符","contributes.semanticTokenModifiers.id.format":"标识符的格式应为letterOrDigit[_-letterOrDigit]*","contributes.semanticTokenModifiers.description":"语义令牌修饰符的说明","contributes.semanticTokenScopes":"提供语义令牌范围映射。","contributes.semanticTokenScopes.languages":"列出默认语言。","contributes.semanticTokenScopes.scopes":"将语义令牌(由语义令牌选择器描述)映射到用于表示该令牌的一个或多个 textMate 作用域。","invalid.id":"必须定义 \\"configuration.{0}.id\\" 且它不可为空","invalid.id.format":"\\"configuration.{0}.id\\" 必须采用 letterOrDigit[-_letterOrDigit]* 模式","invalid.superType.format":"“ configuration.{0}.superType”必须遵循格式 letterOrDigit [-_letterOrDigit] *","invalid.description":"必须定义 \\"configuration.{0}.description\\" 且它不可为空","invalid.semanticTokenTypeConfiguration":"“configuration.semanticTokenType”必须是数组","invalid.semanticTokenModifierConfiguration":"“configuration.semanticTokenModifier” 必须是数组","invalid.semanticTokenScopes.configuration":"\\"configuration.semanticTokenScopes\\" 必须是一个数组","invalid.semanticTokenScopes.language":"\\"configuration.semanticTokenScopes.language\\" 的值必须是字符串","invalid.semanticTokenScopes.scopes":"\\"configuration.semanticTokenScopes.scopes\\" 必须定义为对象","invalid.semanticTokenScopes.scopes.value":"\\"configuration.semanticTokenScopes.scopes\\" 的值必须是字符串数组","invalid.semanticTokenScopes.scopes.selector":"\\"configuration.semanticTokenScopes.scopes\\": 解析选择器{0}时出现问题。"},"vs/workbench/services/themes/common/colorThemeData":{"error.cannotparsejson":"分析 JSON 主题文件 {0} 时出现问题","error.invalidformat":"JSON 主题文件的格式无效: 应为对象。","error.invalidformat.colors":"分析颜色主题文件时出现问题: {0}。属性“colors”不是“object”类型。","error.invalidformat.tokenColors":"分析颜色主题文件时出现问题: {0}。属性 \\"tokenColors\\" 应为指定颜色的数组或是指向 TextMate 主题文件的路径","error.invalidformat.semanticTokenColors":"分析颜色主题文件时发生问题: {0}。属性 \\"semanticTokenColors\\" 包含无效的选择器","error.plist.invalidformat":"分析 tmTheme 文件时出现问题: {0}。\\"settings\\" 不是数组。","error.cannotparse":"分析 tmTheme 文件时出现问题: {0}","error.cannotload":"分析 tmTheme 文件 {0} 时出现问题: {1}"},"vs/workbench/services/themes/common/fileIconThemeSchema":{"schema.folderExpanded":"展开文件夹的文件夹图标。展开文件夹图标是可选的。如果未设置，将显示为文件夹定义的图标。","schema.folder":"折叠文件夹的文件夹图标，如果未设置 folderExpanded，也指展开文件夹的文件夹图标。","schema.file":"默认文件图标，针对不与任何扩展名、文件名或语言 ID 匹配的所有文件显示。","schema.folderNames":"将文件夹名关联到图标。对象中的键是文件夹名，其中不含任何路径字段。不允许使用模式或通配符。文件夹名匹配不区分大小写。","schema.folderName":"关联的图标定义的 ID。","schema.folderNamesExpanded":"将文件夹名关联到展开文件夹的图标。对象中的键是文件夹名，其中不含任何路径字段。不允许使用模式或通配符。文件夹名匹配不区分大小写。","schema.folderNameExpanded":"关联的图标定义的 ID。","schema.fileExtensions":"将文件扩展名关联到图标。对象中的键是文件扩展名。扩展名是文件名的最后一部分，位于最后一个点之后 (不包括该点)。比较扩展名时不区分大小写。","schema.fileExtension":"关联的图标定义的 ID。","schema.fileNames":"将文件名关联到图标。对象中的键是完整文件名，其中不含任何路径字段。文件名可以包括点和可能有的文件扩展名。不允许使用模式或通配符。文件名匹配不区分大小写。","schema.fileName":"关联的图标定义的 ID。","schema.languageIds":"将语言与图标相关联。对象键是语言贡献点中定义的语言 ID。","schema.languageId":"关联的图标定义的 ID。","schema.fonts":"图标定义中使用的字体。","schema.id":"字体的 ID。","schema.id.formatError":"ID 必须仅包含字母、数字、下划线和减号。","schema.src":"字体的位置。","schema.font-path":"相对于当前文件图标主题文件的字体路径。","schema.font-format":"字体的格式。","schema.font-weight":"字体的粗细。要了解有效值，请参阅 https://developer.mozilla.org/zh-cn/docs/Web/CSS/font-weight。","schema.font-style":"字体的样式。要了解有效值，请参阅 https://developer.mozilla.org/zh-cn/docs/Web/CSS/font-style。","schema.font-size":"字体的默认大小。请参阅 https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-size 查看有效的值。","schema.iconDefinitions":"将文件与图标关联时可使用的所有图标的说明。","schema.iconDefinition":"图标定义。对象键是定义的 ID。","schema.iconPath":"使用 SVG 或 PNG 时: 到图像的路径。该路径相对于图标设置文件。","schema.fontCharacter":"使用字形字体时: 要使用的字体中的字符。","schema.fontColor":"使用字形字体时: 要使用的颜色。","schema.fontSize":"使用某种字体时: 文本字体的字体大小(以百分比表示)。如果未设置，则默认为字体定义中的大小。","schema.fontId":"使用某种字体时: 字体的 ID。如果未设置，则默认为第一个字体定义。","schema.light":"浅色主题中文件图标的可选关联。","schema.highContrast":"高对比度颜色主题中文件图标的可选关联。","schema.hidesExplorerArrows":"配置文件资源管理器的箭头是否应在此主题启用时隐藏。"},"vs/workbench/services/themes/browser/fileIconThemeData":{"error.cannotparseicontheme":"分析文件图标文件时出现问题: {0}","error.invalidformat":"文件图标主题问题的格式无效: 应为对象。"},"vs/workbench/services/themes/common/colorThemeSchema":{"schema.token.settings":"标记的颜色和样式。","schema.token.foreground":"标记的前景色。","schema.token.background.warning":"暂不支持标记背景色。","schema.token.fontStyle":"这条规则的字体样式: \\"italic\\" (斜体)、\\"bold\\" (粗体)、\\"underline\\" (下划线) 或是上述的组合。空字符串将清除继承的设置。","schema.fontStyle.error":"字体样式必须为 \\"italic\\" (斜体)、\\"bold\\" (粗体)、\\"underline\\" (下划线) 、上述的组合或是为空字符串。","schema.token.fontStyle.none":"无 (清除继承的设置)","schema.properties.name":"规则的描述。","schema.properties.scope":"此规则适用的范围选择器。","schema.workbenchColors":"工作台中的颜色","schema.tokenColors.path":"tmTheme 文件路径(相对于当前文件)。","schema.colors":"语法突出显示颜色","schema.supportsSemanticHighlighting":"是否应为此主题启用语义突出显示。","schema.semanticTokenColors":"语义标记的颜色"},"vs/workbench/services/themes/common/themeExtensionPoints":{"vscode.extension.contributes.themes":"提供 TextMate 颜色主题。","vscode.extension.contributes.themes.id":"用户设置中使用的颜色主题的 ID。","vscode.extension.contributes.themes.label":"显示在 UI 中的颜色主题标签。","vscode.extension.contributes.themes.uiTheme":"用于定义编辑器周围颜色的基本主题: \\"vs\\" 是浅色主题，\\"vs-dark\\" 是深色主题。\\"hc-black\\" 是深色高对比度主题。","vscode.extension.contributes.themes.path":"tmTheme 文件的路径。该路径相对于扩展文件夹，通常为 \\"./colorthemes/awesome-color-theme.json\\"。","vscode.extension.contributes.iconThemes":"提供文件图标主题。","vscode.extension.contributes.iconThemes.id":"在用户设置中使用的文件图标主题的 ID。","vscode.extension.contributes.iconThemes.label":"文件图标主题的标签，如 UI 所示。","vscode.extension.contributes.iconThemes.path":"文件图标主题定义文件的路径。该路径相对于扩展文件夹，通常为 \\"./fileicons/awesome-icon-theme.json\\"。","vscode.extension.contributes.productIconThemes":"贡献产品图标主题。","vscode.extension.contributes.productIconThemes.id":"用户设置中使用的产品图标主题的 ID。","vscode.extension.contributes.productIconThemes.label":"产品图标主题的标签，如 UI 所示。","vscode.extension.contributes.productIconThemes.path":"产品图标主题定义文件的路径。该路径相对于扩展文件夹，通常为 \\"./producticons/awesome-product-icon-theme.json\\"。","reqarray":"扩展点“{0}”必须是数组。 ","reqpath":"“contributes.{0}.path”中应为字符串。提供的值: {1}","reqid":"contributes.{0}.id\\" 中的预期字符串。提供的值: {1}","invalid.path.1":"“contributes.{0}.path”({1})应包含在扩展的文件夹({2})内。这可能会使扩展不可移植。"},"vs/workbench/services/themes/common/themeConfiguration":{"colorTheme":"指定用在工作台中的颜色主题。","colorThemeError":"主题未知或未安装。","preferredDarkColorTheme":"指定启用了 `#{0}#` 时深色操作系统外观的首选颜色主题。","preferredLightColorTheme":"指定启用了 `#{0}#` 时浅色操作系统外观的首选颜色主题。","preferredHCColorTheme":"指定启用了 `#{0}#` 时在高对比度模式下使用的首选颜色主题。","detectColorScheme":"如果设置，则根据操作系统外观自动切换到首选颜色主题。","workbenchColors":"覆盖当前所选颜色主题的颜色。","iconTheme":"指定工作台中使用的文件图标主题；若指定为 \\"null\\"，则不显示任何文件图标。","noIconThemeLabel":"无","noIconThemeDesc":"无文件图标","iconThemeError":"文件图标主题未知或未安装。","productIconTheme":"指定使用的产品图标主题。","defaultProductIconThemeLabel":"默认","defaultProductIconThemeDesc":"默认","productIconThemeError":"产品图标主题未知或未安装。","autoDetectHighContrast":"如果已启用，并且操作系统正在使用高对比度主题，则将自动更改为高对比度主题。","editorColors.comments":"设置注释的颜色和样式","editorColors.strings":"设置字符串文本的颜色和样式","editorColors.keywords":"设置关键字的颜色和样式。","editorColors.numbers":"设置数字的颜色和样式。","editorColors.types":"设置类型定义与引用的颜色和样式。","editorColors.functions":"设置函数定义与引用的颜色和样式。","editorColors.variables":"设置变量定义和引用的颜色和样式。","editorColors.textMateRules":"使用 TextMate 主题规则设置颜色和样式(高级)。","editorColors.semanticHighlighting":"是否应为此主题启用语义突出显示。","editorColors.semanticHighlighting.deprecationMessage":"改为在 \\"editor.semanticTokenColorCustomizations\\" 设置中使用 \\"enabled\\"。","editorColors.semanticHighlighting.deprecationMessageMarkdown":"在 `#editor.semanticTokenColorCustomizations#` 设置中改为使用 `enabled`。","editorColors":"替代当前所选颜色主题中的编辑器语法颜色和字形。","editorColors.semanticHighlighting.enabled":"是否对此主题启用或禁用语义突出显示","editorColors.semanticHighlighting.rules":"此主题的语义标记样式规则。","semanticTokenColors":"从当前所选颜色主题重写编辑器语义标记颜色和样式。","editorColors.experimentalTokenStyling.deprecationMessage":"改为使用 \\"editor.semanticTokenColorCustomizations\\"。","editorColors.experimentalTokenStyling.deprecationMessageMarkdown":"改为使用 `#editor.semanticTokenColorCustomizations#`。"},"vs/workbench/services/themes/browser/productIconThemeData":{"error.parseicondefs":"处理 {0} 中的产品图标定义时出现问题:\\r\\n{1}","defaultTheme":"默认值","error.cannotparseicontheme":"分析产品图标文件时出现问题: {0}","error.invalidformat":"产品图标主题文件的格式无效: 应为对象。","error.missingProperties":"产品图标主题文件的格式无效: 必须包含图标定义和字体。","error.fontWeight":"字体“{0}”中的字体粗细无效。将忽略设置。","error.fontStyle":"字体“{0}”中的字体样式无效。将忽略设置。","error.fontId":"字体 ID“{0}”缺失或无效。将跳过字体定义。","error.icon.fontId":"正在跳过图标定义“{0}”。未知的字体。","error.icon.fontCharacter":"正在跳过图标定义“{0}”。未知的 fontCharacter。"},"vs/workbench/services/themes/common/productIconThemeSchema":{"schema.id":"字体的 ID。","schema.id.formatError":"ID 必须仅包含字母、数字、下划线和减号。","schema.src":"字体的位置。","schema.font-path":"相对于当前产品图标主题文件的字体路径。","schema.font-format":"字体的格式。","schema.font-weight":"字体的粗细。要了解有效值，请参阅 https://developer.mozilla.org/zh-cn/docs/Web/CSS/font-weight。","schema.font-style":"字体的样式。要了解有效值，请参阅 https://developer.mozilla.org/zh-cn/docs/Web/CSS/font-style。","schema.iconDefinitions":"字体字符的图标名称的关联。"},"vs/workbench/services/userDataSync/common/userDataSync":{"settings":"设置","keybindings":"键盘快捷方式","snippets":"用户代码片段","extensions":"扩展","ui state label":"UI 状态","sync category":"设置同步","syncViewIcon":"查看设置同步视图的图标。"},"vs/workbench/services/userDataSync/browser/userDataSyncWorkbenchService":{"no authentication providers":"没有可用的身份验证提供程序，因此无法启用设置同步。","no account":"没有可用的帐户。","show log":"显示日志","sync turned on":"{0} 已启用","sync in progress":"正在启用设置同步。是否要取消它?","settings sync":"设置同步","yes":"是(&&Y)","no":"否(&&N)","turning on":"正在打开…","syncing resource":"正在同步 {0}…","conflicts detected":"检测到冲突","merge Manually":"手动合并…","resolve":"因存在冲突而无法合并。请手动合并以继续...","merge or replace":"合并或替换","merge":"合并","replace local":"替换本地","cancel":"取消","first time sync detail":"你上次似乎是从另一台计算机同步的。\\r\\n是要合并还是替换云中的数据?","reset":"这将清除云中的数据，并在所有设备上停止同步。","reset title":"清除","resetButton":"重置(&&R)","choose account placeholder":"选择要登录的帐户","signed in":"已登录","last used":"上次使用时同步","others":"其他","sign in using account":"使用 {0} 登录","successive auth failures":"后续授权失败，因此已暂停设置同步。若要继续同步，请重新登录","sign in":"登录"},"vs/workbench/services/views/browser/viewDescriptorService":{"resetViewLocation":"重置位置"},"vs/workbench/services/workingCopy/common/workingCopyFileOperationParticipant":{"msg-create":"正在运行\\"文件创建\\"参与者...","msg-rename":"正在运行\\"文件重命名\\"参与者...","msg-copy":"正在运行“文件复制”参与者…","msg-delete":"正在运行\\"文件删除\\"参与者..."},"vs/workbench/services/workspaces/electron-sandbox/workspaceEditingService":{"save":"保存","doNotSave":"不保存","cancel":"取消","saveWorkspaceMessage":"你是否要将你的工作区配置保存为文件?","saveWorkspaceDetail":"若要再次打开此工作区，请先保存。","workspaceOpenedMessage":"无法保存工作区“{0}”","ok":"确定","workspaceOpenedDetail":"已在另一个窗口打开工作区。请先关闭该窗口，然后重试。"},"vs/workbench/services/workspaces/browser/abstractWorkspaceEditingService":{"save":"保存","saveWorkspace":"保存工作区","errorInvalidTaskConfiguration":"无法写入工作区配置文件。请打开文件以更正错误或警告，然后重试。","errorWorkspaceConfigurationFileDirty":"文件已变更，因此无法写入工作区配置文件。请先保存此文件，然后重试。","openWorkspaceConfigurationFile":"打开工作区配置"}}');(0,u.l5)(d);var m=__webpack_require__(204),p=__webpack_require__(5861),b=__webpack_require__(4687),g=__webpack_require__.n(b);function f(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function h(t){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?f(Object(n),!0).forEach((function(r){(0,e.Z)(t,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):f(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}const v={getDVariable:function(){var e=(0,p.Z)(g().mark((function e(){var t,r=arguments;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=r[0].customVar,e.abrupt("return",t);case 2:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}(),addEditDVariable:function(t,r){var n=arguments[2],o=n.customVar;(0,n.setCustomVar)(h(h({},o),{},(0,e.Z)({},t,r)))},delDVariable:function(e){var t=arguments[1],r=t.customVar,n=t.setCustomVar,o=r;delete o[e],n(o)},dashboardUpdateCell:function(e,t){(0,arguments[2].setCellParams)(e,"base",t)}};var y=__webpack_require__(6362);const w={"variableEditor.dataToSchema":function(e){var t=e.data,r=e.title;return(0,y.Cy)(t,r)}};var A=__webpack_require__(3379),x=__webpack_require__.n(A),k=__webpack_require__(2060);x()(k.Z,{insert:"head",singleton:!1}),k.Z.locals;const C=JSON.parse('{"en":{"translation":{"函数名称":"Function Name","函数内容":"Function Content","备注说明":"Notes","保存成功":"Successfully saved","创建函数":"Create Function","测试表":"Test Table","属性":"Attribute","方法":"Method","画布":"Canvas","请输入组件名":"Please enter the component name","函数":"Function","函数文档":"Function documentation","插入函数":"Insert Function","名称":"Name","类型":"Type","描述":"Describe","定义":"Definition","语法":"Grammar","参数":"Parameter","返回值":"Return value","内容":"Content","说明":"Explain","复杂示例":"Complex examples","简单示例":"Simple example","【简单示例】":"[Simple Example]","【复杂示例】":"Complex examples","示例":"Example","使用示例":"Usage examples","画面":"Frame","模型":"Model","系统函数":"System functions","画面函数":"Screen function","自定义函数":"Custom Functions","二次开发函数":"Secondary development function","删除成功":"Successfully deleted","修改后，相关引用该脚本方法处均会被修改，请谨慎操作！":"After modification, all references to the script method will be modified. Please operate with caution!","确定":"Determine","取消":"Cancel","删除后，相关引用该脚本方法处均会被删除，请谨慎操作！":"After deletion, all references to the script method will be deleted. Please operate with caution!","编辑函数":"Edit Function","变量":"Variable","字段":"Field","数据点":"Data point","公式输入":"Formula input","变量与函数":"Variables and Functions","在线状态":"Online status","数据字典":"Data dictionary","请输入公式，语法为JavaScript":"Please enter a formula with JavaScript syntax","请选择变量":"Please select a variable","公式编辑":"Formula editing","文本":"Text","数字":"Number","布尔":"Boolean","日期":"Date","对象":"Object","数组":"Array","工作表":"Worksheet","资产":"Assets","用户":"User","工作表记录":"Worksheet Record","公式错误":"Formula error","X轴":"X-axis","Y轴":"Y-axis","Z轴":"Z-axis","场景":"Scene","背景颜色":"Background color ","背景贴图":"Background map","贴图方式":"Mapping method","全景图":"Panorama","启用":"Enable","颜色":"Colour","最小距离":"Minimum distance","最大距离":"Maximum distance","地平面":"Ground level","材质":"Texture of material","宽度":"Width","高度":"Height","相机":"Camera","视野角度":"Field of view angle","近端面距离":"Near end distance","远端面距离":"Distal face distance","初始位置":"Initial position ","初始方向":"Initial direction","控制器类别":"Controller Category","轨道控制器":"Track controller","旋转":"Rotate","旋转速度":"Rotation speed","水平角度上限":"Upper limit of horizontal angle","水平角度下限":"Lower limit of horizontal angle","垂直角度上限":"Vertical angle upper limit","垂直角度下限":"Lower limit of vertical angle","平移":"Translation","平移速度":"Translation speed","缩放":"Zoom","缩放速度":"Zoom speed","缩放距离上限":"Zoom distance upper limit","缩放距离下限":"Zoom Distance Lower Limit","阻尼":"Damping","阻尼因子":"Damping factor","自动旋转":"Automatic rotation","自动旋转速度":"Automatic rotation speed","行走控制器":"Walking controller","视线高度":"Sight height","移动速度":"Movement speed","下落速度":"Falling speed","跳跃高度":"Jumping height","飞行控制器":"Flight controller","自动前进":"Automatic forward","快照":"Snapshot","快照变量":"Snapshot variables","快照列表":"Snapshot List","位置":"Position","方向":"Direction","渲染":"Rendering","色彩空间":"Color Space","灯光":"Lighting","环境光":"Ambient light","强度":"Strength","平行光":"Directional light","阴影":"Shadow","半球光":"Hemispherical light","天空颜色":"Sky Color","地面颜色":"Ground color","点光":"Spot light","距离":"Distance","衰退量":"Decline amount","聚光灯":"Spotlight","散射角度":"Scattering angle","衰减百分比":"Attenuation percentage","衰减量":"Attenuation amount","辅助":"Auxiliary","坐标格":"Grid ","尺寸":"Size","细分次数":"Number of subdivisions","中线颜色":"Centerline color","网格线颜色":"Gridline Color","坐标轴":"Coordinate axis","轴线长度":"Axis length","选择器":"Selector","脚本编辑器":"Script editor ","请选择逻辑...":"Please select logic","数值":"Numerical value","或者":"Perhaps","并且":"Also","恒等于":"Identical to","等于":"Be equal to","不等于":"Not equal to","恒不等于":"Constant not equal to","取反":"Negate","小于等于":"Less than or equal to","大于等于":"Greater than or equal to","小于":"Less than","大于":"Greater than","逻辑与":"Logic and","逻辑或":"Logical OR","工作表数据":"Worksheet Data","变量列表":"Variable List","插入公式":"Insert Formula","全屏":"Full screen","ECMAScript中函数":"Functions in ECMAScript","html对dom操作的函数":"Functions of HTML for dom operations","Web存储":"Web Storage","查询工作表列表":"Query Worksheet List","{ total: 总条数, items: 工作表列表 }":"{total: total number of items, items: worksheet list}","<p>查询工作表列表</p>":"<p>Query Worksheet List</p>","<p>{ total: 总条数, items: 工作表列表 }</p>":"<p>{total: total number of items, items: worksheet list}</p>","<p>":"<p>","<p>查询条件（可选）</p>":"<p>Query criteria (optional)</p>","<p></p>":"<p></p>","<p>查询条数（默认30）</p>":"<p>Number of queries (default 30)</p>","<p>跳过条数（默认0）</p>":"<p>Skip Number (default 0)</p>","<p>排序</p>":"<p>Sort</p>","<p>查询字段（默认name）</p>":"<p>Query field (default name)</p>","<p>查询条件</p>":"<p>Query criteria</p>","<p>工作表名称</p>":"<p>Worksheet Name</p>","<p>工作表标题</p>":"<p>Worksheet Title</p>","<p>属性配置</p>":"<p>Attribute Configuration</p>","<p>关联画面</p>":"<p>Associated screen</p>","<p>工作表权限</p>":"<p>Worksheet permissions</p>","<p>字段规则</p>":"<p>Field Rules</p>","<p>错误提示</p>":"<p>Error prompt</p>","<p>同步数据</p>":"<p>Synchronize data</p>","<p>创建人</p>":"<p>Creator</p>","<p>创建时间</p>":"<p>Creation time</p>","<p>根据id查询工作表详情</p>":"<p>Query worksheet details based on ID</p>","<p>工作表数据</p>":"<p>Worksheet Data</p>","<p>新增工作表</p>":"<p>Add a worksheet</p>","<p>新建的工作表数据</p>":"<p>New worksheet data</p>","<p>工作表名称（必填）</p>":"<p>Worksheet Name (required)</p>","<p>工作表标题（必填）</p>":"<p>Worksheet Title (Required)</p>","<p>{ InsertedID: 插入工作表的ID }</p>":"<p>{InsertedID: Insert the ID of the worksheet}</p>","<p>修改工作表</p>":"<p>Modify Worksheet</p>","<p>修改的工作表名称</p>":"<p>Modified worksheet name</p>","<p>修改的工作表数据</p>":"<p>Modified worksheet data</p>","<p>{ status: \\"OK\\" } 修改成功</p>":"<p>{status: \\"OK\\"} Modified successfully</p>","<p>删除工作表</p>":"<p>Delete Worksheet</p>","<p>{ status: \\"OK\\" } 删除成功</p>":"<p>{status: \\"OK\\"} Successfully deleted</p>","<p>查询某个工作表数据</p>":"<p>Query a worksheet data</p>","<p>工作表数据列表</p>":"<p>Worksheet Data List</p>","<p>根据id查询工作表数据详情</p>":"<p>Query worksheet data details based on ID</p>","<p>工作表数据ID</p>":"<p>Worksheet Data ID</p>","<p>工作表数据详情</p>":"<p>Worksheet Data Details</p>","<p>查询是否有工作表的添加权限</p>":"<p>Query if there is permission to add a worksheet</p>","<p>{ add: true } 有添加权限</p>":"<p>{add: true} has permission to add</p>","<p>新增一条工作表数据</p>":"<p>Add a new worksheet data</p>","<p>新增的工作表数据</p>":"<p>New worksheet data</p>","<p>修改工作表数据</p>":"<p>Modify worksheet data</p>","<p>修改的工作表数据ID</p>":"<p>Modified worksheet data ID</p>","<p>修改的工作表数据内容</p>":"<p>Modified worksheet data content</p>","<p>删除工作表数据</p>":"<p>Delete worksheet data</p>","<p>查询画面变量</p>":"<p>Query screen variables</p>","<p>画面变量数据</p>":"<p>Screen variable data</p>","<p>添加/修改画面变量</p>":"<p>Add/Modify Screen Variables</p>","<p>画面变量key</p>":"<p>Screen variable key</p>","<p>画面变量值</p>":"<p>Screen variable value</p>","<p>删除画面变量</p>":"<p>Delete screen variables</p>","<p>修改画面组件属性</p>":"<p>Modifying Screen Component Properties</p>","<p>画面组件key</p>":"<p>Screen component key</p>","<p>属性</p>":"<p>Properties</p>","<p>{ status: &quot;OK&quot; } 修改成功</p>":"<p>{status:&quot; OK&quot;} Successfully modified</p>","<p>{ status: &quot;OK&quot; } 删除成功</p>":"<p>{status:&quot; OK&quot;} Successfully deleted</p>"}},"zh_Hans":{"translation":{"函数名称":"函数名称","函数内容":"函数内容","备注说明":"备注说明","保存成功":"保存成功","创建函数":"创建函数","测试表":"测试表","属性":"属性","方法":"方法","画布":"画布","请输入组件名":"请输入组件名","函数":"函数","函数文档":"函数文档","插入函数":"插入函数","名称":"名称","类型":"类型","描述":"描述","定义":"定义","语法":"语法","参数":"参数","返回值":"返回值","内容":"内容","说明":"说明","复杂示例":"复杂示例","简单示例":"简单示例","【简单示例】":"【简单示例】","【复杂示例】":"【复杂示例】","示例":"示例","使用示例":"使用示例","画面":"画面","模型":"模型","系统函数":"系统函数","画面函数":"画面函数","自定义函数":"自定义函数","二次开发函数":"二次开发函数","删除成功":"删除成功","修改后，相关引用该脚本方法处均会被修改，请谨慎操作！":"修改后，相关引用该脚本方法处均会被修改，请谨慎操作！","确定":"确定","取消":"取消","删除后，相关引用该脚本方法处均会被删除，请谨慎操作！":"删除后，相关引用该脚本方法处均会被删除，请谨慎操作！","编辑函数":"编辑函数","变量":"变量","字段":"字段","数据点":"数据点","公式输入":"公式输入","变量与函数":"变量与函数","在线状态":"在线状态","数据字典":"数据字典","请输入公式，语法为JavaScript":"请输入公式，语法为JavaScript","请选择变量":"请选择变量","公式编辑":"公式编辑","文本":"文本","数字":"数字","布尔":"布尔","日期":"日期","对象":"对象","数组":"数组","工作表":"工作表","资产":"资产","用户":"用户","工作表记录":"工作表记录","公式错误":"公式错误","X轴":"X轴","Y轴":"Y轴","Z轴":"Z轴","场景":"场景","背景颜色":"背景颜色","背景贴图":"背景贴图","贴图方式":"贴图方式","全景图":"全景图","启用":"启用","颜色":"颜色","最小距离":"最小距离","最大距离":"最大距离","地平面":"地平面","材质":"材质","宽度":"宽度","高度":"高度","相机":"相机","视野角度":"视野角度","近端面距离":"近端面距离","远端面距离":"远端面距离","初始位置":"初始位置","初始方向":"初始方向","控制器类别":"控制器类别","轨道控制器":"轨道控制器","旋转":"旋转","旋转速度":"旋转速度","水平角度上限":"水平角度上限","水平角度下限":"水平角度下限","垂直角度上限":"垂直角度上限","垂直角度下限":"垂直角度下限","平移":"平移","平移速度":"平移速度","缩放":"缩放","缩放速度":"缩放速度","缩放距离上限":"缩放距离上限","缩放距离下限":"缩放距离下限","阻尼":"阻尼","阻尼因子":"阻尼因子","自动旋转":"自动旋转","自动旋转速度":"自动旋转速度","行走控制器":"行走控制器","视线高度":"视线高度","移动速度":"移动速度","下落速度":"下落速度","跳跃高度":"跳跃高度","飞行控制器":"飞行控制器","自动前进":"自动前进","快照":"快照","快照变量":"快照变量","快照列表":"快照列表","位置":"位置","方向":"方向","渲染":"渲染","色彩空间":"色彩空间","灯光":"灯光","环境光":"环境光","强度":"强度","平行光":"平行光","阴影":"阴影","半球光":"半球光","天空颜色":"天空颜色","地面颜色":"地面颜色","点光":"点光","距离":"距离","衰退量":"衰退量","聚光灯":"聚光灯","散射角度":"散射角度","衰减百分比":"衰减百分比","衰减量":"衰减量","辅助":"辅助","坐标格":"坐标格","尺寸":"尺寸","细分次数":"细分次数","中线颜色":"中线颜色","网格线颜色":"网格线颜色","坐标轴":"坐标轴","轴线长度":"轴线长度","选择器":"选择器","脚本编辑器":"脚本编辑器","请选择逻辑...":"请选择逻辑...","数值":"数值","或者":"或者","并且":"并且","恒等于":"恒等于","等于":"等于","不等于":"不等于","恒不等于":"恒不等于","取反":"取反","小于等于":"小于等于","大于等于":"大于等于","小于":"小于","大于":"大于","逻辑与":"逻辑与","逻辑或":"逻辑或","工作表数据":"工作表数据","变量列表":"变量列表","插入公式":"插入公式","全屏":"全屏","ECMAScript中函数":"ECMAScript中函数","html对dom操作的函数":"html对dom操作的函数","Web存储":"Web存储","查询工作表列表":"查询工作表列表","{ total: 总条数, items: 工作表列表 }":"{ total: 总条数, items: 工作表列表 }","<p>查询工作表列表</p>":"<p>查询工作表列表</p>","<p>{ total: 总条数, items: 工作表列表 }</p>":"<p>{ total: 总条数, items: 工作表列表 }</p>","<p>":"<p>","<p>查询条件（可选）</p>":"<p>查询条件（可选）</p>","<p></p>":"<p></p>","<p>查询条数（默认30）</p>":"<p>查询条数（默认30）</p>","<p>跳过条数（默认0）</p>":"<p>跳过条数（默认0）</p>","<p>排序</p>":"<p>排序</p>","<p>查询字段（默认name）</p>":"<p>查询字段（默认name）</p>","<p>查询条件</p>":"<p>查询条件</p>","<p>工作表名称</p>":"<p>工作表名称</p>","<p>工作表标题</p>":"<p>工作表标题</p>","<p>属性配置</p>":"<p>属性配置</p>","<p>关联画面</p>":"<p>关联画面</p>","<p>工作表权限</p>":"<p>工作表权限</p>","<p>字段规则</p>":"<p>字段规则</p>","<p>错误提示</p>":"<p>错误提示</p>","<p>同步数据</p>":"<p>同步数据</p>","<p>创建人</p>":"<p>创建人</p>","<p>创建时间</p>":"<p>创建时间</p>","<p>根据id查询工作表详情</p>":"<p>根据id查询工作表详情</p>","<p>工作表数据</p>":"<p>工作表数据</p>","<p>新增工作表</p>":"<p>新增工作表</p>","<p>新建的工作表数据</p>":"<p>新建的工作表数据</p>","<p>工作表名称（必填）</p>":"<p>工作表名称（必填）</p>","<p>工作表标题（必填）</p>":"<p>工作表标题（必填）</p>","<p>{ InsertedID: 插入工作表的ID }</p>":"<p>{ InsertedID: 插入工作表的ID }</p>","<p>修改工作表</p>":"<p>修改工作表</p>","<p>修改的工作表名称</p>":"<p>修改的工作表名称</p>","<p>修改的工作表数据</p>":"<p>修改的工作表数据</p>","<p>{ status: \\"OK\\" } 修改成功</p>":"<p>{ status: \\"OK\\" } 修改成功</p>","<p>删除工作表</p>":"<p>删除工作表</p>","<p>{ status: \\"OK\\" } 删除成功</p>":"<p>{ status: \\"OK\\" } 删除成功</p>","<p>查询某个工作表数据</p>":"<p>查询某个工作表数据</p>","<p>工作表数据列表</p>":"<p>工作表数据列表</p>","<p>根据id查询工作表数据详情</p>":"<p>根据id查询工作表数据详情</p>","<p>工作表数据ID</p>":"<p>工作表数据ID</p>","<p>工作表数据详情</p>":"<p>工作表数据详情</p>","<p>查询是否有工作表的添加权限</p>":"<p>查询是否有工作表的添加权限</p>","<p>{ add: true } 有添加权限</p>":"<p>{ add: true } 有添加权限</p>","<p>新增一条工作表数据</p>":"<p>新增一条工作表数据</p>","<p>新增的工作表数据</p>":"<p>新增的工作表数据</p>","<p>修改工作表数据</p>":"<p>修改工作表数据</p>","<p>修改的工作表数据ID</p>":"<p>修改的工作表数据ID</p>","<p>修改的工作表数据内容</p>":"<p>修改的工作表数据内容</p>","<p>删除工作表数据</p>":"<p>删除工作表数据</p>","<p>查询画面变量</p>":"<p>查询画面变量</p>","<p>画面变量数据</p>":"<p>画面变量数据</p>","<p>添加/修改画面变量</p>":"<p>添加/修改画面变量</p>","<p>画面变量key</p>":"<p>画面变量key</p>","<p>画面变量值</p>":"<p>画面变量值</p>","<p>删除画面变量</p>":"<p>删除画面变量</p>","<p>修改画面组件属性</p>":"<p>修改画面组件属性</p>","<p>画面组件key</p>":"<p>画面组件key</p>","<p>属性</p>":"<p>属性</p>","<p>{ status: &quot;OK&quot; } 修改成功</p>":"<p>{ status: &quot;OK&quot; } 修改成功</p>","<p>{ status: &quot;OK&quot; } 删除成功</p>":"<p>{ status: &quot;OK&quot; } 删除成功</p>"}}}');function D(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function E(t){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?D(Object(n),!0).forEach((function(r){(0,e.Z)(t,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):D(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var S=(0,n.lazy)((function(){return Promise.all([__webpack_require__.e(5466),__webpack_require__.e(8339),__webpack_require__.e(2621)]).then(__webpack_require__.bind(__webpack_require__,2621))})),B=(0,n.lazy)((function(){return __webpack_require__.e(9157).then(__webpack_require__.bind(__webpack_require__,9157))})),F=(0,n.lazy)((function(){return Promise.all([__webpack_require__.e(5466),__webpack_require__.e(1072),__webpack_require__.e(6586),__webpack_require__.e(5547)]).then(__webpack_require__.bind(__webpack_require__,5547))})),T=(0,n.lazy)((function(){return Promise.all([__webpack_require__.e(5466),__webpack_require__.e(1072),__webpack_require__.e(6586),__webpack_require__.e(942)]).then(__webpack_require__.bind(__webpack_require__,942))})),O=(0,n.lazy)((function(){return Promise.all([__webpack_require__.e(2716),__webpack_require__.e(2625),__webpack_require__.e(8387)]).then(__webpack_require__.bind(__webpack_require__,4657))})),I=(0,n.lazy)((function(){return Promise.resolve().then(__webpack_require__.bind(__webpack_require__,5546))})),_=(0,n.lazy)((function(){return __webpack_require__.e(6984).then(__webpack_require__.bind(__webpack_require__,6984))})),R=(0,n.lazy)((function(){return __webpack_require__.e(1719).then(__webpack_require__.bind(__webpack_require__,6331))}));r().use({name:"iot.editor",locales:C,components:{CodeEditor:S,"CodeEditor.JsonLogicEditor":B,"CodeEditor.FormulaLogicEditor":F,"CodeEditor.DataFieldEditor":T,"CodeEditor.ApiDocEditor":O,"CodeEditor.VariableEditor":I,"CodeEditor.AddFunction":R},schema_converter:[function(e,t,r){return"model-logic"==t.fieldType&&(e.type="model_logic"),e}],form_fields:{model_logic:{component:_}},functionList:E(E({},m.Z),v),routers:{"/app/":{path:"editor",breadcrumbName:"编辑器调试",component:function(){var e=a().useRef(null),t=a().useState([{text:""},{type:"variable",children:[{text:""}],variable:{path:"sceneConfig",type:"object",title:"场景"}},{text:""}]),r=(0,o.Z)(t,2),n=r[0],i=r[1],l=a().useState(null),u=(0,o.Z)(l,2),d=u[0],m=(u[1],a().useState(null)),p=(0,o.Z)(m,2),b=p[0],g=(p[1],a().useState(!1)),f=(0,o.Z)(g,2),h=f[0],v=f[1];return a().createElement(a().Fragment,null,a().createElement(s.default,{ref:e,style:{marginLeft:"20px",marginTop:"20px",backgroundColor:"#E8E8E8",width:"400px",height:"30px",lineHeight:"30px"},schema:c,value:n,panelVisible:h,onChange:function(e){i(e),console.log(e,"formula")},notfocusedShow:!0,attrExt:["SQL"]}),a().createElement("button",{onClick:function(){v(!h)}},"开启关闭"),a().createElement("div",{style:{marginTop:"300px"}},"输出值：",JSON.stringify(n)),a().createElement("div",null,"变量：",JSON.stringify(null==d?void 0:d.variable),"， 变量位置：",JSON.stringify(null==d?void 0:d.variableLocation),"， 函数：",JSON.stringify(null==d?void 0:d.functionText),"， 函数位置：",JSON.stringify(null==d?void 0:d.functionLocation)),a().createElement("div",null,"输出公式：",JSON.stringify(null==b?void 0:b.expression)),a().createElement("div",null,"预期值：",JSON.stringify(null==b?void 0:b.result)),a().createElement("div",null,"预期类型：",JSON.stringify(null==b?void 0:b.type)))}}},hooks:w})})()})();
//# sourceMappingURL=index.js.map