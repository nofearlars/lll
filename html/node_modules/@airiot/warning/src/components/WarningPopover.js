import moment from 'moment';
import React from 'react';
import { Button, Popover, Typography, message } from 'antd';
import { app, use } from 'xadmin';
import { ModelWrap } from 'xadmin-model';
import { Icon } from 'xadmin-ui';
import WarningFields from './WarningFields';
const { Text, Link } = Typography

const WarningPopover = ({ item, callback, ...extProps }) => {
  const [ status, setStatus ] = React.useState(item?.status)
  const { t:_t1, i18n } = useI18n()
  let getItems = () => null;
  let saveItem = () => null
  try {
    getItems = use('model.getItems')?.getItems
  } catch { }
  const { confirm } = use('warnings.confirm')
  const setCount = use('warning.tabBadge')
  const department = item && item.department && item.department
  const departmentName = department && department.map(item => item.name).toString()
  const { settings } = use('settings')
  const type = settings?.warning?.warningkind || []
  let warnType;
  if (item) {
    if (_.isString(item.type)) {
      const types = type.filter(item => item.id == item.type) || []
      const val = types && types.length > 0 ? types[0]['name'] : item.type
      warnType =  val && val.indexOf('-') > 0 ? '' : val || ''
    } else if (_.isArray(item.type) && _.isArray(type)) {
      let arr = type.filter(val => item.type.some(ele => ele === val.id))
      warnType = arr?.length ? arr.map(item => item?.name).join(',') : ''
    }
  } else {
    warnType = ''
  }

  React.useEffect(() => {
    setStatus(item?.status)
  }, [ item?.status  ])

  const handleConfirm = () => {
    confirm().then(res => {
      if (res) {
        setStatus('已确认')
        message.success('报警信息已确认')
        item.processed == '已处理' && setCount && setCount()
      }
    })
  }
 
  return item && item.tableData ? (
    <div {...extProps}>
      <div className="warning-info">
        {/* <div><b>报警ID</b>: <Text mark>{item.id}</Text></div> */}
        <div><b>{_t1('报警时间')}</b>: { item?.time ? moment(item.time).format('YYYY-MM-DD HH:mm:ss') : ''}</div>
        <div><b>{_t1('报警部门')}</b>: {departmentName}</div>
        <div><b>{_t1('报警设备')}</b>: {item?.tableData?.name || item?.tableData?.title || item?.tableData?.id}</div>
        <div><b>{_t1('报警级别')}</b>: {item.level}</div>
        <div><b>{_t1('报警类型')}</b>: {warnType ? warnType : ''}</div>
        {item.confirmUser ? (
          <div><b>{_t1('处理人')}</b>: <Icon name="user" /> {item.confirmUser.name}</div>
        ) : null}
        {item.confirmTime ? (
          <div><b>{_t1('处理时间')}</b>: {moment(item.confirmTime).format('YYYY-MM-DD hh:mm:ss')}</div>
        ) : null}
        {item.fields ?
          <WarningFields item={item} value={item.fields} callback={callback} wrap={({ children }) => <div className="warning-fields"><b>{_t1('报警数据')}</b>: {children}</div>} />
          : null}
        <div style={{ textAlign: 'center' }}>
          {(status == '未确认' || !status) ? <Button onClick={handleConfirm}>{_t1('确认报警')}</Button> : <Button disabled>{_t1('报警已确认')}</Button>}
        </div>
      </div>
    </div>
  ) : null
}

export default WarningPopover
