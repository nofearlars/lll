import React from 'react';
import _ from 'lodash';
import { HasPermission } from 'xadmin-auth';
import { C, Icon } from 'xadmin-ui';
import { Model } from 'xadmin-model';
import { Badge, Menu, Card, Tag, Select, Checkbox, Tooltip, Form, Typography, Row, Col, Button, message, Spin, InputNumber } from 'antd';
import WarningMain from './../../components/WarningMain'
import WarningAudio from './../../components/WarningAudio'
import Notification from './../../dashboard/Notification'
import WarningBar from './../../components/WarningBar'
import app, { StoreWrap, config, api } from 'xadmin';

const WaringMenuItem = () => {
  const { t:_t1, i18n } = useI18n()
  const [warning_data, setWarning_Data] = use('warning.data')
  const [items] = use('warning.unread')
  React.useEffect(() => {
    setWarning_Data(warning_data)
  }, [warning_data])

  return (
    <a onClick={() => app.go('/app/model/Warning/list')}>
      {items && items.length ? <Icon type="bell" style={{ color: 'red' }} /> : <Icon type="bell" style={{ color: 'green' }} />}
      <span className="nav-text">{_t1('报警处理')} <Badge count={items.length} /></span>
    </a>
  )
}
const blocks = {
  //'topmenu': () => <Menu.Item key="warnings"><WaringMenuItem /></Menu.Item>,
  'dashboard.main': () => (
    <Card bodyStyle={{ padding: 15 }} title={_t1("最新报警信息")}>
      <Model name="Warning"  >
        <C is="Model.DataTable" size="small" /> <br></br>
        <div key="model-list-subnav" style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '.5rem' }}>
          <C is="Model.Pagination" />
          <C is="Model.ListSubMenu" />
        </div>
      </Model>
    </Card>
  ),
  'mainmenu': () => (
    <HasPermission FailureComponent={null} permission="warning.view">
      <WaringMenuItem />
    </HasPermission>
  ),
  'main': () => {
    // URL 参数中 loadwarning = false, 控制不加载报警模块
    const str = window.location.href?.split('?')?.[1]
    let loadwarning = true
    if (str) {
      str.split('&')?.forEach(item => {
        if (item.split('=')?.[0] === 'loadwarning' && item.split('=')?.[1] === 'false') {
          loadwarning = false
        }
      })
    }
    return (
      <>
        <WarningMain />
        {
          loadwarning && (
            <HasPermission FailureComponent={null} permission="warning.view" >
              <WarningAudio />
              <WarningBar />
              <Notification />
            </HasPermission>
          )
        }
      </>
    )
  }
}

export default blocks