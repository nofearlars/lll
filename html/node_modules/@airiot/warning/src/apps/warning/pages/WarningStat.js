import { Button, List, Modal, Tag, Tooltip } from 'antd'
import _ from 'lodash'
import React, { useState } from 'react'
import { use } from 'xadmin'
import { useSetRecoilState } from 'recoil'

const WarningStat = props => {
  const { t:_t1, i18n } = useI18n()
  const [ show, setShow ] = useState(false)
  let [ stat, setStat ] = use('warning.stat')
  const { atoms } = use('model')
  const setWheres = useSetRecoilState(atoms.wheres)

  const statData = stat?.length ? _.clone(stat) : []
  const statFilter = statData && statData?.filter(item=> item.name && item?.count)

  const onClick = (vs) =>{
    setWheres({ filter: { ...vs } })
    setShow(false)
  }

  const showModal = () => {
    setShow(true)
  }
  
  const  hiddleModal = () => {
    setShow(false)
  }

  return (
    statFilter&&statFilter.length ? (
      <>
        <Modal title={_t1("设备报警信息统计")} visible={show} footer={null} onCancel={()=>{hiddleModal()}}>
          <List
            header={<div style={{ display:'flex' }}><span style={{ 'flex':1 }}>{_t1('设备信息')}</span><span style={{ 'flex':1, textAlign:'right' }}>{_t1('报警总数量')}</span></div>}
            bordered
            dataSource={statFilter}
            renderItem={item => (<List.Item onClick={()=>{onClick({ tableId: item.id })}} style={{ display: 'flex', cursor: 'pointer' }} >
              <span style={{ flex: 1, textAlign: 'left' }}>{_t1(item.name)}</span>
              <Tag style={{ display: 'inline-block' }}>{item.count}</Tag>
            </List.Item>)}
          />
        </Modal>
        <Tooltip title={_t1("按设备表统计各个设备表下设备信息产生报警的数量")}>
          <Button onClick={()=>{showModal()}}>{_t1('报警统计')}</Button>
        </Tooltip>
      </>
    ): ''
  )

}

export default WarningStat
