import React from 'react'
import { AutoComplete, Popover, Button } from 'antd'
import { api, use } from 'xadmin'
import { _t } from 'xadmin-i18n'
import { Icon } from 'xadmin-ui'

const ItemEditForm = props => {

  const { item, value, onClose } = props
  const { saveItem } = use('model.save')
  const [remark, setRemark] = React.useState(null)
  const [options, setOptions] = React.useState([])
  const [loading, setLoading] = React.useState(false)

  React.useEffect(() => {
    const desc = item && item.desc
    if (desc) {
      setLoading(true)
      const query = encodeURIComponent(JSON.stringify({
        sort: { time: -1 },
        skip: 0,
        limit: 5,
        project: { desc: 1, remark: 1 },
        'filter': {
          desc,
          '$and': [
            { 'remark': { '$exists': true } },
            { 'remark': { '$ne': '' } }
          ]
        }
      }))
      api({ name: 'warning/warning' })
        .fetch(`?query=${query}`, {})
        .then(({ json }) => {
          setOptions(json.map(item => ({ ...item, value: item.remark })).filter(f => f.value && f.value != ' '))
          setLoading(false)
        })
        .catch(err => {
          // 
        })
      // 
    }
  }, [])

  const onChange = value => setRemark(value)
  const onSubmit = () => {
    saveItem({ ...item, remark, __partial__: true }).then(res => {
      onClose()
    })
  }
  const defaultValue = item?.remark || ''
  return (
    <>
      <AutoComplete
        style={{ width: 200 }}
        defaultValue={defaultValue}
        options={options}
        onSelect={onChange}
        onChange={onChange}
        loading={loading}
      />
      <Button onClick={onSubmit}>修改</Button>
    </>
  )
}

const EditRemark = props => {
  const { item, value, wrap: RawWrapComponent } = props
  const [edit, setEdit] = React.useState(false)

  return (
    <Popover
      content={(<ItemEditForm item={item} onClose={() => setEdit(false)} />)}
      trigger="click"
      onVisibleChange={setEdit}
      visible={edit}
      placement="right" >
      <RawWrapComponent {...props} style={{ cursor: 'pointer' }}>{value || <span class="text-muted">{_t('Null')}</span>} <Icon type="edit" /></RawWrapComponent>
    </Popover>
  )
}

export default EditRemark
