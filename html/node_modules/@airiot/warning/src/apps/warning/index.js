import app from 'xadmin';
import { dashboardWidgets } from './../../dashboard'
import WarningSetting from './views/WarningSetting'

import models, { modelActions } from './models'
import hooks from './../../hooks'
import blocks from './blocks'
import mappers from './mappers'
import { useRecoilState, useRecoilValue, useSetRecoilState, RecoilRoot } from 'recoil'

import WarningModel from './../../dashboard/Notification'
import WarningButton from '../../components/WarningButton'
import KindSelect from './pages/KindSelect'
import shareComponents from './../../shareComponents'
import locales from './../../../locales'

// parent: 'scada',
export default {
  name: 'airiot.warning',
  icons: { name: 'Warning', url: require('./../../icon/warning.svg') },
  locales,
  menuItems: [
    {
      title: _r('报警管理'), icon: 'Warning', key: 'warning', permission: 'warning.view', children: [
        { title: _r('通用配置'), url: '/app/currency_setting', icon: 'Warning', permission: 'warning.view' },
        { title: _r('规则管理'), url: '/app/model/Rule/list', icon: 'Warning', permission: 'rule.view' },
        { title: _r('报警处理'), url: '/app/model/Warning/list', icon: 'Warning', permission: 'warning.view' }
      ]
    }
  ],
  frontMenuItems: [
    { title: _r('报警处理'), url: '/app/model/Warning/list', icon: 'Warning', permission: 'warning.view' },
  ],
  // components: {
  //   WarningPopover,
  //   'Warning.BellButton': WarningButton,
  //   'Warning.Audio': WarningAudio,
  //   'Warning.Bar': WarningBar,
  //   WarningType, TimeRanges, ProcessedSelect, StatusSelect,
  //   Notification, WarningExportBtn, KindSelect
  // },
  components: shareComponents,
  dashboardWidgets,
  routers: {
    '/app/': [
      // {
      //   path: 'warning/upload',
      //   breadcrumbName: '上传文件',
      //   component: UploadPage
      // },
      {
        path: 'currency_setting',
        breadcrumbName: '通用配置',
        component: WarningSetting
      },
      {
        path: 'a',
        breadcrumbName: '通用配置',
        component: props => <RecoilRoot><WarningButton {...props} /></RecoilRoot>
      }
    ]
  },
  mappers,
  blocks,
  models,
  hooks,
  schema_converter: [(f, schema, options) => {
    if (schema.type === 'array' && schema.fieldType == 'warningType') {
      f.type = 'warning_type'
    }
    return f
  }],
  form_fields: {
    warning_type: {
      component: KindSelect
    }
  },
  modelActions
}
