import React from 'react';
import { ModelWrap } from 'xadmin-model';
import { app, use, api } from 'xadmin';
import { Button, Popconfirm, Tooltip, message } from 'antd';
import { HasPermission } from 'xadmin-auth';
import { Icon, C, Loading } from 'xadmin-ui';

import _ from 'lodash'
import { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'
import { _t } from 'xadmin-i18n'

// @ModelWrap('warning.restrain.btn', {
//   method: {
//     toggleWarning: ({ dispatch, model }, { item }) => () => {
//       if (item && item.node) {
//         const node = item.node
//         if (node == undefined || node.id == undefined) return
//         const restrainWarning = node.warning ? node.warning.restrainWarning : false
//         new Promise((resolve, reject) => {
//           // dispatch({
//           //   model: app.get('models').Node,
//           //   type: 'SAVE_ITEM',
//           //   item: { id: node.id, 'warning.restrainWarning': !restrainWarning },
//           //   promise: { resolve, reject },
//           //   message: restrainWarning ? '取消报警抑制' : '抑制报警成功'
//           // })
//         }).then(node => {
//           // dispatch({ model, type: 'GET_ITEMS' })
//         })
//       }
//     }
//   }
// })

const WarningRestrainBtn = props => {
  const { t:_t1, i18n } = useI18n()
  const { item } = props 
  const { getItems } = use('model.getItems')

  let restrainWarning
  if (item && item.tableData) {
    restrainWarning = (item.tableData && item?.tableData?._settings?.warning?.restrainWarning) ? item?.tableData?._settings?.warning?.restrainWarning : false
  }

  const toggleWarning = () => {
    if (item && item.tableData) {
      const tableData = item.tableData
      if (tableData == undefined || tableData.id == undefined) return
      const restrainWarning = tableData?._settings?.warning ? item?.tableData?._settings?.warning?.restrainWarning : false
      new Promise((resolve, reject) => {
        api({ name: `core/t/record` }).fetch('', {
          method: 'POST', body: JSON.stringify({ tableData: { id: tableData?.id }, 
            tableInfo: { id: tableData._table, title: tableData?._table },
            'warning.restrainWarning': !restrainWarning  })
        }).then(res => {
          message.success(restrainWarning ? _t1('取消报警抑制') : _t1('抑制报警成功'))
          getItems()
        })  
        // dispatch({
        //   model: app.get('models').Node,
        //   type: 'SAVE_ITEM',
        //   item: { id: node.id, 'warning.restrainWarning': !restrainWarning },
        //   promise: { resolve, reject },
        //   message: restrainWarning ? '取消报警抑制' : '抑制报警成功'
        // })
      }).then(node => {
        getItems()
      })
    }
  }

  return (
    <Tooltip title={restrainWarning ? _t1('报警抑制中，点击开启报警') : _t1('报警开启中，点击抑制报警')}>
      <Button size="small" onClick={toggleWarning}>{restrainWarning ? <Icon name="close" /> : <Icon name="bell" />}</Button>
    </Tooltip>
  )
}

export default WarningRestrainBtn