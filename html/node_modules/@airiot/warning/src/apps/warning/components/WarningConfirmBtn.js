import React from 'react';
import { ModelWrap } from 'xadmin-model';
import { app, use, api } from 'xadmin';
import { Button, Popconfirm, message } from 'antd';
import { HasPermission } from 'xadmin-auth';

import _ from 'lodash'
import { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil'
import { _t } from 'xadmin-i18n'


const WarningConfirmBtn = ({ item }) => {
  const setCount = use('warning.tabBadge')
  let getItems = () => null;
  let saveItem = () => null
  try {
    getItems = use('model.getItems')?.getItems
  } catch { }
  const { confirm } = use('warnings.confirm')
  const { t: _t1, i18n } = useI18n()

  const handleConfirm = () => {
    confirm().then(res => {
      if (res) {
        getItems()
        message.success('报警信息已确认')
        item.processed == '已处理' && setCount && setCount()
      }
    })
  }

  if (!item) return ''
  if (item && 'handle' in item && item.handle == false) {
    return <HasPermission FailureComponent={null} permission="warning.edit"> <Button size="small" disabled={true}>{_t1('无需确认')}</Button></HasPermission>
  } else {
    if (item.status == undefined || item.status == '未确认') {
      return (
        <HasPermission FailureComponent={null} permission="warning.edit">
          <Popconfirm title={_t1("是否确认报警？")} onConfirm={handleConfirm
          //   () => {
          //   const confirmItems = confirm(item)
          //   // setUnread_warning(confirmItems)
          // }
          } okText={_t1("确认")} cancelText={_t1("取消")}>
            <Button size="small" type="primary" style={{ padding: '0 12.1px' }}>{_t1('确认')}</Button>
          </Popconfirm>
        </HasPermission>
      )
    }
  }
  return <HasPermission FailureComponent={null} permission="warning.edit"><Button size="small" disabled={true}>{item.status}</Button></HasPermission>

}

export default WarningConfirmBtn