import React from 'react';
import _ from 'lodash';
import { app, use } from 'xadmin';
import { C, } from 'xadmin-ui';
import { fieldBuilder, objectBuilder } from 'xadmin-form';
import { Tabs, Button, Input, InputNumber, Space, Select, Popconfirm, Form, Checkbox, Radio, Row, Col, Tooltip } from 'antd';
import { SchemaForm } from 'xadmin-form';
import { QuestionCircleOutlined } from '@ant-design/icons'

const WarnRulesRender = props => {
  const { t:_t1, i18n } = useI18n()
  const { option, fields } = props
  // const { fields, option, values, emulator } = use('form', props, state => ({
  //   values: state.values
  // }))
  const { values } = use('form', state => ({ values: state.values }))
  const baseFields = fields.filter(item => item?.schema.driver == 'base')
  const tipFields = fields.filter(item => item?.schema.driver == 'tip')
  const seniorFields = fields.filter(item => item?.schema.driver == 'senior')
  const otherFields = fields.filter(item => !item?.schema.driver && (item?.schema.driver != 'base' || item?.schema.driver != 'tip' || item?.schema.driver != 'senior'))

  const style= {
    fontSize: 14,
    fontWeight: 'bold',
    marginBottom: '.5rem',
    textAlign: 'center'
  }

  return (
    <>
      <Row><Col className='ant-col-xs-24 ant-col-sm-5' style={style}>{_t1('基础配置')}</Col><Col></Col></Row>
      {
        baseFields.map(field => {
          return fieldBuilder(field, option)
        })
      }
      <Row><Col className='ant-col-xs-24 ant-col-sm-5' style={style}>{_t1('提醒配置')}</Col><Col></Col></Row>
      {
        tipFields.map(field => {
          return fieldBuilder(field, option)
        })
      }
      <Row><Col className='ant-col-xs-24 ant-col-sm-5' style={style}>{_t1('高级配置')}</Col><Col></Col></Row>
      {
        seniorFields.map(field => {
          return fieldBuilder(field, option)
        })
      }
      {
        otherFields.map(field => {
          return fieldBuilder(field, option)
        })
      }
    </>
  )

}

export default WarnRulesRender 