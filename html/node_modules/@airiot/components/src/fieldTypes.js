import FilterRangeTime from "./components/FilterRangeTime"
import SelectDepartment from "./components/SelectDepartment"
import SelectTable from "./components/SelectTable"
import SelectTableRecord from "./components/SelectTableRecord"
import TagSelect from './components/TagSelect'
import { SelectTableRecordField } from './components/SelectTableRecord'

const DepartmentMultipleSelectField = (props) => {

  return <SelectDepartment {...props} multiple={true} ></SelectDepartment>
}

const DepartmentSelectField = (props) => {

  return <SelectDepartment {...props} ></SelectDepartment>
}

const TableListSelect = (props) => {
  return <SelectTable {...props} ></SelectTable>
}

const TableListSelecttMultiple = (props) => {
  return <SelectTable {...props} mode='multiple' ></SelectTable>
}

export default {
  schema_converter: [(f, schema, options) => {
    if (schema.type === 'string' && schema.format == 'date-time') {
      f.type = 'filter_datetime'
    }
    if (schema.type === 'array' && schema.fieldType == 'department') {
      f.type = 'departmentselect_multip'
    }
    if (schema.type === 'string' && schema.fieldType == 'department') {
      f.type = 'departmentselectId'
    }
    if (schema.type === 'object' && schema.fieldType == 'department') {
      f.type = 'departmentselect'
    }
    if (schema.type === 'object' && schema.fieldType == 'tableData') {
      f.type = 'tableData'
    }
    if (schema.type === 'array' && schema.fieldType == 'tableData') {
      f.type = 'tableData_multip'
    }
    if (schema.type === 'object' && schema.fieldType == 'table') {
      f.type = 'tableselect'
    }
    if (schema.type === 'array' && schema.fieldType == 'table') {
      f.type = 'tableselect_multip'
    }
    if (schema.fieldType == 'tags-select') {
      f.type = 'tagsselect'
    }
    return f
  }],
  filter_converter: [(f, schema, options) => {
    if (schema.type === 'string' && schema.format == 'date-time') {
      f.type = 'filter_datetime'
    }
    if (schema.type === 'array' && schema.fieldType == 'department') {
      f.type = 'departmentselect_multip'
    }
    if (schema.type === 'object' && schema.fieldType == 'department') {
      f.type = 'departmentselect'
    }
    if (schema.type === 'object' && schema.fieldType == 'tableData') {
      f.type = 'tableData'
    }
    if (schema.type === 'object' && schema.fieldType == 'table') {
      f.type = 'tableselect'
    }
    return f
  }],
  form_fields: {
    filter_datetime: {
      component: FilterRangeTime
    },
    // 部门多选
    departmentselect_multip: {
      component: DepartmentMultipleSelectField
    },
    departmentselect: {
      component: DepartmentSelectField
    },
    tableselect: {
      component: TableListSelect
    },
    tableselect_multip: {
      component: TableListSelecttMultiple
    },
    // 数据点选择
    tagsselect: {
      component: TagSelect
    },
    tableData: {
      component: SelectTableRecordField
    },
    tableData_multip: {
      component: props => <SelectTableRecordField {...props} multiple={true} />
    },
  },
  components: {
    FilterRangeTime,
    DepartmentMultipleSelectField,
    SelectTableRecordField,
    TableListSelect,
    TableListSelecttMultiple,
    TagSelect,
  }
}