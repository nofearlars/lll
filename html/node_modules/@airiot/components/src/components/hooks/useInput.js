const toArray = (value) => {
  if (_.isArray(value)) {
    return value
  } else {
    return []
  }
}

const useInput = (props) => {
  const { input={}, onlyId, multiple, list } = props

  const { value, onChange } = input

  const _onChange = (value) => {
    if (onlyId) {
      onChange(value)
    } else {
      if (multiple) {
        onChange((value || []).map(v => {
          return list.find(item => item?.id === v)
        }).filter(item => item))
      } else {
        onChange(list.find(item => item?.id === value))
      }
    }
  }

  const _value = onlyId ? (multiple ? toArray(value) : value) : (
    multiple ? (
      toArray(value).map(item => item?.id)
    ) : (
      value?.id
    )
  )

  const onClear = () => {
    onChange(multiple ? [] : null)
  }

  return {
    onChange: _onChange,
    value: _value,
    onClear
  }
}

export default useInput
