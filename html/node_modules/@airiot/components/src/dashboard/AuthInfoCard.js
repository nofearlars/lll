import React, { useState, useEffect } from 'react'
import { api } from 'xadmin'
import { Icon } from 'xadmin-ui'
import { Card, Row, Col, Progress } from 'antd'
import { EchartPie, EchartGauge } from './components/ECharts'


const AuthInfoCard = () => {
  const [data, setData] = React.useState(null)
  const [AuthData, setAuthData] = React.useState(null)

  const { t:_t1 } = useI18n()

  useEffect(() => {
    api({ name: 'core/license' }).fetch('', {})
      .then(({ json }) => {
        if (json) setData(json)
      })
    api({ name: 'core/auth/license' }).fetch('', {})
      .then(({ json }) => {
        if (json) setAuthData(json)
      })
  }, [])

  function getLocalTime(nS) {
    return new Date(parseInt(nS) * 1000).toLocaleString().replace(/:\d{1,2}$/, ' ');
  }

  const titleSty = { fontSize: '16px', display: 'block' }
  const dataSty = { fontSize: '28px', display: 'block' }
  const datePercent = data && (data.validityPeriod / data.remainingTime).toFixed(2)
  const pointPercent = (data && AuthData && (Number(AuthData.pointCounts) / Number(data.modelNodeCounts))) * 100
  const userPercent = data && AuthData && [AuthData.userCounts, (Number(data.userCount) - Number(AuthData.userCounts))]
  return (
    <Row gutter={14}>
      <Col span={8}>
        <Card style={{ height: 250 }} >
          <span style={titleSty}>{_t1('有效时间')}:</span>
          <span style={dataSty}><Icon type="clock-circle" /> {data && (data.remainingTime +  `${_t1('天')} / ` + data.validityPeriod + _t1('天'))}</span>
          <span style={titleSty}>{_t1('创建时间')}</span>
          <span style={{ ...dataSty, marginBottom: 5, flexGrow: 1, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>
            <Icon type="check-square" /> {data && data.startTime}
          </span>
          <Progress percent={datePercent || 0} />

        </Card>
      </Col>
      <Col span={8}>
        <Card style={{ height: 250 }}>
          {/* <span style={titleSty}>用户数量</span> */}
          <span style={dataSty}><Icon type="user" /> {AuthData && data && (AuthData.userCounts + '/ ' + data.userCount)}</span>
          <div style={{ textAlign: 'center', }}>
            <EchartPie userPercent={userPercent} />
          </div>
        </Card>
      </Col>
      <Col span={8}>
        <Card style={{ height: 250 }}>
          {/* <span style={titleSty}>模型节点数</span> */}
          <span style={dataSty}><Icon type="deployment-unit" />  {AuthData && data && (AuthData.pointCounts + '/ ' + data.dataGathering?.point)}</span>
          <EchartGauge pointCounts={AuthData && AuthData.pointCounts} modelNodeCounts={data && data.dataGathering?.point} />
        </Card>
      </Col>
    </Row >
  )

}

const paramSchema = {
  type: 'object',
  properties: {},
  form: []
}
const AuthInfoCards = {
  title: _r('授权信息'),
  category: [_r('页面元素'), _r('其他')],
  icon: require('../icons/授权信息.svg'),
  component: AuthInfoCard,
  paramSchema,
  initLayout: { width: 860, height: 260 },
}

export default AuthInfoCards

