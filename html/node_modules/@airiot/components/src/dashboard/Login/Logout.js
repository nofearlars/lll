import React, { useRef } from 'react';
import { app, use } from 'xadmin';
import LogoComponent from './LogoComponent';

const Logout = props => {
  const { text, time, dashboardMode, type } = props
  const [ num, setNum ] = React.useState(time||10000)
  const timer = useRef()
  // clearTimeout
  
  const { settings = {} } = use('settings')
  let rectption_logout_page = settings?.rectption_logout_page

  
  const { t:_t1 } = useI18n()

  React.useEffect(() => {  
    timer.current = setInterval(()=>{
      setNum(num - 1000)
    },1000)   

    let a;
    if(!rectption_logout_page || type != 'front') { 
      a = setTimeout(() => {
        if(dashboardMode) return;
        if(window.location.pathname !== '/logout') {
          window.location.href = window.location.pathname
        } else {
          window.location.href = '/login'
        }
      }, time||10000)
    }

    if(num <= 0){
      clearTimeout(a)
      clearInterval(timer.current)
      setNum(time||10000)
    }
    return ()=>{
      clearInterval(timer.current)
    }
  }, [num,time])
  
  return (rectption_logout_page && type == 'front' ? <iframe src={rectption_logout_page} style={{ width: '100%', height: '100%', border: 0 }}/> :
    <div className="setGuideCard" style={{overflow: 'auto'}}>
      <div className="guideContent" style={{ width: '648px', margin: '0 auto', borderRadius: '5px'}}>
        <div style={{ maxWidth: '688px', background: 'rgba(255,255,255,.1)', padding: '28px' }}>
          <div style={{ maxWidth: '648px', background: 'rgba(255,255,255,.26)', padding: '28px'}}>
            <div className="loginGuide" >
              <div className="loginBox">
                <LogoComponent></LogoComponent>
              </div>
              <div style={{ textAlign: 'center' }}>{text || `${_t1('您已经安全退出系统')}，${num/1000}${_t1('秒后自动跳转到登录页。')}`}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

const paramSchema = {
  type: 'object',
  properties: {
    text: {
      title: _r('提示文字'),
      type: 'string'
    },
    time: {
      title: _r('跳出时间'),
      type: 'number',
      description: _r('等待几秒之后返回登录页'),
      field: {
        suffix: _r('毫秒')
      }
    }
  }
}

const LogoutComponent = {
  title: _r('退出页面组件'),
  category: [_r('页面元素'), _r('登录')],
  icon: require('../../icons/退出页面.svg'),
  component: Logout,
  initLayout: { width: 1200, height: 800 },
  initParam: { 
    box: { 
      width: 648 
    } 
  },
  paramSchema,
  theme: [
    { selector: '.content-outside', title: _r('外层') },
    { selector: '.guide-content-inside', title: _r('内层'), config: ['background', 'border'] },
  ]
}
export default LogoutComponent
