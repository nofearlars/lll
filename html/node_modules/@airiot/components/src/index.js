import app from 'xadmin'
import DemoComponents from './Demo/components'
import DemoFieldTypes from './Demo/fieldTypes'
import DemoHooks from './Demo/hooks'
import SelectTableRecord from "./components/SelectTableRecord"
import SelectTable from "./components/SelectTable"
import SelectTableSchema from './components/SelectTableSchema'
import ModelPointTable from "./components/ModelPointTable"
import PointTable from "./components/PointTable"
import FiltersHistory from './components/FiltersHistory'
import QueryEditor from './components/QueryEditor'
import MenuEditTree, { MenuItemSelect } from './components/MenuEditTree'
import TagWrap from './components/TagWrap'
import TabelSchemaTabs from './components/TabelSchemaTabs'
import { TableTreeWidgets } from './components/TableTree'
import { UploadIconField } from './components/MenuEditTree/UploadIcon'
import hooks from './hooks'

import dashboard from './dashboard'
import fieldTypes from './fieldTypes'
import model from './model'
import TableTree from './components/TableTree'
import ParamTypeSchema from './components/ParamTypeSchema'
import ClearData from './components/ClearData'

import { SettingsMenuField } from './dashboard/FrontMenu'
import locales from '../locales'

export default app
  .use({
    name: 'airiot.components',
    locales,
    components: {
      'Common.SelectTableRecord': SelectTableRecord,
      'Common.SelectTable': SelectTable,
      'Common.SelectTableSchema': SelectTableSchema,
      'Common.MenuItemSelect': MenuItemSelect,
      PointTable, MenuEditTree,
      ModelPointTable,
      FiltersHistory,
      QueryEditor,
      TagWrap,
      TabelSchemaTabs,
      UploadIconField,
      ParamTypeSchema,
      TableTree,
      SettingsMenuField,
      'Common.ClearData': ClearData,
      ...model.components
    },
    routers: {
      '/app/': [
        {
          path: 'components',
          breadcrumbName: '公共组件',
          component: DemoComponents
        },
        {
          path: 'fieldTypes',
          breadcrumbName: 'fieldTypes',
          component: DemoFieldTypes
        }
        // {
        //   path: 'hooks',
        //   breadcrumbName: 'hooks',
        //   component: DemoHooks
        // }
      ]
    },
    hooks,
    // dashboardWidgets: {
    //   TableTreeWidgets
    // }
  })
  .use(dashboard)
  .use(fieldTypes)
// .use({
//   name: 'iot.fieldWrap',
//   context: app => (context, cb) => {
//     const FieldWrap = app.get('components')['Dashboard.Form.FieldWrap']
//     if (LayoutContainer) {
//       app.get('dashboard_widgets')['model.3d.layout3d'] = FieldWrap(LayoutContainer)
//     }
//     cb(null, context)
//   }
// })