import React from 'react'
import { C } from 'xadmin-ui'
import _ from 'lodash'
import useChart from '../../components/useChart'
import { initLayout, defaultSchema } from '../common/base'
import { SelectBtn } from '../../components/EchartSchemaForm/schema'
import MapSelect from '../common/MapSelect'

const scatterDafaultData = {
  source:[
    [10.0, 8.04],
    [8.07, 6.95],
    [13.0, 7.58],
    [9.05, 8.81],
    [11.0, 8.33],
    [14.0, 7.66],
    [13.4, 6.81],
    [10.0, 6.33],
    [14.0, 8.96],
    [12.5, 6.82],
    [9.15, 7.2],
    [11.5, 7.2],
    [3.03, 4.23],
    [12.2, 7.83],
    [2.02, 4.47]
  ]
}
 
const seriesOption = {
  base: {
    title: _r('基础'),
    type: 'object',
    properties: {
      name: {
        title: _r('名称'),
        type: 'string',
        description: _r('系列名称，用于tooltip的显示，legend 的图例筛选'),
      },
      color: {
        title: _r('颜色'),
        type: 'string',
        fieldType: 'color'
      },
      large: {
        type: 'boolean',
        title: _r('数据量优化')
      },
      largeThreshold: {
        type: 'number',
        title: _r('优化阈值')
      },
      progressive: {
        type: 'number',
        title: _r('图形数量')
      },
      progressiveThreshold: {
        type: 'number',
        title: _r('数量阈值')
      },
      seriesLayoutBy: {
        type: 'string',
        title: _r('系列排布'),
        enum: ['column', 'row'],
        enum_title: [_r('列'), _r('行')],
        field: { component: SelectBtn }
      },
      datasetIndex: {
        title: _r('数据集编号'),
        type: 'number',
        description: _r('选定外层数据容器或者自身数据的某个数据集进行数据展示')
      },
      encode: {
        title: _r('数据映射'),
        type: 'object',
        properties: {
          value: {
            title: _r('映射字段'),
            type: 'number',
            field: {
              component: MapSelect
            }
          },
          itemId: {
            title: _r('数据项ID'),
            type: 'number'
          },
          itemName: {
            title: _r('数据项名字'),
            type: 'number'
          }
        }
      }
    }
  },
  style: {
    title: _r('样式'),
    type: 'object',
    properties: {
      symbolSize: {
        title: _r('散点大小'),
        type: 'number',
      },
      symbol: {
        title: _r('散点图形'),
        type: 'string',
        enum: ['circle', 'rect', 'roundRect', 'triangle', 'diamond', 'pin', 'arrow', 'none'],
        enum_title: [_r('圆'), _r('方形'), _r('圆角方形'), _r('三角形'), _r('菱形'), 
          _r('点'), _r('箭头'), _r('无')],
        description: _r('设定数据点的标记处显示的形状')
      },
    }
  }
}

const echartOption = {
  seriesOption
}

const chart_scatter = {
  title: _r('散点图'),
  category: [_r('数据图表'), _r('散点图')],
  icon: require('../../svg/newIcons/散点图.svg'),
  component: props => useChart({ ...props }),
  initLayout,
  initParam: {
    option: {
      series: [{ type: 'scatter' }],
      xAxis: { show: true, axisLine: { lineStyle: { color: '#333' } } },
      yAxis: { show: true, type: 'value', axisLine: { lineStyle: { color: '#333' } } },
      dataset: scatterDafaultData
    }
  },
  echartOption,
  paramSchema: {
    type: 'object',
    properties: {
      ...defaultSchema
    }
  }
}

export default chart_scatter
export { seriesOption, echartOption }
