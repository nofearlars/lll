import _ from 'lodash'
import { api, app, use } from 'xadmin';
import React, { useState } from 'react'
import { C, Icon } from 'xadmin-ui'
import { Button, Modal, Form, Input } from 'antd'

const initLayout = { width: 400, height: 250 }

const chartDafaultData = {
  dimensions: [null, 'A', 'B', 'C'],
  source: [
    ['一月', 6230, 2820, 4302],
    ['二月', 7332, 2932, 3812],
    ['三月', 6031, 2901, 3421],
    ['四月', 5334, 2934, 4222],
    ['五月', 8390, 2290, 6990],
    ['六月', 6330, 2330, 4212]
  ]
}

const ChartCodeEditor = ({ input, label, field }) => {
  const [visible, setVisible] = React.useState(false)

  const [code, setCode] = React.useState(input.value || `codeOption = {
  // 和配置 option 融合
  // backgroundColor: 'red'
}`)

  React.useEffect(() => {
    input.value && setCode(input.value)
  }, [input.value])

  const options = {
    roundedSelection: false,
    readOnly: false,
    minimap: { enabled: false },
    cursorStyle: 'line',
    automaticLayout: false,
    ...(field.editor || {})
  }

  return (
    <>
      <Button type="default" size="small" onClick={e => setVisible(true)}><Icon type="code" />{_t1("编辑代码")}</Button>
      <Modal
        title={label}
        open={visible}
        maskClosable={false}
        width="80%"
        onOk={e => {
          input.onChange(code)
          setVisible(false)
        }}
        onCancel={e => setVisible(false)}
      >
        <C is="CodeEditor"
          language={'javascript'}
          value={code}
          width="100%"
          height="600"
          options={options}
          onChange={setCode}
        />
      </Modal>
    </>
  )
}

const AIBridge = props => {
  const AIRecoilBridge = app?.context?.AIRecoilBridge
  if (AIRecoilBridge) {
    return <AIRecoilBridge>{props.children}</AIRecoilBridge>
  }
  return props.children
}

const defaultSchema = {
  chartData: {
    title: _r('图表数据'),
    type: 'string',
    fieldType: 'compute'
  },
  chartCode: {
    title: _r('图表代码'),
    type: 'string',
    unbind: true,
    field: { component: props => <AIBridge><ChartCodeEditor {...props} /></AIBridge> }
  }
}

export { initLayout, chartDafaultData, defaultSchema }
