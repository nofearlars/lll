import _ from 'lodash'

function getTheme(theme) {

  var axis = {
    axisLine: {
      show: theme.axes.axisLineShow,
      lineStyle: {
        color: theme.axes.axisLineColor
      }
    },
    axisTick: {
      show: theme.axes.axisTickShow,
      lineStyle: {
        color: theme.axes.axisTickColor
      }
    },
    axisLabel: {
      show: theme.axes.axisLabelShow,
      color: theme.axes.axisLabelColor
    },
    splitLine: {
      show: theme.axes.splitLineShow,
      lineStyle: {
        color: theme.axes.splitLineColor
      }
    },
    splitArea: {
      show: theme.axes.splitAreaShow,
      areaStyle: {
        color: theme.axes.splitAreaColor
      }
    }
  };

  var seriesStyle = {
    itemStyle: {
      borderWidth: theme.symbolBorderWidth
    },
    lineStyle: {
      width: theme.lineWidth
    },
    symbolSize: theme.symbolSize,
    symbol: theme.symbol,
    smooth: theme.lineSmooth
  }

  var itemStyle = {
    borderWidth: theme.borderWidth,
    borderColor: theme.borderColor
  }
  var border = {
    itemStyle: itemStyle
  };
  var map = {
    itemStyle: {
      areaColor: theme.mapAreaColor,
      borderColor: theme.mapBorderColor,
      borderWidth: theme.mapBorderWidth
    },
    label: {
      color: theme.mapLabelColor
    },
    emphasis: {
      itemStyle: {
        areaColor: theme.mapAreaColorE,
        borderColor: theme.mapBorderColorE,
        borderWidth: theme.mapBorderWidthE
      },
      label: {
        color: theme.mapLabelColorE
      }
    }
  };

  return {
    color: theme.color,
    backgroundColor: 'transparent',
    textStyle: theme.textColorShow ? {
      color: theme.textColor
    } : {},
    title: {
      textStyle: {
        color: theme.titleColor
      },
      subtextStyle: {
        color: theme.subtitleColor
      }
    },
    line: seriesStyle,
    radar: seriesStyle,
    bar: (function () {
      var itemStyle = {
        barBorderWidth: theme.borderWidth,
        barBorderColor: theme.borderColor
      };
      return {
        itemStyle: itemStyle
      };
    })(),
    pie: border,
    scatter: border,
    boxplot: border,
    parallel: border,
    sankey: border,
    funnel: border,
    gauge: border,
    candlestick: (function () {
      var itemStyle = {
        color: theme.kColor,
        color0: theme.kColor0,
        borderColor: theme.kBorderColor,
        borderColor0: theme.kBorderColor0,
        borderWidth: theme.kBorderWidth
      };
      return {
        itemStyle: itemStyle
      };
    })(),
    graph: (function () {
      var style = _.cloneDeep(seriesStyle);
      style.color = theme.color;
      var lineStyle = {
        width: theme.graphLineWidth,
        color: theme.graphLineColor
      };
      var textStyle = {
        color: theme.markTextColor
      };
      style.lineStyle = lineStyle;
      style.label = textStyle;
      var itemStyle = style.itemStyle;
      itemStyle.borderWidth = theme.borderWidth;
      itemStyle.borderColor = theme.borderColor;
      return style;
    })(),
    map: map,
    geo: map,
    categoryAxis: axis,
    valueAxis: axis,
    logAxis: axis,
    timeAxis: axis,
    toolbox: {
      iconStyle: {
        borderColor: theme.toolboxColor
      },
      emphasis: {
        iconStyle: {
          borderColor: theme.toolboxEmphasisColor
        }
      }
    },
    legend: {
      textStyle: {
        color: theme.legendTextColor
      }
    },
    tooltip: {
      axisPointer: {
        lineStyle: {
          color: theme.tooltipAxisColor,
          width: theme.tooltipAxisWidth
        },
        crossStyle: {
          color: theme.tooltipAxisColor,
          width: theme.tooltipAxisWidth
        }
      }
    },
    timeline: {
      lineStyle: {
        color: theme.timelineLineColor,
        width: theme.timelineLineWidth
      },
      itemStyle: {
        color: theme.timelineItemColor,
        borderWidth: theme.timelineItemBorderWidth
      },
      controlStyle: {
        color: theme.timelineControlColor,
        borderColor: theme.timelineControlBorderColor,
        borderWidth: theme.timelineControlBorderWidth
      },
      checkpointStyle: {
        color: theme.timelineCheckColor,
        borderColor: theme.timelineCheckBorderColor
      },
      label: {
        color: theme.timelineLabelColor
      },
      emphasis: {
        itemStyle: {
          color: theme.timelineItemColorE
        },
        controlStyle: {
          color: theme.timelineControlColor,
          borderColor: theme.timelineControlBorderColor,
          borderWidth: theme.timelineControlBorderWidth
        },
        label: {
          color: theme.timelineLabelColor
        }
      }
    },
    visualMap: {
      color: theme.visualMapColor
    },
    dataZoom: {
      backgroundColor: theme.datazoomBackgroundColor,
      dataBackgroundColor: theme.datazoomDataColor,
      fillerColor: theme.datazoomFillColor,
      handleColor: theme.datazoomHandleColor,
      handleSize: theme.datazoomHandleWidth + '%',
      textStyle: {
        color: theme.datazoomLabelColor
      }
    },
    markPoint: (function () {
      var textStyle = {
        color: theme.markTextColor
      };
      return {
        label: textStyle,
        emphasis: {
          label: textStyle
        }
      };
    })()
  };
}

const defaultTheme = {
  "backgroundColor": "rgba(252,252,252,0)", // 背景色
  "titleColor": "#666666",  // 标题
  "subtitleColor": "#999999", // 副标题
  "textColorShow": false,
  "textColor": "#333",
  "markTextColor": "#ffffff", // 标签文字颜色
  // 主色调
  "color": [
    "#3fb1e3",
    "#6be6c1",
    "#626c91",
    "#a0a7e6",
    "#c4ebad",
    "#96dee8"
  ],
  // 描边-粗细
  "borderColor": "#ccc",
  "borderWidth": 0,
  // 视觉映射
  "visualMapColor": [
    "#2a99c9",
    "#afe8ff"
  ],
  // 图例文字颜色
  "legendTextColor": "#999999",
  // k线图
  "kColor": "#e6a0d2",
  "kColor0": "transparent",
  "kBorderColor": "#e6a0d2",
  "kBorderColor0": "#3fb1e3",
  "kBorderWidth": "2",
  // 折线
  "lineWidth": "3",
  "symbolSize": "8",
  "symbol": "emptyCircle",
  "symbolBorderWidth": "2",
  "lineSmooth": false,
  // 力导
  "graphLineWidth": "1",
  "graphLineColor": "#cccccc",
  // 
  "mapLabelColor": "#ffffff",
  "mapLabelColorE": "#3fb1e3",
  "mapBorderColor": "#aaaaaa",
  "mapBorderColorE": "#3fb1e3",
  "mapBorderWidth": 0.5,
  "mapBorderWidthE": 1,
  "mapAreaColor": "#eeeeee",
  "mapAreaColorE": "rgba(63,177,227,0.25)",
  // 坐标轴
  "axes": {
    "axisLineShow": true,
    "axisLineColor": "#cccccc",
    "axisTickShow": false,
    "axisTickColor": "#333",
    "axisLabelShow": true,
    "axisLabelColor": "#999999",
    "splitLineShow": true,
    "splitLineColor": [
      "#eeeeee"
    ],
    "splitAreaShow": false,
    "splitAreaColor": [
      "rgba(250,250,250,0.05)",
      "rgba(200,200,200,0.02)"
    ]
  },
  "axisSeperateSetting": false,
  //提示框
  "toolboxColor": "#999999",
  "toolboxEmphasisColor": "#666666",
  "tooltipAxisColor": "#cccccc",
  "tooltipAxisWidth": 1,
  //时间轴
  "timelineLineColor": "#626c91",
  "timelineLineWidth": 1,
  "timelineItemColor": "#626c91",
  "timelineItemColorE": "#626c91",
  "timelineCheckColor": "#3fb1e3",
  "timelineCheckBorderColor": "#3fb1e3",
  "timelineItemBorderWidth": 1,
  "timelineControlColor": "#626c91",
  "timelineControlBorderColor": "#626c91",
  "timelineControlBorderWidth": 0.5,
  "timelineLabelColor": "#626c91",
  //
  "datazoomBackgroundColor": "rgba(255,255,255,0)",
  "datazoomDataColor": "rgba(222,222,222,1)",
  "datazoomFillColor": "rgba(114,230,212,0.25)",
  "datazoomHandleColor": "#cccccc",
  "datazoomHandleWidth": "100",
  "datazoomLabelColor": "#999999"
}

export { defaultTheme, getTheme }
