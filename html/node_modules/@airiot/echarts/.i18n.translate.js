const md5 = require('md5');
const axios = require('axios');
const fs = require('fs');

const apiUrl = 'http://api.fanyi.baidu.com/api/trans/vip/translate';
const appid = '20230216001563735';
const secret = 'HU997LakH_PwTX0UmXUr';

const defaultLng = 'zh'

const readDirPath = __dirname + '/locales'

const upperCase = str => str.trim().slice(0, 1).toUpperCase() + str.slice(1)

const base = (from, to, q) => {
  const salt = Math.random();
  const sign = md5(appid + q + salt + secret);
  const params = { q, from, to, salt, appid, sign };
  return axios.get(apiUrl, { params });
}

const requestTranslate = (from, lngs) => {
  const list = lngs.map(lng => base(from, lng.to, lng.q))
  return Promise.all(list).then(res => {
    return res.map(r => {
      const data = r.data
      return {
        lng: data.to,
        data: data.trans_result.reduce((p, c) => {
          return { ...p, [c.src]: upperCase(c.dst) }
        }, {})
      }
    })
  }).catch(err => {
    console.log(err)
  })
}

const lngsQuery = []

const lngs = fs.readdirSync(readDirPath)
const cache = {}

lngs.forEach(lng => {
  if(lng != 'index.js'){
    const lngPath = readDirPath + `/${lng}/translation.json`
    const fileData = fs.readFileSync(lngPath)
    const current = JSON.parse(fileData)
    if (lng == 'zh_Hans') {
      const zn = { ...current }
      Object.keys(current).forEach(k => {
        if (current[k] == '__STRING_NOT_TRANSLATED__') {
          zn[k] = k
        }
      })
      fs.writeFile(lngPath, JSON.stringify(zn, null, 2), () => { })
    } else {
      let q = ''
      Object.keys(current).forEach(k => {
        if (current[k] == '__STRING_NOT_TRANSLATED__') {
          q += `${k}\n`
        } else {
          cache[lng] = { ...(cache[lng] || {}), [k]: current[k] }
        }
      })
      q != '' && lngsQuery.push({ to: lng, q })
    }
  }

})

lngsQuery.length > 0 && requestTranslate(defaultLng, lngsQuery).then(res => {
  res?.forEach(r => {
    const lngPath = readDirPath + `/${r.lng}/translation.json`
    const prevData = cache[r.lng] || {}
    fs.writeFile(lngPath, JSON.stringify(Object.assign(prevData, r.data),null,2), () => { })
  })
})

console.log('\x1B[32m', lngsQuery.length > 0 ? 'ğŸ˜Š translate success' : 'ğŸ˜Š nothing need translate')
